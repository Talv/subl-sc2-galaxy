{
    "scope": "meta.block.galaxy",
    "completions": [
        {
            "trigger": "PlayerBeaconGetTargetPoint",
            "contents": "PlayerBeaconGetTargetPoint(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "c_unitAbilChargeCountLeft",
            "contents": "c_unitAbilChargeCountLeft"
        },
        {
            "trigger": "BankSectionCreate",
            "contents": "BankSectionCreate(${1:bank b}, ${2:string section})"
        },
        {
            "trigger": "AbilityCommandGetAction",
            "contents": "AbilityCommandGetAction(${1:abilcmd inAbilCmd})"
        },
        {
            "trigger": "c_keyF11",
            "contents": "c_keyF11"
        },
        {
            "trigger": "PingSetRotation",
            "contents": "PingSetRotation(${1:int p}, ${2:fixed rotation})"
        },
        {
            "trigger": "TimerWindowSetGapWidth",
            "contents": "TimerWindowSetGapWidth(${1:int inWindow}, ${2:int inWidth})"
        },
        {
            "trigger": "DialogControlGetWidth",
            "contents": "DialogControlGetWidth(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "VictoryPanelSetVictoryText",
            "contents": "VictoryPanelSetVictoryText(${1:text inText})"
        },
        {
            "trigger": "c_unitBehaviorFlagChanneled",
            "contents": "c_unitBehaviorFlagChanneled"
        },
        {
            "trigger": "PointSet",
            "contents": "PointSet(${1:point p1}, ${2:point p2})"
        },
        {
            "trigger": "BoardTitleSetIcon",
            "contents": "BoardTitleSetIcon(${1:int inBoard}, ${2:string inIcon})"
        },
        {
            "trigger": "ActorScopeFrom",
            "contents": "ActorScopeFrom(${1:string name})"
        },
        {
            "trigger": "c_syncFrameTypeIdleWorkerButton",
            "contents": "c_syncFrameTypeIdleWorkerButton"
        },
        {
            "trigger": "c_colorComponentAlpha",
            "contents": "c_colorComponentAlpha"
        },
        {
            "trigger": "TriggerAddEventUnitAttacked",
            "contents": "TriggerAddEventUnitAttacked(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "IntToString",
            "contents": "IntToString(${1:int x})"
        },
        {
            "trigger": "DataTableSetRegion",
            "contents": "DataTableSetRegion(${1:bool global}, ${2:string name}, ${3:region val})"
        },
        {
            "trigger": "GameAttributePlayerValue",
            "contents": "GameAttributePlayerValue(${1:string name}, ${2:int player})"
        },
        {
            "trigger": "c_boardStateMinimized",
            "contents": "c_boardStateMinimized"
        },
        {
            "trigger": "DialogControlDestroy",
            "contents": "DialogControlDestroy(${1:int control})"
        },
        {
            "trigger": "UnitGroupClear",
            "contents": "UnitGroupClear(${1:unitgroup inGroup})"
        },
        {
            "trigger": "TimerWindowSetProgressColor",
            "contents": "TimerWindowSetProgressColor(${1:int inWindow}, ${2:color inColor}, ${3:int inStep})"
        },
        {
            "trigger": "c_keyEquals",
            "contents": "c_keyEquals"
        },
        {
            "trigger": "UnitFilter",
            "contents": "UnitFilter(${1:int inRequired1}, ${2:int inRequired2}, ${3:int inExcluded1}, ${4:int inExcluded2})"
        },
        {
            "trigger": "DialogControlIsEnabled",
            "contents": "DialogControlIsEnabled(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_triggerQueueRemove",
            "contents": "c_triggerQueueRemove"
        },
        {
            "trigger": "DialogControlSetPropertyAsString",
            "contents": "DialogControlSetPropertyAsString(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:string value})"
        },
        {
            "trigger": "UnitAbilityShow",
            "contents": "UnitAbilityShow(${1:unit inUnit}, ${2:string inAbil}, ${3:bool inShow})"
        },
        {
            "trigger": "c_placementTestFogMask",
            "contents": "c_placementTestFogMask"
        },
        {
            "trigger": "c_bankTypeFlag",
            "contents": "c_bankTypeFlag"
        },
        {
            "trigger": "c_keyF6",
            "contents": "c_keyF6"
        },
        {
            "trigger": "TriggerGetExecCount",
            "contents": "TriggerGetExecCount(${1:trigger t})"
        },
        {
            "trigger": "c_gameSpeedFaster",
            "contents": "c_gameSpeedFaster"
        },
        {
            "trigger": "c_pathingBuilding",
            "contents": "c_pathingBuilding"
        },
        {
            "trigger": "c_triggerControlPropertyUnit",
            "contents": "c_triggerControlPropertyUnit"
        },
        {
            "trigger": "c_noMaxCount",
            "contents": "c_noMaxCount"
        },
        {
            "trigger": "c_triggerControlPropertyChecked",
            "contents": "c_triggerControlPropertyChecked"
        },
        {
            "trigger": "CutsceneCreateNew",
            "contents": "CutsceneCreateNew(${1:string inFilePath}, ${2:point pos}, ${3:fixed inFacing}, ${4:playergroup players}, ${5:bool inAutoPlay})"
        },
        {
            "trigger": "EventUnitGetWeapon",
            "contents": "EventUnitGetWeapon()"
        },
        {
            "trigger": "c_playerAny",
            "contents": "c_playerAny"
        },
        {
            "trigger": "ActorLookAtTypeStop",
            "contents": "ActorLookAtTypeStop(${1:actor s}, ${2:string type})"
        },
        {
            "trigger": "c_messageAreaWarning",
            "contents": "c_messageAreaWarning"
        },
        {
            "trigger": "VisIsEnabled",
            "contents": "VisIsEnabled(${1:int visType})"
        },
        {
            "trigger": "CatalogEntryScope",
            "contents": "CatalogEntryScope(${1:int catalog}, ${2:string entry})"
        },
        {
            "trigger": "PingSetScale",
            "contents": "PingSetScale(${1:int p}, ${2:fixed scale})"
        },
        {
            "trigger": "c_unitPropXP",
            "contents": "c_unitPropXP"
        },
        {
            "trigger": "TimerWindowSetStyle",
            "contents": "TimerWindowSetStyle(${1:int inWindow}, ${2:int inStyle}, ${3:bool inShowElapsed})"
        },
        {
            "trigger": "FogSetDensityOverTime",
            "contents": "FogSetDensityOverTime(${1:fixed d}, ${2:fixed timeRamp})"
        },
        {
            "trigger": "c_syncFrameTypePurchasePanel",
            "contents": "c_syncFrameTypePurchasePanel"
        },
        {
            "trigger": "DialogSetObservedType",
            "contents": "DialogSetObservedType(${1:int dialog}, ${2:int observedType})"
        },
        {
            "trigger": "c_planetStateEmphasized",
            "contents": "c_planetStateEmphasized"
        },
        {
            "trigger": "UnitStatusBarClearOverride",
            "contents": "UnitStatusBarClearOverride(${1:unit inUnit})"
        },
        {
            "trigger": "MeleeInitOptions",
            "contents": "MeleeInitOptions()"
        },
        {
            "trigger": "DialogSetPosition",
            "contents": "DialogSetPosition(${1:int dialog}, ${2:int anchor}, ${3:int offsetX}, ${4:int offsetY})"
        },
        {
            "trigger": "DialogGetOffsetY",
            "contents": "DialogGetOffsetY(${1:int dialog})"
        },
        {
            "trigger": "c_unitPropShieldsMax",
            "contents": "c_unitPropShieldsMax"
        },
        {
            "trigger": "CrossCliff",
            "contents": "CrossCliff(${1:point inFrom}, ${2:point inDest})"
        },
        {
            "trigger": "PortraitSetActor",
            "contents": "PortraitSetActor(${1:int p}, ${2:string actorLink})"
        },
        {
            "trigger": "DataTableGetUnitFilter",
            "contents": "DataTableGetUnitFilter(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "IntLoopDone",
            "contents": "IntLoopDone()"
        },
        {
            "trigger": "GameAddChargeRegen",
            "contents": "GameAddChargeRegen(${1:string inCharge}, ${2:fixed inVal})"
        },
        {
            "trigger": "ActorScopeFromActor",
            "contents": "ActorScopeFromActor(${1:actor a})"
        },
        {
            "trigger": "c_actorRequestActorFind",
            "contents": "c_actorRequestActorFind"
        },
        {
            "trigger": "EnvironmentShow",
            "contents": "EnvironmentShow(${1:int inType}, ${2:bool inShow})"
        },
        {
            "trigger": "TriggerAddEventPlanetPanelBirthComplete",
            "contents": "TriggerAddEventPlanetPanelBirthComplete(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "UnitUnloadModel",
            "contents": "UnitUnloadModel(${1:unit inUnit})"
        },
        {
            "trigger": "CameraInfoGetTarget",
            "contents": "CameraInfoGetTarget(${1:camerainfo c})"
        },
        {
            "trigger": "OneIn",
            "contents": "OneIn(${1:int value})"
        },
        {
            "trigger": "c_triggerControlPropertyEnabled",
            "contents": "c_triggerControlPropertyEnabled"
        },
        {
            "trigger": "DialogControlGetPropertyAsUnit",
            "contents": "DialogControlGetPropertyAsUnit(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_customDialogResultAny",
            "contents": "c_customDialogResultAny"
        },
        {
            "trigger": "c_triggerControlPropertyText",
            "contents": "c_triggerControlPropertyText"
        },
        {
            "trigger": "PathSetLineWidth",
            "contents": "PathSetLineWidth(${1:int inPathId}, ${2:int inLocation}, ${3:fixed inWidth})"
        },
        {
            "trigger": "UnitBehaviorRemoveCategory",
            "contents": "UnitBehaviorRemoveCategory(${1:unit inUnit}, ${2:int inCategory})"
        },
        {
            "trigger": "c_unitCostTerrazine",
            "contents": "c_unitCostTerrazine"
        },
        {
            "trigger": "RegionRandomPoint",
            "contents": "RegionRandomPoint(${1:region r})"
        },
        {
            "trigger": "PlayerScoreValueEnable",
            "contents": "PlayerScoreValueEnable(${1:int player}, ${2:string value}, ${3:bool enable})"
        },
        {
            "trigger": "CharacterSheetPanelSetNameText",
            "contents": "CharacterSheetPanelSetNameText(${1:playergroup players}, ${2:text inText})"
        },
        {
            "trigger": "DialogControlSetObservedType",
            "contents": "DialogControlSetObservedType(${1:int control}, ${2:int observedType})"
        },
        {
            "trigger": "c_unitPropKills",
            "contents": "c_unitPropKills"
        },
        {
            "trigger": "TriggerAddEventCustomDialogDismissed",
            "contents": "TriggerAddEventCustomDialogDismissed(${1:trigger t}, ${2:int player}, ${3:int result})"
        },
        {
            "trigger": "c_fixedPrecisionAny",
            "contents": "c_fixedPrecisionAny"
        },
        {
            "trigger": "c_dataTypeBank",
            "contents": "c_dataTypeBank"
        },
        {
            "trigger": "c_dataTypeMarker",
            "contents": "c_dataTypeMarker"
        },
        {
            "trigger": "c_textTagEdgeBottom",
            "contents": "c_textTagEdgeBottom"
        },
        {
            "trigger": "PlayerGetColorIndex",
            "contents": "PlayerGetColorIndex(${1:int inPlayer}, ${2:bool inDefault})"
        },
        {
            "trigger": "c_syncFrameTypeCharacterSheetButton",
            "contents": "c_syncFrameTypeCharacterSheetButton"
        },
        {
            "trigger": "PortraitSetSize",
            "contents": "PortraitSetSize(${1:int p}, ${2:int width}, ${3:int height})"
        },
        {
            "trigger": "PlanetSetState",
            "contents": "PlanetSetState(${1:int inPlanetId}, ${2:int inState})"
        },
        {
            "trigger": "TriggerAddEventCutsceneBookmarkFired",
            "contents": "TriggerAddEventCutsceneBookmarkFired(${1:trigger t}, ${2:int inCutscene}, ${3:string inBookmarkName})"
        },
        {
            "trigger": "c_keyInsert",
            "contents": "c_keyInsert"
        },
        {
            "trigger": "ResearchItemGetSelected",
            "contents": "ResearchItemGetSelected(${1:int inPlayer})"
        },
        {
            "trigger": "UIDisplayMessage",
            "contents": "UIDisplayMessage(${1:playergroup players}, ${2:int messageArea}, ${3:text messageText})"
        },
        {
            "trigger": "ObjectiveGetState",
            "contents": "ObjectiveGetState(${1:int inObjective})"
        },
        {
            "trigger": "PathGetUnitType",
            "contents": "PathGetUnitType(${1:int inPathId})"
        },
        {
            "trigger": "c_unitQueuePropertyAvailable",
            "contents": "c_unitQueuePropertyAvailable"
        },
        {
            "trigger": "c_keyF7",
            "contents": "c_keyF7"
        },
        {
            "trigger": "c_invalidPathId",
            "contents": "c_invalidPathId"
        },
        {
            "trigger": "TriggerAddEventUnitStartedAttack2",
            "contents": "TriggerAddEventUnitStartedAttack2(${1:trigger t}, ${2:unitref u}, ${3:string inWeapon})"
        },
        {
            "trigger": "PurchaseItemSetTooltipText",
            "contents": "PurchaseItemSetTooltipText(${1:int inPurchaseItemId}, ${2:text inText})"
        },
        {
            "trigger": "c_key3",
            "contents": "c_key3"
        },
        {
            "trigger": "c_dataTypeActor",
            "contents": "c_dataTypeActor"
        },
        {
            "trigger": "c_helpPanelPageTips",
            "contents": "c_helpPanelPageTips"
        },
        {
            "trigger": "DataTableSetFixed",
            "contents": "DataTableSetFixed(${1:bool global}, ${2:string name}, ${3:fixed val})"
        },
        {
            "trigger": "DataTableSetBank",
            "contents": "DataTableSetBank(${1:bool global}, ${2:string name}, ${3:bank val})"
        },
        {
            "trigger": "ResearchItemSetSlot",
            "contents": "ResearchItemSetSlot(${1:int inResearchItemId}, ${2:int inSlot})"
        },
        {
            "trigger": "DataTableSetReply",
            "contents": "DataTableSetReply(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "c_gameMenuDialogEndGameButton",
            "contents": "c_gameMenuDialogEndGameButton"
        },
        {
            "trigger": "c_nydusLinkAccountPurchase",
            "contents": "c_nydusLinkAccountPurchase"
        },
        {
            "trigger": "TechTreeUpgradeIsAllowed",
            "contents": "TechTreeUpgradeIsAllowed(${1:int player}, ${2:string upgradeType})"
        },
        {
            "trigger": "ConversationDataSaveNodeState",
            "contents": "ConversationDataSaveNodeState(${1:string convId}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "UnitAddChargeRegen",
            "contents": "UnitAddChargeRegen(${1:unit inUnit}, ${2:string inCharge}, ${3:fixed inVal})"
        },
        {
            "trigger": "TriggerQueueIsEmpty",
            "contents": "TriggerQueueIsEmpty()"
        },
        {
            "trigger": "TechTreeAbilityAllow",
            "contents": "TechTreeAbilityAllow(${1:int player}, ${2:abilcmd inAbilCmd}, ${3:bool allow})"
        },
        {
            "trigger": "c_objectiveStateCompleted",
            "contents": "c_objectiveStateCompleted"
        },
        {
            "trigger": "UserDataResetInstance",
            "contents": "UserDataResetInstance(${1:string inType}, ${2:string inInstance})"
        },
        {
            "trigger": "AchievementPanelSetCategory",
            "contents": "AchievementPanelSetCategory(${1:playergroup players}, ${2:string name})"
        },
        {
            "trigger": "BattleReportSetSceneText",
            "contents": "BattleReportSetSceneText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "UnitSetAIOption",
            "contents": "UnitSetAIOption(${1:unit inUnit}, ${2:int inOption}, ${3:bool inVal})"
        },
        {
            "trigger": "UnitGroupLoopEnd",
            "contents": "UnitGroupLoopEnd()"
        },
        {
            "trigger": "c_triggerControlEventTypeHotkeyPressed",
            "contents": "c_triggerControlEventTypeHotkeyPressed"
        },
        {
            "trigger": "c_triggerObservedTypeObservedPlayerId",
            "contents": "c_triggerObservedTypeObservedPlayerId"
        },
        {
            "trigger": "c_playerPropCreditsSpent",
            "contents": "c_playerPropCreditsSpent"
        },
        {
            "trigger": "EventPingedMinimap",
            "contents": "EventPingedMinimap()"
        },
        {
            "trigger": "TextTagCreate",
            "contents": "TextTagCreate(${1:text inText}, ${2:int inFontSize}, ${3:point inPoint}, ${4:fixed inHeightOffset}, ${5:bool inShow}, ${6:bool useFogofWar}, ${7:playergroup inPlayers})"
        },
        {
            "trigger": "c_unitPropLifeArmor",
            "contents": "c_unitPropLifeArmor"
        },
        {
            "trigger": "HelpPanelShowTechTreeRace",
            "contents": "HelpPanelShowTechTreeRace(${1:playergroup inPlayerGroup}, ${2:string inRace}, ${3:bool inShow})"
        },
        {
            "trigger": "c_messageAreaChat",
            "contents": "c_messageAreaChat"
        },
        {
            "trigger": "UnitXPGainEnable",
            "contents": "UnitXPGainEnable(${1:unit inUnit}, ${2:string inBehavior}, ${3:bool inEnable})"
        },
        {
            "trigger": "AchievementsDisabled",
            "contents": "AchievementsDisabled(${1:int player})"
        },
        {
            "trigger": "BoardShowAll",
            "contents": "BoardShowAll(${1:bool inShow}, ${2:playergroup inPlayers})"
        },
        {
            "trigger": "TriggerAddEventGameCreditsFinished",
            "contents": "TriggerAddEventGameCreditsFinished(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "PlayerStartLocation",
            "contents": "PlayerStartLocation(${1:int inPlayer})"
        },
        {
            "trigger": "c_gameCheatNoDefeat",
            "contents": "c_gameCheatNoDefeat"
        },
        {
            "trigger": "MercenarySetModelLink",
            "contents": "MercenarySetModelLink(${1:int inMercenaryId}, ${2:string inModelLink})"
        },
        {
            "trigger": "c_triggerControlPropertyForceVisible",
            "contents": "c_triggerControlPropertyForceVisible"
        },
        {
            "trigger": "DialogControlLastCreated",
            "contents": "DialogControlLastCreated()"
        },
        {
            "trigger": "TriggerSendEvent",
            "contents": "TriggerSendEvent(${1:string name})"
        },
        {
            "trigger": "UnitDamage",
            "contents": "UnitDamage(${1:unit inAttacker}, ${2:string inEffect}, ${3:unit inVictim}, ${4:fixed inBonus})"
        },
        {
            "trigger": "CutsceneStop",
            "contents": "CutsceneStop(${1:int inCutscene})"
        },
        {
            "trigger": "c_dataTypeInt",
            "contents": "c_dataTypeInt"
        },
        {
            "trigger": "c_keyApostrophe",
            "contents": "c_keyApostrophe"
        },
        {
            "trigger": "c_syncFrameTypeAchievementMenuButton",
            "contents": "c_syncFrameTypeAchievementMenuButton"
        },
        {
            "trigger": "c_syncFrameTypeControlGroupPanel",
            "contents": "c_syncFrameTypeControlGroupPanel"
        },
        {
            "trigger": "c_unitStateUsingSupply",
            "contents": "c_unitStateUsingSupply"
        },
        {
            "trigger": "TimerWindowLastCreated",
            "contents": "TimerWindowLastCreated()"
        },
        {
            "trigger": "ActorFromActor",
            "contents": "ActorFromActor(${1:actor a}, ${2:string name})"
        },
        {
            "trigger": "UnitAbilityGetChargeUsed",
            "contents": "UnitAbilityGetChargeUsed(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCharge})"
        },
        {
            "trigger": "c_invalidPurchaseGroupId",
            "contents": "c_invalidPurchaseGroupId"
        },
        {
            "trigger": "ResearchTierSetSlot",
            "contents": "ResearchTierSetSlot(${1:int inResearchTierId}, ${2:int inSlot})"
        },
        {
            "trigger": "DataTableSetUnitFilter",
            "contents": "DataTableSetUnitFilter(${1:bool global}, ${2:string name}, ${3:unitfilter val})"
        },
        {
            "trigger": "c_unitStateCursorable",
            "contents": "c_unitStateCursorable"
        },
        {
            "trigger": "RegionSetOffset",
            "contents": "RegionSetOffset(${1:region r}, ${2:point offset})"
        },
        {
            "trigger": "UnitGetFacing",
            "contents": "UnitGetFacing(${1:unit inUnit})"
        },
        {
            "trigger": "c_unitInventoryChangeLoses",
            "contents": "c_unitInventoryChangeLoses"
        },
        {
            "trigger": "EventConversationState",
            "contents": "EventConversationState()"
        },
        {
            "trigger": "c_gameMenuDialogOptionsButton",
            "contents": "c_gameMenuDialogOptionsButton"
        },
        {
            "trigger": "BankLastCreated",
            "contents": "BankLastCreated()"
        },
        {
            "trigger": "c_stringAnywhere",
            "contents": "c_stringAnywhere"
        },
        {
            "trigger": "PowerIsProvidedBy",
            "contents": "PowerIsProvidedBy(${1:int inPlayer}, ${2:point inPos}, ${3:string inLink}, ${4:unit inSource}, ${5:int inMinLevel})"
        },
        {
            "trigger": "EventGenericName",
            "contents": "EventGenericName()"
        },
        {
            "trigger": "PlanetSetPlanetModelLink",
            "contents": "PlanetSetPlanetModelLink(${1:int inPlanetId}, ${2:string inPlanetModelLink})"
        },
        {
            "trigger": "UnitTechTreeUnitCount",
            "contents": "UnitTechTreeUnitCount(${1:unit inUnit}, ${2:string unitType}, ${3:int countType})"
        },
        {
            "trigger": "MakeMsgAnimGroupApply",
            "contents": "MakeMsgAnimGroupApply(${1:string animGroup}, ${2:string atApply}, ${3:string atRemove}, ${4:int animGroupApplyFlags}, ${5:fixed timeVariant}, ${6:int timeType})"
        },
        {
            "trigger": "c_uiCommandAllowHotkeys",
            "contents": "c_uiCommandAllowHotkeys"
        },
        {
            "trigger": "EventKeyPressed",
            "contents": "EventKeyPressed()"
        },
        {
            "trigger": "EventPlayerEffectUsedUnitType",
            "contents": "EventPlayerEffectUsedUnitType(${1:int inLocation})"
        },
        {
            "trigger": "TriggerAddEventUnitRange",
            "contents": "TriggerAddEventUnitRange(${1:trigger t}, ${2:unitref u}, ${3:unit fromUnit}, ${4:fixed range}, ${5:bool state})"
        },
        {
            "trigger": "c_transmissionDurationAdd",
            "contents": "c_transmissionDurationAdd"
        },
        {
            "trigger": "UnitAbilityGetCooldown",
            "contents": "UnitAbilityGetCooldown(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCooldown})"
        },
        {
            "trigger": "ActorScopeFromUnit",
            "contents": "ActorScopeFromUnit(${1:unit u})"
        },
        {
            "trigger": "EventUnitOwnerOld",
            "contents": "EventUnitOwnerOld()"
        },
        {
            "trigger": "c_unitPropBountyTerrazine",
            "contents": "c_unitPropBountyTerrazine"
        },
        {
            "trigger": "c_soundIndexAny",
            "contents": "c_soundIndexAny"
        },
        {
            "trigger": "UnitAbilitySpend",
            "contents": "UnitAbilitySpend(${1:unit inUnit}, ${2:abilcmd inAbilCmd}, ${3:int inLocation})"
        },
        {
            "trigger": "c_dataTypeFixed",
            "contents": "c_dataTypeFixed"
        },
        {
            "trigger": "EventUnitDamageSourceUnit",
            "contents": "EventUnitDamageSourceUnit()"
        },
        {
            "trigger": "ConversationDataRun",
            "contents": "ConversationDataRun(${1:string convId}, ${2:playergroup players}, ${3:int skipType}, ${4:bool waitUntilDone})"
        },
        {
            "trigger": "PlayerSetLighting",
            "contents": "PlayerSetLighting(${1:int inPlayer}, ${2:string inLight}, ${3:fixed inBlendTime})"
        },
        {
            "trigger": "c_playerPropTerrazine",
            "contents": "c_playerPropTerrazine"
        },
        {
            "trigger": "PreloadMovie",
            "contents": "PreloadMovie(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "c_effectAmountDodged",
            "contents": "c_effectAmountDodged"
        },
        {
            "trigger": "CatalogFieldValueCount",
            "contents": "CatalogFieldValueCount(${1:int catalog}, ${2:string entry}, ${3:string fieldPath}, ${4:int player})"
        },
        {
            "trigger": "PingSetUnit",
            "contents": "PingSetUnit(${1:int p}, ${2:unit u})"
        },
        {
            "trigger": "PlayerGroupCopy",
            "contents": "PlayerGroupCopy(${1:playergroup inGroup})"
        },
        {
            "trigger": "c_triggerControlPropertyRotation",
            "contents": "c_triggerControlPropertyRotation"
        },
        {
            "trigger": "AbilityCommandGetCommand",
            "contents": "AbilityCommandGetCommand(${1:abilcmd inAbilCmd})"
        },
        {
            "trigger": "GameCheatIsAllowed",
            "contents": "GameCheatIsAllowed(${1:int cheat})"
        },
        {
            "trigger": "UnitSelect",
            "contents": "UnitSelect(${1:unit inUnit}, ${2:int inPlayer}, ${3:bool inSelect})"
        },
        {
            "trigger": "RegionAttachToUnit",
            "contents": "RegionAttachToUnit(${1:region r}, ${2:unit u}, ${3:point offset})"
        },
        {
            "trigger": "c_placementTestCliffMask",
            "contents": "c_placementTestCliffMask"
        },
        {
            "trigger": "c_animBracketStartFlagInstant",
            "contents": "c_animBracketStartFlagInstant"
        },
        {
            "trigger": "PlayerScoreValueSetFromFixed",
            "contents": "PlayerScoreValueSetFromFixed(${1:int player}, ${2:string value}, ${3:fixed amount})"
        },
        {
            "trigger": "c_gameCheatCredits",
            "contents": "c_gameCheatCredits"
        },
        {
            "trigger": "CameraPan",
            "contents": "CameraPan(${1:int player}, ${2:point p}, ${3:fixed duration}, ${4:fixed velocity}, ${5:fixed decelerate}, ${6:bool smart})"
        },
        {
            "trigger": "c_triggerControlEventTypeSelectionDoubleClicked",
            "contents": "c_triggerControlEventTypeSelectionDoubleClicked"
        },
        {
            "trigger": "c_key2",
            "contents": "c_key2"
        },
        {
            "trigger": "c_triggerControlPropertyAcceptMouseTarget",
            "contents": "c_triggerControlPropertyAcceptMouseTarget"
        },
        {
            "trigger": "PointWithOffsetPolar",
            "contents": "PointWithOffsetPolar(${1:point p}, ${2:fixed distance}, ${3:fixed angle})"
        },
        {
            "trigger": "c_mercenaryStateHidden",
            "contents": "c_mercenaryStateHidden"
        },
        {
            "trigger": "PlanetSetTechnologyName",
            "contents": "PlanetSetTechnologyName(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "VictoryPanelSetRewardText",
            "contents": "VictoryPanelSetRewardText(${1:text inText})"
        },
        {
            "trigger": "UICustomMenuItemVisible",
            "contents": "UICustomMenuItemVisible(${1:int inPlayer}, ${2:int inMenuItemType})"
        },
        {
            "trigger": "UIClearBattleNetButtonOffset",
            "contents": "UIClearBattleNetButtonOffset(${1:playergroup inPlayers})"
        },
        {
            "trigger": "UnitCreate",
            "contents": "UnitCreate(${1:int inCount}, ${2:string inUnitType}, ${3:int inCreateStyle}, ${4:int inPlayer}, ${5:point inPos}, ${6:fixed inFacing})"
        },
        {
            "trigger": "CreepSetSpeed",
            "contents": "CreepSetSpeed(${1:int inType}, ${2:fixed inPercent})"
        },
        {
            "trigger": "ConversationDataChoiceSetPicked",
            "contents": "ConversationDataChoiceSetPicked(${1:string convId}, ${2:string choiceId}, ${3:bool picked})"
        },
        {
            "trigger": "c_keyF5",
            "contents": "c_keyF5"
        },
        {
            "trigger": "ResearchCategoryCreate",
            "contents": "ResearchCategoryCreate(${1:playergroup inPlayerGroup}, ${2:int inSlot})"
        },
        {
            "trigger": "PurchaseGroupSetUnitLink",
            "contents": "PurchaseGroupSetUnitLink(${1:int inPurchaseGroupId}, ${2:string inUnitLink})"
        },
        {
            "trigger": "TimerWindowShowProgressBar",
            "contents": "TimerWindowShowProgressBar(${1:int inWindow}, ${2:bool inShow})"
        },
        {
            "trigger": "c_unitQueueTimeElapsed",
            "contents": "c_unitQueueTimeElapsed"
        },
        {
            "trigger": "TechTreeUpgradeAddLevel",
            "contents": "TechTreeUpgradeAddLevel(${1:int player}, ${2:string upgradeType}, ${3:int levels})"
        },
        {
            "trigger": "ConversationDataStateMoviePath",
            "contents": "ConversationDataStateMoviePath(${1:string stateIndex})"
        },
        {
            "trigger": "TriggerAddEventMouseMoved",
            "contents": "TriggerAddEventMouseMoved(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_gameCheatFree",
            "contents": "c_gameCheatFree"
        },
        {
            "trigger": "c_researchItemStateDisabled",
            "contents": "c_researchItemStateDisabled"
        },
        {
            "trigger": "MoviePlayAfterGame",
            "contents": "MoviePlayAfterGame(${1:playergroup players}, ${2:string assetLink})"
        },
        {
            "trigger": "c_gameCheatCategoryPublic",
            "contents": "c_gameCheatCategoryPublic"
        },
        {
            "trigger": "UISetMiniMapCameraFoVVisible",
            "contents": "UISetMiniMapCameraFoVVisible(${1:bool visible})"
        },
        {
            "trigger": "ATan2",
            "contents": "ATan2(${1:fixed y}, ${2:fixed x})"
        },
        {
            "trigger": "c_dataTypePoint",
            "contents": "c_dataTypePoint"
        },
        {
            "trigger": "HelpPanelAddTutorial",
            "contents": "HelpPanelAddTutorial(${1:playergroup players}, ${2:text titleText}, ${3:text descriptionText}, ${4:string iconPath}, ${5:string moviePath}, ${6:bool flashing})"
        },
        {
            "trigger": "AbilityCommand",
            "contents": "AbilityCommand(${1:string inAbil}, ${2:int inCmdIndex})"
        },
        {
            "trigger": "c_unitStateInsideTransport",
            "contents": "c_unitStateInsideTransport"
        },
        {
            "trigger": "c_actorIntersectAgainstRadiusVisual",
            "contents": "c_actorIntersectAgainstRadiusVisual"
        },
        {
            "trigger": "ResearchItemSetDescriptionText",
            "contents": "ResearchItemSetDescriptionText(${1:int inResearchItemId}, ${2:text inText})"
        },
        {
            "trigger": "BankOptionGet",
            "contents": "BankOptionGet(${1:bank b}, ${2:int option})"
        },
        {
            "trigger": "OrderSetPlayer",
            "contents": "OrderSetPlayer(${1:order inOrder}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_planetPanelContactButtonStatePlay",
            "contents": "c_planetPanelContactButtonStatePlay"
        },
        {
            "trigger": "c_keyPageDown",
            "contents": "c_keyPageDown"
        },
        {
            "trigger": "PlanetDestroy",
            "contents": "PlanetDestroy(${1:int inPlanetId})"
        },
        {
            "trigger": "UnitClearSelection",
            "contents": "UnitClearSelection(${1:int inPlayer})"
        },
        {
            "trigger": "DataTableGetObjective",
            "contents": "DataTableGetObjective(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "ActorLookAtStart",
            "contents": "ActorLookAtStart(${1:actor s}, ${2:string lookAt}, ${3:int weight}, ${4:fixed time}, ${5:actor t})"
        },
        {
            "trigger": "UIStatusBarOverride",
            "contents": "UIStatusBarOverride(${1:playergroup inPlayers}, ${2:int group})"
        },
        {
            "trigger": "TriggerAddEventUnitCargo",
            "contents": "TriggerAddEventUnitCargo(${1:trigger t}, ${2:unitref u}, ${3:bool state})"
        },
        {
            "trigger": "SoundChannelDSPInsert",
            "contents": "SoundChannelDSPInsert(${1:playergroup players}, ${2:int channel}, ${3:string dsp})"
        },
        {
            "trigger": "GameGetSpeedValueMinimum",
            "contents": "GameGetSpeedValueMinimum()"
        },
        {
            "trigger": "c_triggerControlPropertyAnimTime",
            "contents": "c_triggerControlPropertyAnimTime"
        },
        {
            "trigger": "c_unitAbilStagePause",
            "contents": "c_unitAbilStagePause"
        },
        {
            "trigger": "BoardLastCreated",
            "contents": "BoardLastCreated()"
        },
        {
            "trigger": "UnitGroupAddUnitGroup",
            "contents": "UnitGroupAddUnitGroup(${1:unitgroup inGroup}, ${2:unitgroup inAddGroup})"
        },
        {
            "trigger": "EventMouseClickedPosXWorld",
            "contents": "EventMouseClickedPosXWorld()"
        },
        {
            "trigger": "DialogControlGetRelativeControl",
            "contents": "DialogControlGetRelativeControl(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "EventUnitTargetUnit",
            "contents": "EventUnitTargetUnit()"
        },
        {
            "trigger": "c_unitStateTurnSuppressed",
            "contents": "c_unitStateTurnSuppressed"
        },
        {
            "trigger": "HelpPanelEnableTechGlossaryButton",
            "contents": "HelpPanelEnableTechGlossaryButton(${1:playergroup inPlayerGroup}, ${2:bool inEnable})"
        },
        {
            "trigger": "PlayerGroupHasPlayer",
            "contents": "PlayerGroupHasPlayer(${1:playergroup inGroup}, ${2:int inPlayer})"
        },
        {
            "trigger": "UnitGroupFilterPlayer",
            "contents": "UnitGroupFilterPlayer(${1:unitgroup g}, ${2:int player}, ${3:int maxCount})"
        },
        {
            "trigger": "PortraitSetBackgroundVisible",
            "contents": "PortraitSetBackgroundVisible(${1:int p}, ${2:bool isBackgroundVisible})"
        },
        {
            "trigger": "GameTerrainSet",
            "contents": "GameTerrainSet()"
        },
        {
            "trigger": "SoundtrackSetDelay",
            "contents": "SoundtrackSetDelay(${1:playergroup players}, ${2:int category}, ${3:fixed delay})"
        },
        {
            "trigger": "c_messageAreaCheat",
            "contents": "c_messageAreaCheat"
        },
        {
            "trigger": "DataTableGetString",
            "contents": "DataTableGetString(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UserDataSetInt",
            "contents": "UserDataSetInt(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:int inValue})"
        },
        {
            "trigger": "TransmissionLastSent",
            "contents": "TransmissionLastSent()"
        },
        {
            "trigger": "c_meleeOptionVictory",
            "contents": "c_meleeOptionVictory"
        },
        {
            "trigger": "MeleeInitUnits",
            "contents": "MeleeInitUnits()"
        },
        {
            "trigger": "c_localSelectionTypeUnknown",
            "contents": "c_localSelectionTypeUnknown"
        },
        {
            "trigger": "DialogControlGetType",
            "contents": "DialogControlGetType(${1:int control})"
        },
        {
            "trigger": "TriggerAddEventResearchPanelSelectionChanged",
            "contents": "TriggerAddEventResearchPanelSelectionChanged(${1:trigger t}, ${2:int player}, ${3:int inResearchItemId})"
        },
        {
            "trigger": "CampaignInitAI",
            "contents": "CampaignInitAI()"
        },
        {
            "trigger": "UnitInventoryMove",
            "contents": "UnitInventoryMove(${1:unit inItem}, ${2:int inContainer}, ${3:int inSlot})"
        },
        {
            "trigger": "c_purchaseGroupStateDisabled",
            "contents": "c_purchaseGroupStateDisabled"
        },
        {
            "trigger": "c_playerPropResearchPoints",
            "contents": "c_playerPropResearchPoints"
        },
        {
            "trigger": "c_triggerControlPropertyTextWriteoutDuration",
            "contents": "c_triggerControlPropertyTextWriteoutDuration"
        },
        {
            "trigger": "CharacterSheetPanelSetDescriptionText",
            "contents": "CharacterSheetPanelSetDescriptionText(${1:playergroup players}, ${2:text inText})"
        },
        {
            "trigger": "OrderGetTargetUnit",
            "contents": "OrderGetTargetUnit(${1:order inOrder})"
        },
        {
            "trigger": "PurchaseGroupSetIconFilePath",
            "contents": "PurchaseGroupSetIconFilePath(${1:int inPurchaseGroupId}, ${2:string inFilePath})"
        },
        {
            "trigger": "EventPingUnit",
            "contents": "EventPingUnit()"
        },
        {
            "trigger": "c_orderTargetItem",
            "contents": "c_orderTargetItem"
        },
        {
            "trigger": "PlanetPanelSetBackButtonText",
            "contents": "PlanetPanelSetBackButtonText(${1:playergroup players}, ${2:text inText})"
        },
        {
            "trigger": "c_timerWindowColorTitle",
            "contents": "c_timerWindowColorTitle"
        },
        {
            "trigger": "c_cameraValueDepthOfField",
            "contents": "c_cameraValueDepthOfField"
        },
        {
            "trigger": "c_textureVideoPlayFlagLooping",
            "contents": "c_textureVideoPlayFlagLooping"
        },
        {
            "trigger": "c_techCountInProgressOnly",
            "contents": "c_techCountInProgressOnly"
        },
        {
            "trigger": "c_triggerControlPropertyOffsetX",
            "contents": "c_triggerControlPropertyOffsetX"
        },
        {
            "trigger": "c_dataTypeTransmission",
            "contents": "c_dataTypeTransmission"
        },
        {
            "trigger": "c_keyF4",
            "contents": "c_keyF4"
        },
        {
            "trigger": "c_cameraMoveReasonMinimap",
            "contents": "c_cameraMoveReasonMinimap"
        },
        {
            "trigger": "c_keyS",
            "contents": "c_keyS"
        },
        {
            "trigger": "c_cameraRotationPitch",
            "contents": "c_cameraRotationPitch"
        },
        {
            "trigger": "ObjectiveGetPlayerGroup",
            "contents": "ObjectiveGetPlayerGroup(${1:int inObjective})"
        },
        {
            "trigger": "UnitGetPropertyFixed",
            "contents": "UnitGetPropertyFixed(${1:unit inUnit}, ${2:int inProp}, ${3:bool inCurrent})"
        },
        {
            "trigger": "UnitBehaviorEffectPlayer",
            "contents": "UnitBehaviorEffectPlayer(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inLocation}, ${4:int inIndex})"
        },
        {
            "trigger": "ATan",
            "contents": "ATan(${1:fixed x})"
        },
        {
            "trigger": "DataTableGetRegion",
            "contents": "DataTableGetRegion(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_keyF9",
            "contents": "c_keyF9"
        },
        {
            "trigger": "BattleReportSetMissionText",
            "contents": "BattleReportSetMissionText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "c_boardStateShowHeader",
            "contents": "c_boardStateShowHeader"
        },
        {
            "trigger": "MeleeGetOption",
            "contents": "MeleeGetOption(${1:int player}, ${2:int option})"
        },
        {
            "trigger": "EventConversationReply",
            "contents": "EventConversationReply()"
        },
        {
            "trigger": "ConversationDataStateAttachPoint",
            "contents": "ConversationDataStateAttachPoint(${1:string stateIndex})"
        },
        {
            "trigger": "MakeMsgAnimBracketResume",
            "contents": "MakeMsgAnimBracketResume(${1:string animName}, ${2:int animTransitionFlags}, ${3:fixed timeVariant}, ${4:int timeType})"
        },
        {
            "trigger": "c_keyModifierStateIgnore",
            "contents": "c_keyModifierStateIgnore"
        },
        {
            "trigger": "c_scaleStretch",
            "contents": "c_scaleStretch"
        },
        {
            "trigger": "c_triggerControlEventTypeDoubleClick",
            "contents": "c_triggerControlEventTypeDoubleClick"
        },
        {
            "trigger": "UserDataGetInt",
            "contents": "UserDataGetInt(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "UISetNextLoadingScreenImageScale",
            "contents": "UISetNextLoadingScreenImageScale(${1:int imageScale})"
        },
        {
            "trigger": "UnitAbilityExists",
            "contents": "UnitAbilityExists(${1:unit inUnit}, ${2:string inAbil})"
        },
        {
            "trigger": "AbsI",
            "contents": "AbsI(${1:int x})"
        },
        {
            "trigger": "BoardItemSetAlignment",
            "contents": "BoardItemSetAlignment(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:int inAlign})"
        },
        {
            "trigger": "c_pathingGround",
            "contents": "c_pathingGround"
        },
        {
            "trigger": "OrderSetAutoCast",
            "contents": "OrderSetAutoCast(${1:abilcmd inAbilCmd}, ${2:bool inAutoCastOn})"
        },
        {
            "trigger": "TriggerAddEventUnitAbility",
            "contents": "TriggerAddEventUnitAbility(${1:trigger t}, ${2:unitref u}, ${3:abilcmd a}, ${4:int stage}, ${5:bool includeSharedAbils})"
        },
        {
            "trigger": "DialogIsModal",
            "contents": "DialogIsModal(${1:int dialog})"
        },
        {
            "trigger": "c_triggerControlPropertyAlphaMask",
            "contents": "c_triggerControlPropertyAlphaMask"
        },
        {
            "trigger": "EventPurchaseMade",
            "contents": "EventPurchaseMade()"
        },
        {
            "trigger": "PlanetSetBonusTitle",
            "contents": "PlanetSetBonusTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_wtcSquareRoot",
            "contents": "c_wtcSquareRoot"
        },
        {
            "trigger": "PurchaseItemSetNameText",
            "contents": "PurchaseItemSetNameText(${1:int inPurchaseItemId}, ${2:text inText})"
        },
        {
            "trigger": "c_cmdActionTarget",
            "contents": "c_cmdActionTarget"
        },
        {
            "trigger": "c_syncFrameTypeLast",
            "contents": "c_syncFrameTypeLast"
        },
        {
            "trigger": "c_unitQueueTimeTotal",
            "contents": "c_unitQueueTimeTotal"
        },
        {
            "trigger": "TriggerDebugSetTypeColor",
            "contents": "TriggerDebugSetTypeColor(${1:int type}, ${2:color c})"
        },
        {
            "trigger": "DataTableSetOrder",
            "contents": "DataTableSetOrder(${1:bool global}, ${2:string name}, ${3:order val})"
        },
        {
            "trigger": "DataTableGetPlanet",
            "contents": "DataTableGetPlanet(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "PingSetPosition",
            "contents": "PingSetPosition(${1:int p}, ${2:point position})"
        },
        {
            "trigger": "UISetChallengeMode",
            "contents": "UISetChallengeMode(${1:playergroup players}, ${2:bool challengeMode})"
        },
        {
            "trigger": "BattleReportGetResearchTitle",
            "contents": "BattleReportGetResearchTitle(${1:int inBattleReportId})"
        },
        {
            "trigger": "DialogGetWidth",
            "contents": "DialogGetWidth(${1:int dialog})"
        },
        {
            "trigger": "c_unitStateTargetable",
            "contents": "c_unitStateTargetable"
        },
        {
            "trigger": "c_gameSpeedFast",
            "contents": "c_gameSpeedFast"
        },
        {
            "trigger": "UnitSetProgressStage",
            "contents": "UnitSetProgressStage(${1:unit inUnit}, ${2:int inSlot}, ${3:int inStage})"
        },
        {
            "trigger": "ObjectiveSetPlayerGroup",
            "contents": "ObjectiveSetPlayerGroup(${1:int inObjective}, ${2:playergroup inPlayers})"
        },
        {
            "trigger": "SoundChannelSetVolume",
            "contents": "SoundChannelSetVolume(${1:playergroup players}, ${2:int channel}, ${3:fixed volume}, ${4:fixed duration})"
        },
        {
            "trigger": "DataTableGetSoundLink",
            "contents": "DataTableGetSoundLink(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_playerPropResearchPointsSpent",
            "contents": "c_playerPropResearchPointsSpent"
        },
        {
            "trigger": "c_stringReplaceAll",
            "contents": "c_stringReplaceAll"
        },
        {
            "trigger": "StoryMode",
            "contents": "StoryMode(${1:playergroup players}, ${2:bool storyMode})"
        },
        {
            "trigger": "ConversationDataResetStateValues",
            "contents": "ConversationDataResetStateValues(${1:string stateId})"
        },
        {
            "trigger": "SoundStopAllModelSounds",
            "contents": "SoundStopAllModelSounds()"
        },
        {
            "trigger": "OrderSetTargetPassenger",
            "contents": "OrderSetTargetPassenger(${1:order inOrder}, ${2:unit inUnit})"
        },
        {
            "trigger": "UnitSetCustomValue",
            "contents": "UnitSetCustomValue(${1:unit inUnit}, ${2:int inIndex}, ${3:fixed inVal})"
        },
        {
            "trigger": "PurchaseGroupDestroy",
            "contents": "PurchaseGroupDestroy(${1:int inPurchaseGroupId})"
        },
        {
            "trigger": "BankSectionCount",
            "contents": "BankSectionCount(${1:bank b})"
        },
        {
            "trigger": "PortraitForceTransition",
            "contents": "PortraitForceTransition(${1:int p}, ${2:bool isVisible}, ${3:bool isInstant})"
        },
        {
            "trigger": "TechTreeRequirementsEnabled",
            "contents": "TechTreeRequirementsEnabled(${1:int player})"
        },
        {
            "trigger": "UISetFrameVisible",
            "contents": "UISetFrameVisible(${1:playergroup inPlayers}, ${2:int inFrameType}, ${3:bool inVisible})"
        },
        {
            "trigger": "c_unitDamageTypeSplash",
            "contents": "c_unitDamageTypeSplash"
        },
        {
            "trigger": "DialogIsVisible",
            "contents": "DialogIsVisible(${1:int dialog}, ${2:int player})"
        },
        {
            "trigger": "DialogSetTransparency",
            "contents": "DialogSetTransparency(${1:int dialog}, ${2:fixed inTransparency})"
        },
        {
            "trigger": "c_transmissionDurationSet",
            "contents": "c_transmissionDurationSet"
        },
        {
            "trigger": "c_syncFrameTypeHeroPanel",
            "contents": "c_syncFrameTypeHeroPanel"
        },
        {
            "trigger": "UnitBehaviorCountAll",
            "contents": "UnitBehaviorCountAll(${1:unit inUnit})"
        },
        {
            "trigger": "c_triggerControlTypeInvalid",
            "contents": "c_triggerControlTypeInvalid"
        },
        {
            "trigger": "MovieAddTriggerFunction",
            "contents": "MovieAddTriggerFunction(${1:string function}, ${2:int timeStamp})"
        },
        {
            "trigger": "c_bankTypeUnit",
            "contents": "c_bankTypeUnit"
        },
        {
            "trigger": "BoardItemSetText",
            "contents": "BoardItemSetText(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:text inText})"
        },
        {
            "trigger": "BoardSetColumnCount",
            "contents": "BoardSetColumnCount(${1:int inBoard}, ${2:int inCols})"
        },
        {
            "trigger": "ActorScopeFromPortrait",
            "contents": "ActorScopeFromPortrait(${1:int p})"
        },
        {
            "trigger": "EventUnitCreatedUnit",
            "contents": "EventUnitCreatedUnit()"
        },
        {
            "trigger": "GameSaveCreate",
            "contents": "GameSaveCreate(${1:text inName}, ${2:text inDescription}, ${3:string inImage}, ${4:bool inAutomatic})"
        },
        {
            "trigger": "DataTableGetColor",
            "contents": "DataTableGetColor(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UserDataLoadInstance",
            "contents": "UserDataLoadInstance(${1:string inType}, ${2:string inInstance}, ${3:bank inBank}, ${4:string inSection})"
        },
        {
            "trigger": "BattleReportPanelSetSelectedBattleReport",
            "contents": "BattleReportPanelSetSelectedBattleReport(${1:playergroup players}, ${2:int inBattleReport})"
        },
        {
            "trigger": "GameSetSpeedValue",
            "contents": "GameSetSpeedValue(${1:int speed})"
        },
        {
            "trigger": "GameSetAbsoluteTimeRemainingPaused",
            "contents": "GameSetAbsoluteTimeRemainingPaused(${1:bool inPaused})"
        },
        {
            "trigger": "c_textureSlotComponentDiffuse",
            "contents": "c_textureSlotComponentDiffuse"
        },
        {
            "trigger": "BankValueGetAsUnit",
            "contents": "BankValueGetAsUnit(${1:bank b}, ${2:string section}, ${3:string key}, ${4:int player}, ${5:point p}, ${6:fixed facing})"
        },
        {
            "trigger": "ActorRefSet",
            "contents": "ActorRefSet(${1:actor a}, ${2:string refName}, ${3:actor aValue})"
        },
        {
            "trigger": "c_unitInventoryChangeSells",
            "contents": "c_unitInventoryChangeSells"
        },
        {
            "trigger": "DataTableGetTimer",
            "contents": "DataTableGetTimer(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "DialogControlSetPropertyAsFixed",
            "contents": "DialogControlSetPropertyAsFixed(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:fixed value})"
        },
        {
            "trigger": "PointGetY",
            "contents": "PointGetY(${1:point p})"
        },
        {
            "trigger": "c_triggerControlPropertySelectionIndex",
            "contents": "c_triggerControlPropertySelectionIndex"
        },
        {
            "trigger": "c_keyC",
            "contents": "c_keyC"
        },
        {
            "trigger": "c_gameSpeedSlow",
            "contents": "c_gameSpeedSlow"
        },
        {
            "trigger": "PortraitVisible",
            "contents": "PortraitVisible(${1:int p}, ${2:int player})"
        },
        {
            "trigger": "c_dataTypeRevealer",
            "contents": "c_dataTypeRevealer"
        },
        {
            "trigger": "c_mercenaryStateDisabled",
            "contents": "c_mercenaryStateDisabled"
        },
        {
            "trigger": "c_purchaseCategoryStateNew",
            "contents": "c_purchaseCategoryStateNew"
        },
        {
            "trigger": "EventPlayerEffectUsedPoint",
            "contents": "EventPlayerEffectUsedPoint(${1:int inLocation})"
        },
        {
            "trigger": "ConversationDataLineGetPickedCount",
            "contents": "ConversationDataLineGetPickedCount(${1:string convId}, ${2:string lineId})"
        },
        {
            "trigger": "CatalogEntryIsValid",
            "contents": "CatalogEntryIsValid(${1:int catalog}, ${2:string entry})"
        },
        {
            "trigger": "EventMouseMovedPosZWorld",
            "contents": "EventMouseMovedPosZWorld()"
        },
        {
            "trigger": "PlayerModifyPropertyFixed",
            "contents": "PlayerModifyPropertyFixed(${1:int inPlayer}, ${2:int inProp}, ${3:int inOper}, ${4:fixed inVal})"
        },
        {
            "trigger": "c_fadeStyleSquareRoot",
            "contents": "c_fadeStyleSquareRoot"
        },
        {
            "trigger": "SoundLastPlayed",
            "contents": "SoundLastPlayed()"
        },
        {
            "trigger": "c_messageAreaCinematic",
            "contents": "c_messageAreaCinematic"
        },
        {
            "trigger": "EventUnitCargo",
            "contents": "EventUnitCargo()"
        },
        {
            "trigger": "c_placementTestDensityMask",
            "contents": "c_placementTestDensityMask"
        },
        {
            "trigger": "TriggerGetFunction",
            "contents": "TriggerGetFunction(${1:trigger t})"
        },
        {
            "trigger": "c_keyTab",
            "contents": "c_keyTab"
        },
        {
            "trigger": "c_maxPlayers",
            "contents": "c_maxPlayers"
        },
        {
            "trigger": "EventKeyAlt",
            "contents": "EventKeyAlt()"
        },
        {
            "trigger": "c_triggerControlTypePulldown",
            "contents": "c_triggerControlTypePulldown"
        },
        {
            "trigger": "TextTagShow",
            "contents": "TextTagShow(${1:int inTag}, ${2:playergroup inPlayers}, ${3:bool inShow})"
        },
        {
            "trigger": "TextCase",
            "contents": "TextCase(${1:text t}, ${2:bool upper})"
        },
        {
            "trigger": "AchievementPercentText",
            "contents": "AchievementPercentText(${1:int player}, ${2:string category})"
        },
        {
            "trigger": "c_cameraValueRoll",
            "contents": "c_cameraValueRoll"
        },
        {
            "trigger": "c_syncFrameTypeArmyButton",
            "contents": "c_syncFrameTypeArmyButton"
        },
        {
            "trigger": "UnitShowKillDisplay",
            "contents": "UnitShowKillDisplay(${1:unit inUnit}, ${2:int inKillDisplay})"
        },
        {
            "trigger": "UISetNextLoadingScreenTextPosition",
            "contents": "UISetNextLoadingScreenTextPosition(${1:int anchor}, ${2:int offsetX}, ${3:int offsetY}, ${4:int width}, ${5:int height})"
        },
        {
            "trigger": "TimerWindowSetImageType",
            "contents": "TimerWindowSetImageType(${1:int inWindow}, ${2:int inImage}, ${3:int inType})"
        },
        {
            "trigger": "EventKeyShift",
            "contents": "EventKeyShift()"
        },
        {
            "trigger": "c_dataTypePlayerGroup",
            "contents": "c_dataTypePlayerGroup"
        },
        {
            "trigger": "BoardPlayerRemove",
            "contents": "BoardPlayerRemove(${1:int inBoard}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_triggerControlPropertyTintColor",
            "contents": "c_triggerControlPropertyTintColor"
        },
        {
            "trigger": "c_stringCase",
            "contents": "c_stringCase"
        },
        {
            "trigger": "DataTableSetUnit",
            "contents": "DataTableSetUnit(${1:bool global}, ${2:string name}, ${3:unit val})"
        },
        {
            "trigger": "PlayerGetPropertyInt",
            "contents": "PlayerGetPropertyInt(${1:int inPlayer}, ${2:int inProp})"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton1",
            "contents": "c_gameMenuDialogGenericButton1"
        },
        {
            "trigger": "c_anchorRight",
            "contents": "c_anchorRight"
        },
        {
            "trigger": "TriggerSkippableBegin",
            "contents": "TriggerSkippableBegin(${1:playergroup allowedToSkip}, ${2:int requiredCount}, ${3:trigger onSkip}, ${4:bool testConds}, ${5:bool waitUntilDone})"
        },
        {
            "trigger": "UnitOrder",
            "contents": "UnitOrder(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "UserDataGetString",
            "contents": "UserDataGetString(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_actorRequestScopeSource",
            "contents": "c_actorRequestScopeSource"
        },
        {
            "trigger": "ObjectiveSetAfter",
            "contents": "ObjectiveSetAfter(${1:int inObjective}, ${2:int inAfterObjective})"
        },
        {
            "trigger": "UnitMagazineCount",
            "contents": "UnitMagazineCount(${1:unit inUnit}, ${2:string inAbil})"
        },
        {
            "trigger": "OrderSetTargetUnit",
            "contents": "OrderSetTargetUnit(${1:order inOrder}, ${2:unit inUnit})"
        },
        {
            "trigger": "BattleReportSetBonusTitle",
            "contents": "BattleReportSetBonusTitle(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "c_actorRequestScopeEffect",
            "contents": "c_actorRequestScopeEffect"
        },
        {
            "trigger": "c_keyEscape",
            "contents": "c_keyEscape"
        },
        {
            "trigger": "c_dataTypeBool",
            "contents": "c_dataTypeBool"
        },
        {
            "trigger": "c_triggerControlPropertyRenderType",
            "contents": "c_triggerControlPropertyRenderType"
        },
        {
            "trigger": "BoardSetState",
            "contents": "BoardSetState(${1:int inBoard}, ${2:playergroup inPlayers}, ${3:int inState}, ${4:bool inVal})"
        },
        {
            "trigger": "c_textTagColorTextEnd",
            "contents": "c_textTagColorTextEnd"
        },
        {
            "trigger": "BattleReportSetPriority",
            "contents": "BattleReportSetPriority(${1:int inBattleReportId}, ${2:int inPriority})"
        },
        {
            "trigger": "UserDataFieldType",
            "contents": "UserDataFieldType(${1:string inType}, ${2:string inField})"
        },
        {
            "trigger": "Color255FromFixed",
            "contents": "Color255FromFixed(${1:fixed f})"
        },
        {
            "trigger": "AbilityClass",
            "contents": "AbilityClass(${1:string ability})"
        },
        {
            "trigger": "c_unitStateHidden",
            "contents": "c_unitStateHidden"
        },
        {
            "trigger": "ActorFrom",
            "contents": "ActorFrom(${1:string name})"
        },
        {
            "trigger": "UIGameMenuItemVisible",
            "contents": "UIGameMenuItemVisible(${1:int inPlayer}, ${2:int inMenuItemType})"
        },
        {
            "trigger": "ActorCreate",
            "contents": "ActorCreate(${1:actorscope as}, ${2:string actorName}, ${3:string content1Name}, ${4:string content2Name}, ${5:string content3Name})"
        },
        {
            "trigger": "GameCheatsEnabled",
            "contents": "GameCheatsEnabled(${1:int category})"
        },
        {
            "trigger": "UnitGroupLoopBegin",
            "contents": "UnitGroupLoopBegin(${1:unitgroup g})"
        },
        {
            "trigger": "c_unitProgressTypeArmMagazine",
            "contents": "c_unitProgressTypeArmMagazine"
        },
        {
            "trigger": "UnitBehaviorAddPlayer",
            "contents": "UnitBehaviorAddPlayer(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inPlayer}, ${4:int inCount})"
        },
        {
            "trigger": "BattleReportGetMissionText",
            "contents": "BattleReportGetMissionText(${1:int inBattleReportId})"
        },
        {
            "trigger": "CameraSetChannelOnPortrait",
            "contents": "CameraSetChannelOnPortrait(${1:int player}, ${2:camerainfo c}, ${3:fixed aspectRatio}, ${4:int portraitId}, ${5:int channel})"
        },
        {
            "trigger": "c_gameMenuDialogItemAny",
            "contents": "c_gameMenuDialogItemAny"
        },
        {
            "trigger": "UnitGetPosition",
            "contents": "UnitGetPosition(${1:unit inUnit})"
        },
        {
            "trigger": "WorldHeight",
            "contents": "WorldHeight(${1:int inType}, ${2:point inPos})"
        },
        {
            "trigger": "c_unitPropCarriedMinerals",
            "contents": "c_unitPropCarriedMinerals"
        },
        {
            "trigger": "c_keyP",
            "contents": "c_keyP"
        },
        {
            "trigger": "c_unitPropKillXP",
            "contents": "c_unitPropKillXP"
        },
        {
            "trigger": "c_purchaseCategoryStateEnabled",
            "contents": "c_purchaseCategoryStateEnabled"
        },
        {
            "trigger": "ConversationDataActiveSound",
            "contents": "ConversationDataActiveSound()"
        },
        {
            "trigger": "TriggerAddEventBattleReportPanelSelectionChanged",
            "contents": "TriggerAddEventBattleReportPanelSelectionChanged(${1:trigger t}, ${2:int inPlayer})"
        },
        {
            "trigger": "UserDataSetCompare",
            "contents": "UserDataSetCompare(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:int inValue})"
        },
        {
            "trigger": "ActorGetText",
            "contents": "ActorGetText(${1:actor a})"
        },
        {
            "trigger": "TriggerDestroy",
            "contents": "TriggerDestroy(${1:trigger t})"
        },
        {
            "trigger": "UIAlertClear",
            "contents": "UIAlertClear(${1:int player})"
        },
        {
            "trigger": "PurchaseGroupSetNameText",
            "contents": "PurchaseGroupSetNameText(${1:int inPurchaseGroupId}, ${2:text inText})"
        },
        {
            "trigger": "EventCameraMoveReason",
            "contents": "EventCameraMoveReason()"
        },
        {
            "trigger": "c_triggerControlTypeCutscene",
            "contents": "c_triggerControlTypeCutscene"
        },
        {
            "trigger": "c_unitCostVespene",
            "contents": "c_unitCostVespene"
        },
        {
            "trigger": "PowI",
            "contents": "PowI(${1:fixed x}, ${2:fixed power})"
        },
        {
            "trigger": "c_timerWindowNone",
            "contents": "c_timerWindowNone"
        },
        {
            "trigger": "CameraInfoFromId",
            "contents": "CameraInfoFromId(${1:int id})"
        },
        {
            "trigger": "c_triggerControlEventTypeSelectionChanged",
            "contents": "c_triggerControlEventTypeSelectionChanged"
        },
        {
            "trigger": "PortraitGetPlanetPanel",
            "contents": "PortraitGetPlanetPanel()"
        },
        {
            "trigger": "UnitGroupSelect",
            "contents": "UnitGroupSelect(${1:unitgroup inGroup}, ${2:int inPlayer}, ${3:bool inSelect})"
        },
        {
            "trigger": "CatalogFieldExists",
            "contents": "CatalogFieldExists(${1:string scope}, ${2:string field})"
        },
        {
            "trigger": "UserDataSetImageEdge",
            "contents": "UserDataSetImageEdge(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:int inValue})"
        },
        {
            "trigger": "PortraitSetMuted",
            "contents": "PortraitSetMuted(${1:int p}, ${2:bool isMuted})"
        },
        {
            "trigger": "EventConversation",
            "contents": "EventConversation()"
        },
        {
            "trigger": "c_syncFrameTypeVictoryPanel",
            "contents": "c_syncFrameTypeVictoryPanel"
        },
        {
            "trigger": "c_triggerControlPropertyMuted",
            "contents": "c_triggerControlPropertyMuted"
        },
        {
            "trigger": "c_playerPropDamageDealtTime",
            "contents": "c_playerPropDamageDealtTime"
        },
        {
            "trigger": "c_timerDurationInfinite",
            "contents": "c_timerDurationInfinite"
        },
        {
            "trigger": "ConversationReplySetState",
            "contents": "ConversationReplySetState(${1:int intId}, ${2:int replyId}, ${3:int state})"
        },
        {
            "trigger": "c_unitInventoryCountTotal",
            "contents": "c_unitInventoryCountTotal"
        },
        {
            "trigger": "UnitGroupClosestToPoint",
            "contents": "UnitGroupClosestToPoint(${1:unitgroup g}, ${2:point p})"
        },
        {
            "trigger": "c_textTagFadeAll",
            "contents": "c_textTagFadeAll"
        },
        {
            "trigger": "PortraitGetTriggerControl",
            "contents": "PortraitGetTriggerControl(${1:int inControlId})"
        },
        {
            "trigger": "c_unitQueuePropertyUsed",
            "contents": "c_unitQueuePropertyUsed"
        },
        {
            "trigger": "c_dataTypeRegion",
            "contents": "c_dataTypeRegion"
        },
        {
            "trigger": "BankKeyCount",
            "contents": "BankKeyCount(${1:bank b}, ${2:string section})"
        },
        {
            "trigger": "GameCheatAllow",
            "contents": "GameCheatAllow(${1:int cheat}, ${2:bool allow})"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton6",
            "contents": "c_gameMenuDialogGenericButton6"
        },
        {
            "trigger": "UISetAlertTypeVisible",
            "contents": "UISetAlertTypeVisible(${1:playergroup inPlayers}, ${2:string inAlert}, ${3:bool inVisible})"
        },
        {
            "trigger": "SoundStop",
            "contents": "SoundStop(${1:sound s}, ${2:bool fade})"
        },
        {
            "trigger": "c_boardColorBackground",
            "contents": "c_boardColorBackground"
        },
        {
            "trigger": "c_keyNumPad4",
            "contents": "c_keyNumPad4"
        },
        {
            "trigger": "c_playerGroupEnemy",
            "contents": "c_playerGroupEnemy"
        },
        {
            "trigger": "c_dataTypeWave",
            "contents": "c_dataTypeWave"
        },
        {
            "trigger": "MovieStopRecording",
            "contents": "MovieStopRecording()"
        },
        {
            "trigger": "c_keyD",
            "contents": "c_keyD"
        },
        {
            "trigger": "c_purchaseGroupStateNew",
            "contents": "c_purchaseGroupStateNew"
        },
        {
            "trigger": "UISetButtonHighlighted",
            "contents": "UISetButtonHighlighted(${1:playergroup inPlayers}, ${2:abilcmd inAbilCmd}, ${3:bool inHighlight})"
        },
        {
            "trigger": "EventUnitPropertyChangeFixed",
            "contents": "EventUnitPropertyChangeFixed()"
        },
        {
            "trigger": "c_dataTypeTransmissionSource",
            "contents": "c_dataTypeTransmissionSource"
        },
        {
            "trigger": "PlayerGroupAdd",
            "contents": "PlayerGroupAdd(${1:playergroup inGroup}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_transmissionDurationSub",
            "contents": "c_transmissionDurationSub"
        },
        {
            "trigger": "c_unitPropLifeMax",
            "contents": "c_unitPropLifeMax"
        },
        {
            "trigger": "ObjectiveCreateForPlayers",
            "contents": "ObjectiveCreateForPlayers(${1:text inName}, ${2:text inDescription}, ${3:int inState}, ${4:bool inPrimary}, ${5:playergroup inPlayers})"
        },
        {
            "trigger": "EventUnitInventoryChange",
            "contents": "EventUnitInventoryChange()"
        },
        {
            "trigger": "PlanetSetContactTooltipText",
            "contents": "PlanetSetContactTooltipText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "PlayerBeaconBuildMenuDisableSlotInfo",
            "contents": "PlayerBeaconBuildMenuDisableSlotInfo(${1:int inPlayer}, ${2:int inType}, ${3:int inSlotNum}, ${4:bool disable})"
        },
        {
            "trigger": "c_battleReportTypeScene",
            "contents": "c_battleReportTypeScene"
        },
        {
            "trigger": "c_animFlagNonLooping",
            "contents": "c_animFlagNonLooping"
        },
        {
            "trigger": "VisExploreArea",
            "contents": "VisExploreArea(${1:int player}, ${2:region area}, ${3:bool explored}, ${4:bool checkCliffLevel})"
        },
        {
            "trigger": "c_invalidPurchaseCategoryId",
            "contents": "c_invalidPurchaseCategoryId"
        },
        {
            "trigger": "TriggerAddEventUnitAttributeChange",
            "contents": "TriggerAddEventUnitAttributeChange(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "c_cameraValueFalloffEnd",
            "contents": "c_cameraValueFalloffEnd"
        },
        {
            "trigger": "DataTableSetPortrait",
            "contents": "DataTableSetPortrait(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "VictoryPanelClearCustomStatisticTable",
            "contents": "VictoryPanelClearCustomStatisticTable()"
        },
        {
            "trigger": "CameraSetMouseRotates",
            "contents": "CameraSetMouseRotates(${1:int player}, ${2:bool value})"
        },
        {
            "trigger": "RestartGame",
            "contents": "RestartGame(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "UnitGetProgressComplete",
            "contents": "UnitGetProgressComplete(${1:unit inUnit}, ${2:int inSlot})"
        },
        {
            "trigger": "c_unitPropBountyVespene",
            "contents": "c_unitPropBountyVespene"
        },
        {
            "trigger": "c_playerPropDamageTakenTime",
            "contents": "c_playerPropDamageTakenTime"
        },
        {
            "trigger": "DialogSetPositionRelative",
            "contents": "DialogSetPositionRelative(${1:int dialog}, ${2:int anchor}, ${3:int relative}, ${4:int relativeAnchor}, ${5:int offsetX}, ${6:int offsetY})"
        },
        {
            "trigger": "c_triggerImageTypeEndCap",
            "contents": "c_triggerImageTypeEndCap"
        },
        {
            "trigger": "UnitInventorySlot",
            "contents": "UnitInventorySlot(${1:unit inItem})"
        },
        {
            "trigger": "UserDataInstanceCount",
            "contents": "UserDataInstanceCount(${1:string inType})"
        },
        {
            "trigger": "MeleeInitUnitsForPlayer",
            "contents": "MeleeInitUnitsForPlayer(${1:int player}, ${2:string race}, ${3:point position})"
        },
        {
            "trigger": "c_cameraDirectionXYZ",
            "contents": "c_cameraDirectionXYZ"
        },
        {
            "trigger": "MercenarySetRecentlyPurchased",
            "contents": "MercenarySetRecentlyPurchased(${1:int inMercenaryId}, ${2:bool inRecent})"
        },
        {
            "trigger": "c_unitProgressStateEmpty",
            "contents": "c_unitProgressStateEmpty"
        },
        {
            "trigger": "c_triggerControlPropertyRelative",
            "contents": "c_triggerControlPropertyRelative"
        },
        {
            "trigger": "c_abilClassFilterExcluded",
            "contents": "c_abilClassFilterExcluded"
        },
        {
            "trigger": "TimerWindowSetPosition",
            "contents": "TimerWindowSetPosition(${1:int inWindow}, ${2:int inX}, ${3:int inY})"
        },
        {
            "trigger": "MercenaryGetSelected",
            "contents": "MercenaryGetSelected(${1:int player})"
        },
        {
            "trigger": "UnitResetSpeed",
            "contents": "UnitResetSpeed(${1:unit inUnit})"
        },
        {
            "trigger": "MeleeInitResources",
            "contents": "MeleeInitResources()"
        },
        {
            "trigger": "UnitGetHeight",
            "contents": "UnitGetHeight(${1:unit inUnit})"
        },
        {
            "trigger": "c_catalogFieldTypeFloat",
            "contents": "c_catalogFieldTypeFloat"
        },
        {
            "trigger": "c_primaryObjectivesId",
            "contents": "c_primaryObjectivesId"
        },
        {
            "trigger": "TechTreeUnitCountEx",
            "contents": "TechTreeUnitCountEx(${1:int player}, ${2:string unitType}, ${3:string equivType}, ${4:int countType})"
        },
        {
            "trigger": "DialogControlCreateInPanel",
            "contents": "DialogControlCreateInPanel(${1:int panel}, ${2:int type})"
        },
        {
            "trigger": "c_placementTestCreepMask",
            "contents": "c_placementTestCreepMask"
        },
        {
            "trigger": "c_keyBackSpace",
            "contents": "c_keyBackSpace"
        },
        {
            "trigger": "SoundPlayScene",
            "contents": "SoundPlayScene(${1:soundlink link}, ${2:playergroup players}, ${3:unitgroup units}, ${4:string animProps})"
        },
        {
            "trigger": "c_catalogFieldTypeIntUnsigned",
            "contents": "c_catalogFieldTypeIntUnsigned"
        },
        {
            "trigger": "PlanetSetPlanetText",
            "contents": "PlanetSetPlanetText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "UnitSetPropertyInt",
            "contents": "UnitSetPropertyInt(${1:unit inUnit}, ${2:int inProp}, ${3:int inVal})"
        },
        {
            "trigger": "CreepAdjacent",
            "contents": "CreepAdjacent(${1:point inPos})"
        },
        {
            "trigger": "UnitCreateEffectPoint",
            "contents": "UnitCreateEffectPoint(${1:unit inUnit}, ${2:string inEffect}, ${3:point inTarget})"
        },
        {
            "trigger": "PlayerSetColorIndex",
            "contents": "PlayerSetColorIndex(${1:int inPlayer}, ${2:int inIndex}, ${3:bool inChangeUnits})"
        },
        {
            "trigger": "c_triggerControlPropertyActor",
            "contents": "c_triggerControlPropertyActor"
        },
        {
            "trigger": "c_cameraValueFalloffStart",
            "contents": "c_cameraValueFalloffStart"
        },
        {
            "trigger": "GameGetCooldown",
            "contents": "GameGetCooldown(${1:string inCooldown})"
        },
        {
            "trigger": "TriggerAddEventUnitRegion",
            "contents": "TriggerAddEventUnitRegion(${1:trigger t}, ${2:unitref u}, ${3:region r}, ${4:bool state})"
        },
        {
            "trigger": "ResearchItemPurchase",
            "contents": "ResearchItemPurchase(${1:int inResearchItemId})"
        },
        {
            "trigger": "c_wtcLinear",
            "contents": "c_wtcLinear"
        },
        {
            "trigger": "UnitSetInfoText2",
            "contents": "UnitSetInfoText2(${1:unit inUnit}, ${2:text info})"
        },
        {
            "trigger": "c_gameCheatResourceCustom",
            "contents": "c_gameCheatResourceCustom"
        },
        {
            "trigger": "EventMouseClickedPosYUI",
            "contents": "EventMouseClickedPosYUI()"
        },
        {
            "trigger": "ConversationDataStateAbilCmd",
            "contents": "ConversationDataStateAbilCmd(${1:string stateIndex}, ${2:string inInfoName})"
        },
        {
            "trigger": "GamePauseAllCharges",
            "contents": "GamePauseAllCharges(${1:bool inPaused})"
        },
        {
            "trigger": "BankValueGetAsPoint",
            "contents": "BankValueGetAsPoint(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "DialogControlInvokeAsText",
            "contents": "DialogControlInvokeAsText(${1:int control}, ${2:playergroup players}, ${3:string method}, ${4:text param1}, ${5:text param2}, ${6:text param3}, ${7:text param4})"
        },
        {
            "trigger": "MakeMsgRefSetFromRequest",
            "contents": "MakeMsgRefSetFromRequest(${1:string refName}, ${2:string subject}, ${3:string effectName}, ${4:int requestScope}, ${5:int requestActor})"
        },
        {
            "trigger": "c_syncFrameTypeMinimapPanel",
            "contents": "c_syncFrameTypeMinimapPanel"
        },
        {
            "trigger": "TimerWindowSetFormat",
            "contents": "TimerWindowSetFormat(${1:int inWindow}, ${2:text inFormat})"
        },
        {
            "trigger": "UISetAchievementToastStyle",
            "contents": "UISetAchievementToastStyle(${1:playergroup inPlayers}, ${2:int style})"
        },
        {
            "trigger": "c_unitPropSuppliesUsed",
            "contents": "c_unitPropSuppliesUsed"
        },
        {
            "trigger": "c_dataTypeUnitFilter",
            "contents": "c_dataTypeUnitFilter"
        },
        {
            "trigger": "RegionGetBoundsMax",
            "contents": "RegionGetBoundsMax(${1:region r})"
        },
        {
            "trigger": "c_keyShift",
            "contents": "c_keyShift"
        },
        {
            "trigger": "c_triggerControlEventTypeChecked",
            "contents": "c_triggerControlEventTypeChecked"
        },
        {
            "trigger": "UIFlyerHelperOverride",
            "contents": "UIFlyerHelperOverride(${1:playergroup inPlayers}, ${2:int display})"
        },
        {
            "trigger": "TimerWindowSetAnchor",
            "contents": "TimerWindowSetAnchor(${1:int inWindow}, ${2:int inAnchor}, ${3:int inOffsetX}, ${4:int inOffsetY})"
        },
        {
            "trigger": "c_dataTypeUnit",
            "contents": "c_dataTypeUnit"
        },
        {
            "trigger": "PointReflect",
            "contents": "PointReflect(${1:point source}, ${2:point dest}, ${3:fixed angle})"
        },
        {
            "trigger": "c_dataTypeByte",
            "contents": "c_dataTypeByte"
        },
        {
            "trigger": "c_unitFilterAllowed",
            "contents": "c_unitFilterAllowed"
        },
        {
            "trigger": "PlayerGroupAlliance",
            "contents": "PlayerGroupAlliance(${1:int inType}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_unitBehaviorCountAll",
            "contents": "c_unitBehaviorCountAll"
        },
        {
            "trigger": "PlayerBeaconGetAllyPlayerId",
            "contents": "PlayerBeaconGetAllyPlayerId(${1:int inPlayer}, ${2:int allyNum})"
        },
        {
            "trigger": "c_boardNone",
            "contents": "c_boardNone"
        },
        {
            "trigger": "TriggerAddEventPurchaseMade",
            "contents": "TriggerAddEventPurchaseMade(${1:trigger t}, ${2:int player}, ${3:int inPurchaseItemId})"
        },
        {
            "trigger": "IntToText",
            "contents": "IntToText(${1:int x})"
        },
        {
            "trigger": "BankValueGetAsString",
            "contents": "BankValueGetAsString(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "c_unitProgressStagePause",
            "contents": "c_unitProgressStagePause"
        },
        {
            "trigger": "EventPlayerPropertyChangeFixed",
            "contents": "EventPlayerPropertyChangeFixed()"
        },
        {
            "trigger": "UnitGroupCenterOfGroup",
            "contents": "UnitGroupCenterOfGroup(${1:unitgroup g})"
        },
        {
            "trigger": "c_scaleNormal",
            "contents": "c_scaleNormal"
        },
        {
            "trigger": "c_unitStateInvulnerable",
            "contents": "c_unitStateInvulnerable"
        },
        {
            "trigger": "PlayerGetState",
            "contents": "PlayerGetState(${1:int inPlayer}, ${2:int inState})"
        },
        {
            "trigger": "c_syncFrameTypeBattleUI",
            "contents": "c_syncFrameTypeBattleUI"
        },
        {
            "trigger": "ActorScopeRefGet",
            "contents": "ActorScopeRefGet(${1:actorscope as}, ${2:string refName})"
        },
        {
            "trigger": "c_boardItemAll",
            "contents": "c_boardItemAll"
        },
        {
            "trigger": "UnitRallyPointTargetPoint",
            "contents": "UnitRallyPointTargetPoint(${1:unit inUnit}, ${2:int inPoint}, ${3:int inTarget})"
        },
        {
            "trigger": "UnitControlGroupRemoveUnit",
            "contents": "UnitControlGroupRemoveUnit(${1:int inPlayer}, ${2:int inGroup}, ${3:unit inUnit})"
        },
        {
            "trigger": "TriggerAddEventUnitBehaviorChange",
            "contents": "TriggerAddEventUnitBehaviorChange(${1:trigger t}, ${2:unitref u}, ${3:string behavior}, ${4:int inChangeType})"
        },
        {
            "trigger": "AchievementTermQuantitySet",
            "contents": "AchievementTermQuantitySet(${1:int player}, ${2:string term}, ${3:int quantity})"
        },
        {
            "trigger": "c_cameraRotationYaw",
            "contents": "c_cameraRotationYaw"
        },
        {
            "trigger": "MercenarySetSpecialText",
            "contents": "MercenarySetSpecialText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "PlayerBeaconSetTargetPoint",
            "contents": "PlayerBeaconSetTargetPoint(${1:int inPlayer}, ${2:int inBeacon}, ${3:point inPoint}, ${4:bool alert})"
        },
        {
            "trigger": "TechTreeBehaviorProducedAbilCmd",
            "contents": "TechTreeBehaviorProducedAbilCmd(${1:string behaviorType}, ${2:int index})"
        },
        {
            "trigger": "c_keyX",
            "contents": "c_keyX"
        },
        {
            "trigger": "UISetMiniMapBackGroundColor",
            "contents": "UISetMiniMapBackGroundColor(${1:color inColor})"
        },
        {
            "trigger": "c_cameraValueFieldOfView",
            "contents": "c_cameraValueFieldOfView"
        },
        {
            "trigger": "UnitTypeTestFlag",
            "contents": "UnitTypeTestFlag(${1:string inUnitType}, ${2:int inFlag})"
        },
        {
            "trigger": "TechTreeBehaviorProducedAbilCmdCount",
            "contents": "TechTreeBehaviorProducedAbilCmdCount(${1:string behaviorType})"
        },
        {
            "trigger": "c_unitProgressStageComplete",
            "contents": "c_unitProgressStageComplete"
        },
        {
            "trigger": "SoundLengthSync",
            "contents": "SoundLengthSync(${1:soundlink info})"
        },
        {
            "trigger": "c_keyQ",
            "contents": "c_keyQ"
        },
        {
            "trigger": "c_triggerControlPropertyAchievement",
            "contents": "c_triggerControlPropertyAchievement"
        },
        {
            "trigger": "DataTableGetTransmissionSource",
            "contents": "DataTableGetTransmissionSource(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_cutsceneNone",
            "contents": "c_cutsceneNone"
        },
        {
            "trigger": "ConversationReplyLastCreated",
            "contents": "ConversationReplyLastCreated()"
        },
        {
            "trigger": "ConversationDataLoadStateValue",
            "contents": "ConversationDataLoadStateValue(${1:string stateIndex}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "CameraUseHeightSmoothing",
            "contents": "CameraUseHeightSmoothing(${1:int player}, ${2:bool value})"
        },
        {
            "trigger": "OrderGetAbilityCommand",
            "contents": "OrderGetAbilityCommand(${1:order inOrder})"
        },
        {
            "trigger": "BattleReportSetResearchTitle",
            "contents": "BattleReportSetResearchTitle(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "FogSetColorOverTime",
            "contents": "FogSetColorOverTime(${1:color c}, ${2:fixed timeRamp})"
        },
        {
            "trigger": "c_mercenaryStateEnabled",
            "contents": "c_mercenaryStateEnabled"
        },
        {
            "trigger": "EventMouseClickedButton",
            "contents": "EventMouseClickedButton()"
        },
        {
            "trigger": "IntLoopBegin",
            "contents": "IntLoopBegin(${1:int start}, ${2:int end})"
        },
        {
            "trigger": "c_localSelectionTypeWorldPanel",
            "contents": "c_localSelectionTypeWorldPanel"
        },
        {
            "trigger": "c_purchaseItemStateHidden",
            "contents": "c_purchaseItemStateHidden"
        },
        {
            "trigger": "c_syncFrameTypePlanetPanel",
            "contents": "c_syncFrameTypePlanetPanel"
        },
        {
            "trigger": "CameraFollowUnitGroup",
            "contents": "CameraFollowUnitGroup(${1:int player}, ${2:unitgroup group}, ${3:bool follow}, ${4:bool isOffset})"
        },
        {
            "trigger": "PlanetPanelSetBackButtonEnabled",
            "contents": "PlanetPanelSetBackButtonEnabled(${1:playergroup players}, ${2:bool inEnabled})"
        },
        {
            "trigger": "ConversationDataSimulateRun",
            "contents": "ConversationDataSimulateRun(${1:string convId})"
        },
        {
            "trigger": "c_syncFrameTypeObjectivePanel",
            "contents": "c_syncFrameTypeObjectivePanel"
        },
        {
            "trigger": "UserDataSaveType",
            "contents": "UserDataSaveType(${1:string inType}, ${2:bank inBank}, ${3:string inSection})"
        },
        {
            "trigger": "c_invalidPortraitId",
            "contents": "c_invalidPortraitId"
        },
        {
            "trigger": "c_unitAllianceAny",
            "contents": "c_unitAllianceAny"
        },
        {
            "trigger": "ConversationDataSaveStateValues",
            "contents": "ConversationDataSaveStateValues(${1:string stateId}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "c_triggerImageTypeNineSlice",
            "contents": "c_triggerImageTypeNineSlice"
        },
        {
            "trigger": "c_gameCheatVictory",
            "contents": "c_gameCheatVictory"
        },
        {
            "trigger": "ConversationLastCreated",
            "contents": "ConversationLastCreated()"
        },
        {
            "trigger": "c_timerWindowImageBorder",
            "contents": "c_timerWindowImageBorder"
        },
        {
            "trigger": "c_uiCommandAllowButtons",
            "contents": "c_uiCommandAllowButtons"
        },
        {
            "trigger": "PathSetLineTileLength",
            "contents": "PathSetLineTileLength(${1:int inPathId}, ${2:int inLocation}, ${3:fixed inLength})"
        },
        {
            "trigger": "c_gameCheatGimme",
            "contents": "c_gameCheatGimme"
        },
        {
            "trigger": "EventMouseMovedPosYUI",
            "contents": "EventMouseMovedPosYUI()"
        },
        {
            "trigger": "c_textTagColorTextStart",
            "contents": "c_textTagColorTextStart"
        },
        {
            "trigger": "DataTableSetAbilCmd",
            "contents": "DataTableSetAbilCmd(${1:bool global}, ${2:string name}, ${3:abilcmd val})"
        },
        {
            "trigger": "Log2I",
            "contents": "Log2I(${1:fixed x})"
        },
        {
            "trigger": "TriggerAddEventPlayerAIWave",
            "contents": "TriggerAddEventPlayerAIWave(${1:trigger inTrigger}, ${2:int player})"
        },
        {
            "trigger": "ConversationDataStateUpgrade",
            "contents": "ConversationDataStateUpgrade(${1:string stateIndex}, ${2:string inInfoName})"
        },
        {
            "trigger": "UISetCommandAllowed",
            "contents": "UISetCommandAllowed(${1:playergroup players}, ${2:int option}, ${3:bool allow})"
        },
        {
            "trigger": "c_unitPropVitality",
            "contents": "c_unitPropVitality"
        },
        {
            "trigger": "TransmissionClearAll",
            "contents": "TransmissionClearAll()"
        },
        {
            "trigger": "c_spendLocationUnit",
            "contents": "c_spendLocationUnit"
        },
        {
            "trigger": "GameSetLighting",
            "contents": "GameSetLighting(${1:string inId}, ${2:fixed inBlendTime})"
        },
        {
            "trigger": "PortraitSetPosition",
            "contents": "PortraitSetPosition(${1:int p}, ${2:int anchor}, ${3:int offsetX}, ${4:int offsetY})"
        },
        {
            "trigger": "UIUnitColorStyleOverride",
            "contents": "UIUnitColorStyleOverride(${1:playergroup inPlayers}, ${2:int style})"
        },
        {
            "trigger": "CameraUseModel",
            "contents": "CameraUseModel(${1:int player}, ${2:unit u}, ${3:string name}, ${4:fixed duration})"
        },
        {
            "trigger": "TriggerAddEventMercenaryPanelPurchase",
            "contents": "TriggerAddEventMercenaryPanelPurchase(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "PointGetX",
            "contents": "PointGetX(${1:point p})"
        },
        {
            "trigger": "c_playerStatusUnused",
            "contents": "c_playerStatusUnused"
        },
        {
            "trigger": "UnitControlGroupAddUnits",
            "contents": "UnitControlGroupAddUnits(${1:int inPlayer}, ${2:int inGroup}, ${3:unitgroup inUnits})"
        },
        {
            "trigger": "ActorFromDialogControl",
            "contents": "ActorFromDialogControl(${1:int p})"
        },
        {
            "trigger": "PathSetVisible",
            "contents": "PathSetVisible(${1:int inPathId}, ${2:int inLocation}, ${3:bool inVisible})"
        },
        {
            "trigger": "c_actorRequestActorCreate",
            "contents": "c_actorRequestActorCreate"
        },
        {
            "trigger": "TimerWindowResetPosition",
            "contents": "TimerWindowResetPosition(${1:int inWindow})"
        },
        {
            "trigger": "MercenaryDestroy",
            "contents": "MercenaryDestroy(${1:int inMercenaryId})"
        },
        {
            "trigger": "c_triggerControlPropertyTooltip",
            "contents": "c_triggerControlPropertyTooltip"
        },
        {
            "trigger": "c_orderTargetUnit",
            "contents": "c_orderTargetUnit"
        },
        {
            "trigger": "c_unitStateStunned",
            "contents": "c_unitStateStunned"
        },
        {
            "trigger": "DataTableGetCameraInfo",
            "contents": "DataTableGetCameraInfo(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "RegionRect",
            "contents": "RegionRect(${1:fixed minx}, ${2:fixed miny}, ${3:fixed maxx}, ${4:fixed maxy})"
        },
        {
            "trigger": "TriggerCreate",
            "contents": "TriggerCreate(${1:string inFunction})"
        },
        {
            "trigger": "ActorSendToAsText",
            "contents": "ActorSendToAsText(${1:actor a}, ${2:string refName}, ${3:text msg})"
        },
        {
            "trigger": "PlanetSetBackgroundModelLink",
            "contents": "PlanetSetBackgroundModelLink(${1:int inPlanetId}, ${2:string inBackgroundModelLink})"
        },
        {
            "trigger": "ConversationDataChoiceSetState",
            "contents": "ConversationDataChoiceSetState(${1:string convId}, ${2:string choiceId}, ${3:int state})"
        },
        {
            "trigger": "TextExpressionSetToken",
            "contents": "TextExpressionSetToken(${1:string id}, ${2:string code}, ${3:text value})"
        },
        {
            "trigger": "ResearchCategoryDestroyAll",
            "contents": "ResearchCategoryDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "ObjectiveGetPrimary",
            "contents": "ObjectiveGetPrimary(${1:int inObjective})"
        },
        {
            "trigger": "ResearchTierLastCreated",
            "contents": "ResearchTierLastCreated()"
        },
        {
            "trigger": "TriggerAddEventPlanetMissionSelected",
            "contents": "TriggerAddEventPlanetMissionSelected(${1:trigger t}, ${2:int player}, ${3:int planetId})"
        },
        {
            "trigger": "BattleReportSetDifficultyLevelCompleted",
            "contents": "BattleReportSetDifficultyLevelCompleted(${1:int inBattleReportId}, ${2:int inDifficultyLevel}, ${3:bool inCompleted})"
        },
        {
            "trigger": "TriggerAddEventUnitRemoved",
            "contents": "TriggerAddEventUnitRemoved(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "EventUnitInventoryItemTargetPoint",
            "contents": "EventUnitInventoryItemTargetPoint()"
        },
        {
            "trigger": "TriggerAddEventBattleReportPanelExit",
            "contents": "TriggerAddEventBattleReportPanelExit(${1:trigger t}, ${2:int inPlayer})"
        },
        {
            "trigger": "EventUnitCreatedAbil",
            "contents": "EventUnitCreatedAbil()"
        },
        {
            "trigger": "RegionPlayableMapSet",
            "contents": "RegionPlayableMapSet(${1:region r})"
        },
        {
            "trigger": "BoardTitleSetText",
            "contents": "BoardTitleSetText(${1:int inBoard}, ${2:text inText})"
        },
        {
            "trigger": "OrderSetTargetItem",
            "contents": "OrderSetTargetItem(${1:order inOrder}, ${2:unit inItem})"
        },
        {
            "trigger": "UnitTypeGetName",
            "contents": "UnitTypeGetName(${1:string inUnitType})"
        },
        {
            "trigger": "DialogControlGetPropertyAsFixed",
            "contents": "DialogControlGetPropertyAsFixed(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_triggerControlPropertyMaxValue",
            "contents": "c_triggerControlPropertyMaxValue"
        },
        {
            "trigger": "c_gameMenuDialogLoadReplayButton",
            "contents": "c_gameMenuDialogLoadReplayButton"
        },
        {
            "trigger": "c_mouseButtonRight",
            "contents": "c_mouseButtonRight"
        },
        {
            "trigger": "c_gameCheatMinerals",
            "contents": "c_gameCheatMinerals"
        },
        {
            "trigger": "PortraitSetBorderTexture",
            "contents": "PortraitSetBorderTexture(${1:int p}, ${2:string inBorderFilePath})"
        },
        {
            "trigger": "DataTableGetActor",
            "contents": "DataTableGetActor(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_triggerControlPropertyBorderVisible",
            "contents": "c_triggerControlPropertyBorderVisible"
        },
        {
            "trigger": "CutsceneGetTriggerControl",
            "contents": "CutsceneGetTriggerControl(${1:int inControlId})"
        },
        {
            "trigger": "PlayerGetChargeRegen",
            "contents": "PlayerGetChargeRegen(${1:int inPlayer}, ${2:string inCharge})"
        },
        {
            "trigger": "c_triggerImageTypeNormal",
            "contents": "c_triggerImageTypeNormal"
        },
        {
            "trigger": "c_syncFrameTypeResourcePanel",
            "contents": "c_syncFrameTypeResourcePanel"
        },
        {
            "trigger": "c_invalidPurchaseItemId",
            "contents": "c_invalidPurchaseItemId"
        },
        {
            "trigger": "ObjectiveCreate",
            "contents": "ObjectiveCreate(${1:text inName}, ${2:text inDescription}, ${3:int inState}, ${4:bool inPrimary})"
        },
        {
            "trigger": "PurchaseItemCreate",
            "contents": "PurchaseItemCreate(${1:playergroup inPlayerGroup}, ${2:int inPurchaseGroupId}, ${3:int inSlot})"
        },
        {
            "trigger": "OrderGetTargetPoint",
            "contents": "OrderGetTargetPoint(${1:order inOrder})"
        },
        {
            "trigger": "GameWaitForResourcesToComplete",
            "contents": "GameWaitForResourcesToComplete()"
        },
        {
            "trigger": "c_triggerControlPropertyUseTransition",
            "contents": "c_triggerControlPropertyUseTransition"
        },
        {
            "trigger": "c_syncFrameTypeStatusUI",
            "contents": "c_syncFrameTypeStatusUI"
        },
        {
            "trigger": "MercenaryPanelSetDismissButtonEnabled",
            "contents": "MercenaryPanelSetDismissButtonEnabled(${1:playergroup players}, ${2:bool inEnabled})"
        },
        {
            "trigger": "c_unitStateFidget",
            "contents": "c_unitStateFidget"
        },
        {
            "trigger": "TimerCreate",
            "contents": "TimerCreate()"
        },
        {
            "trigger": "UnitAbilityCount",
            "contents": "UnitAbilityCount(${1:unit inUnit})"
        },
        {
            "trigger": "VictoryPanelAddTrackedStatistic",
            "contents": "VictoryPanelAddTrackedStatistic(${1:string inStatistic})"
        },
        {
            "trigger": "c_wtcExponential",
            "contents": "c_wtcExponential"
        },
        {
            "trigger": "UnitTechTreeBehaviorCount",
            "contents": "UnitTechTreeBehaviorCount(${1:unit inUnit}, ${2:string behaviorType}, ${3:int countType})"
        },
        {
            "trigger": "DialogControlRemoveItem",
            "contents": "DialogControlRemoveItem(${1:int control}, ${2:playergroup players}, ${3:int index})"
        },
        {
            "trigger": "CinematicDataStop",
            "contents": "CinematicDataStop()"
        },
        {
            "trigger": "TimerPause",
            "contents": "TimerPause(${1:timer t}, ${2:bool pause})"
        },
        {
            "trigger": "UnitGroupEmpty",
            "contents": "UnitGroupEmpty()"
        },
        {
            "trigger": "UnitMarkerRemove",
            "contents": "UnitMarkerRemove(${1:unit inUnit}, ${2:marker inMarker})"
        },
        {
            "trigger": "PlayerSetAlliance",
            "contents": "PlayerSetAlliance(${1:int inSourcePlayer}, ${2:int inAllianceId}, ${3:int inTargetPlayer}, ${4:bool ally})"
        },
        {
            "trigger": "c_unitPropEnergyExpected",
            "contents": "c_unitPropEnergyExpected"
        },
        {
            "trigger": "AchievementAward",
            "contents": "AchievementAward(${1:int player}, ${2:string name})"
        },
        {
            "trigger": "c_unitCreateIgnorePlacement",
            "contents": "c_unitCreateIgnorePlacement"
        },
        {
            "trigger": "UnitGroupFilterRegion",
            "contents": "UnitGroupFilterRegion(${1:unitgroup g}, ${2:region r}, ${3:int maxCount})"
        },
        {
            "trigger": "PathDestroyAll",
            "contents": "PathDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "DialogControlCreateFromTemplate",
            "contents": "DialogControlCreateFromTemplate(${1:int dialog}, ${2:int type}, ${3:string inTemplate})"
        },
        {
            "trigger": "PurchaseCategoryDestroyAll",
            "contents": "PurchaseCategoryDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "DataTableSetPlayerGroup",
            "contents": "DataTableSetPlayerGroup(${1:bool global}, ${2:string name}, ${3:playergroup val})"
        },
        {
            "trigger": "TriggerAddEventUnitLearnProgress",
            "contents": "TriggerAddEventUnitLearnProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "VisRevealArea",
            "contents": "VisRevealArea(${1:int player}, ${2:region area}, ${3:fixed duration}, ${4:bool checkCliffLevel})"
        },
        {
            "trigger": "ConversationDataLineSetPickedCount",
            "contents": "ConversationDataLineSetPickedCount(${1:string convId}, ${2:string lineId}, ${3:int count})"
        },
        {
            "trigger": "CameraSave",
            "contents": "CameraSave(${1:int player})"
        },
        {
            "trigger": "c_dataTypeText",
            "contents": "c_dataTypeText"
        },
        {
            "trigger": "UnitWeaponPeriod",
            "contents": "UnitWeaponPeriod(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_abilClassFilterRequired",
            "contents": "c_abilClassFilterRequired"
        },
        {
            "trigger": "UnitMarkerAdd",
            "contents": "UnitMarkerAdd(${1:unit inUnit}, ${2:marker inMarker})"
        },
        {
            "trigger": "c_dataTypeWaveInfo",
            "contents": "c_dataTypeWaveInfo"
        },
        {
            "trigger": "c_dataTypeUnknown",
            "contents": "c_dataTypeUnknown"
        },
        {
            "trigger": "VictoryPanelSetPlanetModelLink",
            "contents": "VictoryPanelSetPlanetModelLink(${1:string inModelLink})"
        },
        {
            "trigger": "ConversationReplySetText",
            "contents": "ConversationReplySetText(${1:int intId}, ${2:int replyId}, ${3:text inText})"
        },
        {
            "trigger": "c_creepSpeedBlend",
            "contents": "c_creepSpeedBlend"
        },
        {
            "trigger": "c_triggerControlTypeSlider",
            "contents": "c_triggerControlTypeSlider"
        },
        {
            "trigger": "c_keyBracketClose",
            "contents": "c_keyBracketClose"
        },
        {
            "trigger": "MercenarySetTooltipText",
            "contents": "MercenarySetTooltipText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "TextTagSetMaxSize",
            "contents": "TextTagSetMaxSize(${1:int inTag}, ${2:fixed inWidth}, ${3:fixed inHeight})"
        },
        {
            "trigger": "BoardSetPlayerColumn",
            "contents": "BoardSetPlayerColumn(${1:int inBoard}, ${2:int inCol}, ${3:bool inGroupByTeams})"
        },
        {
            "trigger": "c_gameResultTie",
            "contents": "c_gameResultTie"
        },
        {
            "trigger": "SoundLinkAsset",
            "contents": "SoundLinkAsset(${1:soundlink soundId})"
        },
        {
            "trigger": "c_syncFrameTypeTeamResourceButton",
            "contents": "c_syncFrameTypeTeamResourceButton"
        },
        {
            "trigger": "MercenaryIsRecentlyPurchased",
            "contents": "MercenaryIsRecentlyPurchased(${1:int inMercenaryId})"
        },
        {
            "trigger": "c_localSelectionTypeAlert",
            "contents": "c_localSelectionTypeAlert"
        },
        {
            "trigger": "RegionEntireMap",
            "contents": "RegionEntireMap()"
        },
        {
            "trigger": "UnitQueueItemCount",
            "contents": "UnitQueueItemCount(${1:unit inUnit}, ${2:int inSlot})"
        },
        {
            "trigger": "ResearchItemSetConfirmationText",
            "contents": "ResearchItemSetConfirmationText(${1:int inResearchItemId}, ${2:text inText})"
        },
        {
            "trigger": "BankKeyName",
            "contents": "BankKeyName(${1:bank b}, ${2:string section}, ${3:int index})"
        },
        {
            "trigger": "FogSetFallOffOverTime",
            "contents": "FogSetFallOffOverTime(${1:fixed f}, ${2:fixed timeRamp})"
        },
        {
            "trigger": "UserDataGetUserType",
            "contents": "UserDataGetUserType(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "ActorSendTo",
            "contents": "ActorSendTo(${1:actor a}, ${2:string refName}, ${3:string msg})"
        },
        {
            "trigger": "c_syncFrameTypeCashPanel",
            "contents": "c_syncFrameTypeCashPanel"
        },
        {
            "trigger": "c_unitStateDetectable",
            "contents": "c_unitStateDetectable"
        },
        {
            "trigger": "UserDataGetImagePath",
            "contents": "UserDataGetImagePath(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "GameSetSpeedLocked",
            "contents": "GameSetSpeedLocked(${1:bool isLocked})"
        },
        {
            "trigger": "c_visTypeMask",
            "contents": "c_visTypeMask"
        },
        {
            "trigger": "Cos",
            "contents": "Cos(${1:fixed degrees})"
        },
        {
            "trigger": "UnitStatsStart",
            "contents": "UnitStatsStart(${1:text name}, ${2:text unitName}, ${3:text unitFood})"
        },
        {
            "trigger": "c_invalidConversationId",
            "contents": "c_invalidConversationId"
        },
        {
            "trigger": "c_unitPropVitalityPercent",
            "contents": "c_unitPropVitalityPercent"
        },
        {
            "trigger": "PlanetSetBonusText",
            "contents": "PlanetSetBonusText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "DataTableGetPing",
            "contents": "DataTableGetPing(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_unitAttributeShielded",
            "contents": "c_unitAttributeShielded"
        },
        {
            "trigger": "c_effectAmountDamaged",
            "contents": "c_effectAmountDamaged"
        },
        {
            "trigger": "DialogControlDestroyAll",
            "contents": "DialogControlDestroyAll(${1:int dialog})"
        },
        {
            "trigger": "SoundtrackPlay",
            "contents": "SoundtrackPlay(${1:playergroup players}, ${2:int category}, ${3:string soundtrack}, ${4:int cue}, ${5:int index}, ${6:bool makeDefault})"
        },
        {
            "trigger": "c_syncFrameTypeLeaderPanel",
            "contents": "c_syncFrameTypeLeaderPanel"
        },
        {
            "trigger": "UnitCargoCreate",
            "contents": "UnitCargoCreate(${1:unit inUnit}, ${2:string inId}, ${3:int inCount})"
        },
        {
            "trigger": "c_triggerControlPropertyVisible",
            "contents": "c_triggerControlPropertyVisible"
        },
        {
            "trigger": "UnitBehaviorRemovePlayer",
            "contents": "UnitBehaviorRemovePlayer(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inPlayer}, ${4:int inCount})"
        },
        {
            "trigger": "ASin",
            "contents": "ASin(${1:fixed x})"
        },
        {
            "trigger": "c_textureSlotComponentNormal",
            "contents": "c_textureSlotComponentNormal"
        },
        {
            "trigger": "TextTagSetVelocity",
            "contents": "TextTagSetVelocity(${1:int inTag}, ${2:fixed inSpeed}, ${3:fixed inAngle})"
        },
        {
            "trigger": "VictoryPanelSetMissionText",
            "contents": "VictoryPanelSetMissionText(${1:text inText})"
        },
        {
            "trigger": "c_playerStateDisplayInViewMenu",
            "contents": "c_playerStateDisplayInViewMenu"
        },
        {
            "trigger": "TextTagAttachToUnitPoint",
            "contents": "TextTagAttachToUnitPoint(${1:int inTag}, ${2:unit inUnit}, ${3:string attachmentPoint}, ${4:int offsetX}, ${5:int offsetY})"
        },
        {
            "trigger": "PlanetSetPrimaryObjectiveText",
            "contents": "PlanetSetPrimaryObjectiveText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "ResearchTierSetPlayerGroup",
            "contents": "ResearchTierSetPlayerGroup(${1:int inResearchTierId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "GameTimeOfDaySetLength",
            "contents": "GameTimeOfDaySetLength(${1:fixed inSecs})"
        },
        {
            "trigger": "CameraInfoSetValue",
            "contents": "CameraInfoSetValue(${1:camerainfo c}, ${2:int type}, ${3:fixed value})"
        },
        {
            "trigger": "EventUnitRegion",
            "contents": "EventUnitRegion()"
        },
        {
            "trigger": "UserDataInstanceFromReference",
            "contents": "UserDataInstanceFromReference(${1:string inRef})"
        },
        {
            "trigger": "c_timerWindowStyleVerticalTitleTime",
            "contents": "c_timerWindowStyleVerticalTitleTime"
        },
        {
            "trigger": "ResearchCategorySetCurrentLevel",
            "contents": "ResearchCategorySetCurrentLevel(${1:int inResearchCategoryId}, ${2:int inLevel})"
        },
        {
            "trigger": "MovieStartRecording",
            "contents": "MovieStartRecording(${1:string inName})"
        },
        {
            "trigger": "UserDataSetModel",
            "contents": "UserDataSetModel(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "MakeMsgAnimBracketStart",
            "contents": "MakeMsgAnimBracketStart(${1:string animName}, ${2:string propsOpening}, ${3:string propsContent}, ${4:string propsClosing}, ${5:int animBracketStartFlags}, ${6:fixed timeVariant}, ${7:int timeType})"
        },
        {
            "trigger": "c_unitPropShieldsPercent",
            "contents": "c_unitPropShieldsPercent"
        },
        {
            "trigger": "UnitAddCooldown",
            "contents": "UnitAddCooldown(${1:unit inUnit}, ${2:string inCooldown}, ${3:fixed inVal})"
        },
        {
            "trigger": "EngineReset",
            "contents": "EngineReset()"
        },
        {
            "trigger": "c_playerStateTerrazineCostIgnored",
            "contents": "c_playerStateTerrazineCostIgnored"
        },
        {
            "trigger": "PathGetLineWidth",
            "contents": "PathGetLineWidth(${1:int inPathId}, ${2:int inLocation})"
        },
        {
            "trigger": "EventTargetModeState",
            "contents": "EventTargetModeState()"
        },
        {
            "trigger": "TriggerAddEventPlanetPanelReplayPressed",
            "contents": "TriggerAddEventPlanetPanelReplayPressed(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "PortraitSetChannel",
            "contents": "PortraitSetChannel(${1:int p}, ${2:int channel})"
        },
        {
            "trigger": "PlanetSetResearchTitle",
            "contents": "PlanetSetResearchTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "BoardItemSetIcon",
            "contents": "BoardItemSetIcon(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:string inIcon}, ${5:bool inLeft})"
        },
        {
            "trigger": "c_triggerControlEventTypeMouseExit",
            "contents": "c_triggerControlEventTypeMouseExit"
        },
        {
            "trigger": "c_textTagTimeDuration",
            "contents": "c_textTagTimeDuration"
        },
        {
            "trigger": "PlayerGroupRemove",
            "contents": "PlayerGroupRemove(${1:playergroup inGroup}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_syncFrameTypeTechGlossaryPanel",
            "contents": "c_syncFrameTypeTechGlossaryPanel"
        },
        {
            "trigger": "UnitQueueItemTime",
            "contents": "UnitQueueItemTime(${1:unit inUnit}, ${2:int inTimeType}, ${3:int inItem})"
        },
        {
            "trigger": "ConversationDataStateName",
            "contents": "ConversationDataStateName(${1:string stateIndex})"
        },
        {
            "trigger": "PointWithOffset",
            "contents": "PointWithOffset(${1:point p}, ${2:fixed x}, ${3:fixed y})"
        },
        {
            "trigger": "CatalogFieldIsArray",
            "contents": "CatalogFieldIsArray(${1:string scope}, ${2:string field})"
        },
        {
            "trigger": "c_keyNumPadPlus",
            "contents": "c_keyNumPadPlus"
        },
        {
            "trigger": "e_physicsSimulated",
            "contents": "e_physicsSimulated"
        },
        {
            "trigger": "DialogControlGetDialog",
            "contents": "DialogControlGetDialog(${1:int control})"
        },
        {
            "trigger": "VictoryPanelSetStatisticsTitle",
            "contents": "VictoryPanelSetStatisticsTitle(${1:text inText})"
        },
        {
            "trigger": "UserDataGetColor",
            "contents": "UserDataGetColor(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "MarkerGetMismatchFlag",
            "contents": "MarkerGetMismatchFlag(${1:marker m}, ${2:int flag})"
        },
        {
            "trigger": "UserDataResetValue",
            "contents": "UserDataResetValue(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "UnitWeaponCount",
            "contents": "UnitWeaponCount(${1:unit inUnit})"
        },
        {
            "trigger": "TextTagPause",
            "contents": "TextTagPause(${1:int inTag}, ${2:bool inPause})"
        },
        {
            "trigger": "c_unitPropEnergyPercent",
            "contents": "c_unitPropEnergyPercent"
        },
        {
            "trigger": "c_unitPropCurrent",
            "contents": "c_unitPropCurrent"
        },
        {
            "trigger": "GameSetSeed",
            "contents": "GameSetSeed(${1:int value})"
        },
        {
            "trigger": "UISetSelectionTypeEnabled",
            "contents": "UISetSelectionTypeEnabled(${1:playergroup inPlayers}, ${2:int inSelectionType}, ${3:bool inEnabled})"
        },
        {
            "trigger": "MakeMsgRefCreate",
            "contents": "MakeMsgRefCreate(${1:string refName})"
        },
        {
            "trigger": "c_unitQueueTimeRemaining",
            "contents": "c_unitQueueTimeRemaining"
        },
        {
            "trigger": "ConversationDataWasSkipped",
            "contents": "ConversationDataWasSkipped()"
        },
        {
            "trigger": "DialogGetRelativeAnchor",
            "contents": "DialogGetRelativeAnchor(${1:int dialog})"
        },
        {
            "trigger": "c_playerStateXPGain",
            "contents": "c_playerStateXPGain"
        },
        {
            "trigger": "ConversationDataStateText",
            "contents": "ConversationDataStateText(${1:string stateIndex}, ${2:string inInfoName})"
        },
        {
            "trigger": "TriggerAddEventUnitAbilityAutoCastChange",
            "contents": "TriggerAddEventUnitAbilityAutoCastChange(${1:trigger t}, ${2:unitref u}, ${3:abilcmd a}, ${4:int inChangeType}, ${5:bool includeSharedAbils})"
        },
        {
            "trigger": "TriggerAddEventPlanetPanelDeathComplete",
            "contents": "TriggerAddEventPlanetPanelDeathComplete(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_nydusLinkCommunity",
            "contents": "c_nydusLinkCommunity"
        },
        {
            "trigger": "c_cmdStateIsAutoCast",
            "contents": "c_cmdStateIsAutoCast"
        },
        {
            "trigger": "DataTableSetInt",
            "contents": "DataTableSetInt(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "SoundtrackWait",
            "contents": "SoundtrackWait(${1:string soundtrack})"
        },
        {
            "trigger": "BoardSetPosition",
            "contents": "BoardSetPosition(${1:int inBoard}, ${2:int inX}, ${3:int inY})"
        },
        {
            "trigger": "DialogLastCreated",
            "contents": "DialogLastCreated()"
        },
        {
            "trigger": "c_key1",
            "contents": "c_key1"
        },
        {
            "trigger": "c_keyPageUp",
            "contents": "c_keyPageUp"
        },
        {
            "trigger": "EventPlayerProperty",
            "contents": "EventPlayerProperty()"
        },
        {
            "trigger": "GameIsOnline",
            "contents": "GameIsOnline()"
        },
        {
            "trigger": "c_effectAmountEnergyChanged",
            "contents": "c_effectAmountEnergyChanged"
        },
        {
            "trigger": "EventMouseMovedPosYWorld",
            "contents": "EventMouseMovedPosYWorld()"
        },
        {
            "trigger": "c_unitPropMovementSpeed",
            "contents": "c_unitPropMovementSpeed"
        },
        {
            "trigger": "EventUnitAttributePoints",
            "contents": "EventUnitAttributePoints()"
        },
        {
            "trigger": "EventCutsceneBookmark",
            "contents": "EventCutsceneBookmark()"
        },
        {
            "trigger": "c_transitionDurationImmediate",
            "contents": "c_transitionDurationImmediate"
        },
        {
            "trigger": "c_techCountQueuedOrBetter",
            "contents": "c_techCountQueuedOrBetter"
        },
        {
            "trigger": "c_battleReportStateNormal",
            "contents": "c_battleReportStateNormal"
        },
        {
            "trigger": "CameraShake",
            "contents": "CameraShake(${1:int player}, ${2:string amplitude}, ${3:string frequency}, ${4:fixed blendIn}, ${5:fixed blendOut}, ${6:fixed duration})"
        },
        {
            "trigger": "ResearchItemDestroy",
            "contents": "ResearchItemDestroy(${1:int inResearchItemId})"
        },
        {
            "trigger": "BoardItemSetTextColor",
            "contents": "BoardItemSetTextColor(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:color inColor})"
        },
        {
            "trigger": "c_localSelectionTypeSelectLarva",
            "contents": "c_localSelectionTypeSelectLarva"
        },
        {
            "trigger": "CampaignProgressSetCampaignFinished",
            "contents": "CampaignProgressSetCampaignFinished(${1:playergroup players}, ${2:string campaignId}, ${3:bool inFinished})"
        },
        {
            "trigger": "c_keyDelete",
            "contents": "c_keyDelete"
        },
        {
            "trigger": "c_unitProgressStatePaused",
            "contents": "c_unitProgressStatePaused"
        },
        {
            "trigger": "TextWithColor",
            "contents": "TextWithColor(${1:text t}, ${2:color c})"
        },
        {
            "trigger": "c_spendLocationAll",
            "contents": "c_spendLocationAll"
        },
        {
            "trigger": "c_formatNumberStyleNormal",
            "contents": "c_formatNumberStyleNormal"
        },
        {
            "trigger": "c_killDisplayAlways",
            "contents": "c_killDisplayAlways"
        },
        {
            "trigger": "c_orderQueueReplace",
            "contents": "c_orderQueueReplace"
        },
        {
            "trigger": "c_unitDamageTypeSpell",
            "contents": "c_unitDamageTypeSpell"
        },
        {
            "trigger": "c_unitCountAll",
            "contents": "c_unitCountAll"
        },
        {
            "trigger": "PlanetSetTechnologyText",
            "contents": "PlanetSetTechnologyText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_textTagFadeText",
            "contents": "c_textTagFadeText"
        },
        {
            "trigger": "DialogControlCreateInPanelFromTemplate",
            "contents": "DialogControlCreateInPanelFromTemplate(${1:int panel}, ${2:int type}, ${3:string inTemplate})"
        },
        {
            "trigger": "c_triggerControlPropertyDesaturationColor",
            "contents": "c_triggerControlPropertyDesaturationColor"
        },
        {
            "trigger": "ResearchItemIsRecentlyPurchased",
            "contents": "ResearchItemIsRecentlyPurchased(${1:int inResearchItemId})"
        },
        {
            "trigger": "SoundChannelMute",
            "contents": "SoundChannelMute(${1:playergroup players}, ${2:int channel}, ${3:bool mute})"
        },
        {
            "trigger": "c_dataTypeDialog",
            "contents": "c_dataTypeDialog"
        },
        {
            "trigger": "UnitForceStatusBar",
            "contents": "UnitForceStatusBar(${1:unit inUnit}, ${2:bool inShow})"
        },
        {
            "trigger": "c_triggerObservedTypeObservedOrSelectedPlayerId",
            "contents": "c_triggerObservedTypeObservedOrSelectedPlayerId"
        },
        {
            "trigger": "MercenarySetScenePath",
            "contents": "MercenarySetScenePath(${1:int inMercenaryId}, ${2:string inFilePath})"
        },
        {
            "trigger": "PlayerScoreValueSetFromInt",
            "contents": "PlayerScoreValueSetFromInt(${1:int player}, ${2:string value}, ${3:int amount})"
        },
        {
            "trigger": "TechTreeUnitProducedAbilCmd",
            "contents": "TechTreeUnitProducedAbilCmd(${1:string unitType}, ${2:int index})"
        },
        {
            "trigger": "ActorScopeLastCreatedSend",
            "contents": "ActorScopeLastCreatedSend()"
        },
        {
            "trigger": "c_gameCheatNoVictory",
            "contents": "c_gameCheatNoVictory"
        },
        {
            "trigger": "ResearchCategorySetSlot",
            "contents": "ResearchCategorySetSlot(${1:int inResearchCategoryId}, ${2:int inSlot})"
        },
        {
            "trigger": "OrderGetTargetType",
            "contents": "OrderGetTargetType(${1:order inOrder})"
        },
        {
            "trigger": "DataTableSetAIFilter",
            "contents": "DataTableSetAIFilter(${1:bool global}, ${2:string name}, ${3:aifilter val})"
        },
        {
            "trigger": "BoardItemSetProgressRange",
            "contents": "BoardItemSetProgressRange(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:fixed inMin}, ${5:fixed inMax})"
        },
        {
            "trigger": "GameTimeOfDayGetLength",
            "contents": "GameTimeOfDayGetLength()"
        },
        {
            "trigger": "c_unitInventoryChangeBuys",
            "contents": "c_unitInventoryChangeBuys"
        },
        {
            "trigger": "FixedToTextAdvanced",
            "contents": "FixedToTextAdvanced(${1:fixed inNumber}, ${2:int inStyle}, ${3:bool inGroup}, ${4:int inMinDigits}, ${5:int inMaxDigits})"
        },
        {
            "trigger": "UnitAddOnChild",
            "contents": "UnitAddOnChild(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_keyBracketOpen",
            "contents": "c_keyBracketOpen"
        },
        {
            "trigger": "c_key4",
            "contents": "c_key4"
        },
        {
            "trigger": "UnitMarker",
            "contents": "UnitMarker(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "TechTreeUnitCount",
            "contents": "TechTreeUnitCount(${1:int player}, ${2:string unitType}, ${3:int countType})"
        },
        {
            "trigger": "EventUnitProgressUnit",
            "contents": "EventUnitProgressUnit()"
        },
        {
            "trigger": "c_triggerControlTypeListBox",
            "contents": "c_triggerControlTypeListBox"
        },
        {
            "trigger": "DataTableSetActorScope",
            "contents": "DataTableSetActorScope(${1:bool global}, ${2:string name}, ${3:actorscope val})"
        },
        {
            "trigger": "PurchaseGetSelectedPurchaseItem",
            "contents": "PurchaseGetSelectedPurchaseItem(${1:int inPlayer})"
        },
        {
            "trigger": "MarkerGetCastingUnit",
            "contents": "MarkerGetCastingUnit(${1:marker m})"
        },
        {
            "trigger": "TransmissionSourceSetPauseAllowed",
            "contents": "TransmissionSourceSetPauseAllowed(${1:transmissionsource source}, ${2:bool allowed})"
        },
        {
            "trigger": "BoardItemSetSortValue",
            "contents": "BoardItemSetSortValue(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:int inVal})"
        },
        {
            "trigger": "c_effectAmountFound",
            "contents": "c_effectAmountFound"
        },
        {
            "trigger": "MakeMsgTransition",
            "contents": "MakeMsgTransition(${1:int transitionType}, ${2:fixed durationBase}, ${3:fixed durationRange})"
        },
        {
            "trigger": "TransmissionWait",
            "contents": "TransmissionWait(${1:int t}, ${2:fixed offset})"
        },
        {
            "trigger": "UnitQueueItemGet",
            "contents": "UnitQueueItemGet(${1:unit inUnit}, ${2:int inItem}, ${3:int inSlot})"
        },
        {
            "trigger": "c_actorIntersectAgainstRadiusContact",
            "contents": "c_actorIntersectAgainstRadiusContact"
        },
        {
            "trigger": "c_keyPrintScreen",
            "contents": "c_keyPrintScreen"
        },
        {
            "trigger": "c_textTagFadeEdge",
            "contents": "c_textTagFadeEdge"
        },
        {
            "trigger": "UnitBehaviorGet",
            "contents": "UnitBehaviorGet(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "TextTagSetTime",
            "contents": "TextTagSetTime(${1:int inTag}, ${2:int inType}, ${3:fixed inVal})"
        },
        {
            "trigger": "BoardSetColumnWidth",
            "contents": "BoardSetColumnWidth(${1:int inBoard}, ${2:int inCol}, ${3:fixed inWidth})"
        },
        {
            "trigger": "c_cameraDirectionXY",
            "contents": "c_cameraDirectionXY"
        },
        {
            "trigger": "TechTreeUnitAliasCount",
            "contents": "TechTreeUnitAliasCount(${1:int player}, ${2:string unitType}, ${3:int countType})"
        },
        {
            "trigger": "AngleBetweenPoints",
            "contents": "AngleBetweenPoints(${1:point p1}, ${2:point p2})"
        },
        {
            "trigger": "UnitGroupUnit",
            "contents": "UnitGroupUnit(${1:unitgroup inGroup}, ${2:int inIndex})"
        },
        {
            "trigger": "UserDataSetUser",
            "contents": "UserDataSetUser(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValueType}, ${6:string inValueInstance})"
        },
        {
            "trigger": "EventUnitDamageAbsorbed",
            "contents": "EventUnitDamageAbsorbed()"
        },
        {
            "trigger": "c_formatNumberStylePercent",
            "contents": "c_formatNumberStylePercent"
        },
        {
            "trigger": "PingLastCreated",
            "contents": "PingLastCreated()"
        },
        {
            "trigger": "UnitGetOwner",
            "contents": "UnitGetOwner(${1:unit inUnit})"
        },
        {
            "trigger": "DataTableSetConversation",
            "contents": "DataTableSetConversation(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "ConversationDataChoiceId",
            "contents": "ConversationDataChoiceId(${1:string convId}, ${2:int index})"
        },
        {
            "trigger": "BoardSetAnchor",
            "contents": "BoardSetAnchor(${1:int inBoard}, ${2:int inAnchor}, ${3:int inOffsetX}, ${4:int inOffsetY})"
        },
        {
            "trigger": "CampaignProgressSetTutorialFinished",
            "contents": "CampaignProgressSetTutorialFinished(${1:playergroup players}, ${2:string campaignId}, ${3:bool inFinished})"
        },
        {
            "trigger": "EventBattleReportPanelDifficultySelected",
            "contents": "EventBattleReportPanelDifficultySelected()"
        },
        {
            "trigger": "c_orderQueueAddToFront",
            "contents": "c_orderQueueAddToFront"
        },
        {
            "trigger": "Trunc",
            "contents": "Trunc(${1:fixed x})"
        },
        {
            "trigger": "UISetResourceVisible",
            "contents": "UISetResourceVisible(${1:playergroup inPlayers}, ${2:int inResource}, ${3:bool inVisible})"
        },
        {
            "trigger": "PlanetPanelSetBackButtonTooltip",
            "contents": "PlanetPanelSetBackButtonTooltip(${1:playergroup players}, ${2:text inText})"
        },
        {
            "trigger": "PurchaseItemDestroyAll",
            "contents": "PurchaseItemDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_visTypeFog",
            "contents": "c_visTypeFog"
        },
        {
            "trigger": "c_triggerBlendModeSubtract",
            "contents": "c_triggerBlendModeSubtract"
        },
        {
            "trigger": "c_keyHome",
            "contents": "c_keyHome"
        },
        {
            "trigger": "c_colorComponentBlue",
            "contents": "c_colorComponentBlue"
        },
        {
            "trigger": "PlayerScoreValueGetAsInt",
            "contents": "PlayerScoreValueGetAsInt(${1:int player}, ${2:string value})"
        },
        {
            "trigger": "c_triggerControlTypeUnitTarget",
            "contents": "c_triggerControlTypeUnitTarget"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton4",
            "contents": "c_gameMenuDialogGenericButton4"
        },
        {
            "trigger": "UnitSetInfoTip",
            "contents": "UnitSetInfoTip(${1:unit inUnit}, ${2:text tip})"
        },
        {
            "trigger": "GameSetTransitionMap",
            "contents": "GameSetTransitionMap(${1:string transitionMap})"
        },
        {
            "trigger": "TechTreeUpgradeProducedAbilCmd",
            "contents": "TechTreeUpgradeProducedAbilCmd(${1:string upgradeType}, ${2:int index})"
        },
        {
            "trigger": "ConversationDataActiveCamera",
            "contents": "ConversationDataActiveCamera()"
        },
        {
            "trigger": "UnitFlashSelection",
            "contents": "UnitFlashSelection(${1:unit inUnit}, ${2:fixed inPeriod})"
        },
        {
            "trigger": "c_keyNumPad3",
            "contents": "c_keyNumPad3"
        },
        {
            "trigger": "c_triggerControlPropertyHeight",
            "contents": "c_triggerControlPropertyHeight"
        },
        {
            "trigger": "c_unitStateRadarable",
            "contents": "c_unitStateRadarable"
        },
        {
            "trigger": "StringReplace",
            "contents": "StringReplace(${1:string s}, ${2:string replace}, ${3:int start}, ${4:int end})"
        },
        {
            "trigger": "UnitBehaviorTransfer",
            "contents": "UnitBehaviorTransfer(${1:unit inSource}, ${2:unit inDest}, ${3:string inBehavior}, ${4:int inCount})"
        },
        {
            "trigger": "TransmissionSetOption",
            "contents": "TransmissionSetOption(${1:int inOptionIndex}, ${2:bool inValue})"
        },
        {
            "trigger": "EventUnitGetItemType",
            "contents": "EventUnitGetItemType()"
        },
        {
            "trigger": "GameIsSpeedLocked",
            "contents": "GameIsSpeedLocked()"
        },
        {
            "trigger": "TechTreeRestrictionsEnable",
            "contents": "TechTreeRestrictionsEnable(${1:int player}, ${2:bool enable})"
        },
        {
            "trigger": "c_purchaseItemStatePurchased",
            "contents": "c_purchaseItemStatePurchased"
        },
        {
            "trigger": "c_invalidObjectiveId",
            "contents": "c_invalidObjectiveId"
        },
        {
            "trigger": "PathSetDestinationPoint",
            "contents": "PathSetDestinationPoint(${1:int inPathId}, ${2:point inDestination})"
        },
        {
            "trigger": "MarkerCastingUnit",
            "contents": "MarkerCastingUnit(${1:string link}, ${2:unit u})"
        },
        {
            "trigger": "BattleReportGetState",
            "contents": "BattleReportGetState(${1:int inBattleReportId})"
        },
        {
            "trigger": "c_unitBehaviorChangeDeactivate",
            "contents": "c_unitBehaviorChangeDeactivate"
        },
        {
            "trigger": "TechTreeUnitProducesUnit",
            "contents": "TechTreeUnitProducesUnit(${1:string unitType}, ${2:int index})"
        },
        {
            "trigger": "DataTableSetTrigger",
            "contents": "DataTableSetTrigger(${1:bool global}, ${2:string name}, ${3:trigger val})"
        },
        {
            "trigger": "ConversationDataLineId",
            "contents": "ConversationDataLineId(${1:string convId}, ${2:int index})"
        },
        {
            "trigger": "c_unitBehaviorFlagDisableBuilding",
            "contents": "c_unitBehaviorFlagDisableBuilding"
        },
        {
            "trigger": "c_triggerControlPropertyTransitionModel",
            "contents": "c_triggerControlPropertyTransitionModel"
        },
        {
            "trigger": "c_environmentDoodads",
            "contents": "c_environmentDoodads"
        },
        {
            "trigger": "UIHideTextCrawl",
            "contents": "UIHideTextCrawl(${1:playergroup inPlayers})"
        },
        {
            "trigger": "CameraSetMouseRotationSpeed",
            "contents": "CameraSetMouseRotationSpeed(${1:int player}, ${2:int direction}, ${3:fixed value})"
        },
        {
            "trigger": "c_messageAreaDirective",
            "contents": "c_messageAreaDirective"
        },
        {
            "trigger": "UnitBehaviorGetChargeRegen",
            "contents": "UnitBehaviorGetChargeRegen(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCharge})"
        },
        {
            "trigger": "PingGetPlayerGroup",
            "contents": "PingGetPlayerGroup(${1:int p})"
        },
        {
            "trigger": "UnitFilterMatch",
            "contents": "UnitFilterMatch(${1:unit inUnit}, ${2:int inPlayer}, ${3:unitfilter inFilter})"
        },
        {
            "trigger": "EventUnitInventoryItemContainer",
            "contents": "EventUnitInventoryItemContainer()"
        },
        {
            "trigger": "DialogControlGetOffsetX",
            "contents": "DialogControlGetOffsetX(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "EventVictoryPanelDifficultySelected",
            "contents": "EventVictoryPanelDifficultySelected()"
        },
        {
            "trigger": "DialogGetOffsetX",
            "contents": "DialogGetOffsetX(${1:int dialog})"
        },
        {
            "trigger": "PlayerGroupEmpty",
            "contents": "PlayerGroupEmpty()"
        },
        {
            "trigger": "ACos",
            "contents": "ACos(${1:fixed x})"
        },
        {
            "trigger": "c_killDisplayNever",
            "contents": "c_killDisplayNever"
        },
        {
            "trigger": "c_gameMenuDialogSaveButton",
            "contents": "c_gameMenuDialogSaveButton"
        },
        {
            "trigger": "c_keyA",
            "contents": "c_keyA"
        },
        {
            "trigger": "PlayerBeaconIsSet",
            "contents": "PlayerBeaconIsSet(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "UISetCustomMenuItemShortcut",
            "contents": "UISetCustomMenuItemShortcut(${1:playergroup inPlayers}, ${2:int inMenuItemType}, ${3:text inText})"
        },
        {
            "trigger": "c_triggerControlPropertyAllowedButtons",
            "contents": "c_triggerControlPropertyAllowedButtons"
        },
        {
            "trigger": "c_unitPropLevel",
            "contents": "c_unitPropLevel"
        },
        {
            "trigger": "c_anchorBottom",
            "contents": "c_anchorBottom"
        },
        {
            "trigger": "CutsceneLastCreated",
            "contents": "CutsceneLastCreated()"
        },
        {
            "trigger": "BankValueSetFromPoint",
            "contents": "BankValueSetFromPoint(${1:bank b}, ${2:string section}, ${3:string key}, ${4:point value})"
        },
        {
            "trigger": "c_spendLocationPlayer",
            "contents": "c_spendLocationPlayer"
        },
        {
            "trigger": "c_keyNumPad7",
            "contents": "c_keyNumPad7"
        },
        {
            "trigger": "c_keyF12",
            "contents": "c_keyF12"
        },
        {
            "trigger": "TriggerAddEventMovieFinished",
            "contents": "TriggerAddEventMovieFinished(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "UnitWeaponPeriodRemaining",
            "contents": "UnitWeaponPeriodRemaining(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "StringLength",
            "contents": "StringLength(${1:string s})"
        },
        {
            "trigger": "c_backgroundFixed",
            "contents": "c_backgroundFixed"
        },
        {
            "trigger": "PurchaseGroupSetSlot",
            "contents": "PurchaseGroupSetSlot(${1:int inPurchaseGroupId}, ${2:int inSlot})"
        },
        {
            "trigger": "c_dialogControlItemNone",
            "contents": "c_dialogControlItemNone"
        },
        {
            "trigger": "Log2",
            "contents": "Log2(${1:fixed x})"
        },
        {
            "trigger": "c_triggerControlPropertyImage",
            "contents": "c_triggerControlPropertyImage"
        },
        {
            "trigger": "c_conversationReplyStateRead",
            "contents": "c_conversationReplyStateRead"
        },
        {
            "trigger": "c_unitPropBountyCustom",
            "contents": "c_unitPropBountyCustom"
        },
        {
            "trigger": "DialogSetChannel",
            "contents": "DialogSetChannel(${1:int dialog}, ${2:int channel})"
        },
        {
            "trigger": "TechTreeUnitIsAllowed",
            "contents": "TechTreeUnitIsAllowed(${1:int player}, ${2:string unitType})"
        },
        {
            "trigger": "EventCustomDialogResult",
            "contents": "EventCustomDialogResult()"
        },
        {
            "trigger": "EventUnit",
            "contents": "EventUnit()"
        },
        {
            "trigger": "DialogControlAddItem",
            "contents": "DialogControlAddItem(${1:int control}, ${2:playergroup players}, ${3:text value})"
        },
        {
            "trigger": "c_unitInventoryCountCarried",
            "contents": "c_unitInventoryCountCarried"
        },
        {
            "trigger": "UnitAbilityCheck",
            "contents": "UnitAbilityCheck(${1:unit inUnit}, ${2:string inAbil}, ${3:bool inEnabled})"
        },
        {
            "trigger": "c_playerStateStartingRallyEnabled",
            "contents": "c_playerStateStartingRallyEnabled"
        },
        {
            "trigger": "c_dataTypeTimer",
            "contents": "c_dataTypeTimer"
        },
        {
            "trigger": "PlanetSetTechnologyUnitLink",
            "contents": "PlanetSetTechnologyUnitLink(${1:int inPlanetId}, ${2:string inUnitLink})"
        },
        {
            "trigger": "c_spendLocationGlobal",
            "contents": "c_spendLocationGlobal"
        },
        {
            "trigger": "PlayerBeaconBuildMenuClearSlotInfo",
            "contents": "PlayerBeaconBuildMenuClearSlotInfo(${1:int inPlayer}, ${2:int inType}, ${3:int inSlotNum})"
        },
        {
            "trigger": "c_dataTypeDoodad",
            "contents": "c_dataTypeDoodad"
        },
        {
            "trigger": "c_cameraDirectionYZ",
            "contents": "c_cameraDirectionYZ"
        },
        {
            "trigger": "c_textTagFadeBackground",
            "contents": "c_textTagFadeBackground"
        },
        {
            "trigger": "c_unitPropCarriedCustom",
            "contents": "c_unitPropCarriedCustom"
        },
        {
            "trigger": "c_buildMenuOpening",
            "contents": "c_buildMenuOpening"
        },
        {
            "trigger": "UnitGroupTestPlane",
            "contents": "UnitGroupTestPlane(${1:unitgroup inGroup}, ${2:int inPlane})"
        },
        {
            "trigger": "ConversationDataChoiceGetPickedCount",
            "contents": "ConversationDataChoiceGetPickedCount(${1:string convId}, ${2:string choiceId})"
        },
        {
            "trigger": "ActorSend",
            "contents": "ActorSend(${1:actor a}, ${2:string msg})"
        },
        {
            "trigger": "DataTableGetMarker",
            "contents": "DataTableGetMarker(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_triggerControlPropertyHoverImage",
            "contents": "c_triggerControlPropertyHoverImage"
        },
        {
            "trigger": "DialogControlGetHeight",
            "contents": "DialogControlGetHeight(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "StringContains",
            "contents": "StringContains(${1:string s1}, ${2:string s2}, ${3:int location}, ${4:bool caseSens})"
        },
        {
            "trigger": "UnitTestPlane",
            "contents": "UnitTestPlane(${1:unit inUnit}, ${2:int inPlane})"
        },
        {
            "trigger": "UserDataLoadType",
            "contents": "UserDataLoadType(${1:string inType}, ${2:bank inBank}, ${3:string inSection})"
        },
        {
            "trigger": "UnitIsValid",
            "contents": "UnitIsValid(${1:unit inUnit})"
        },
        {
            "trigger": "ObjectiveSetBefore",
            "contents": "ObjectiveSetBefore(${1:int inObjective}, ${2:int inBeforeObjective})"
        },
        {
            "trigger": "TriggerAddEventSelectedPurchaseCategoryChanged",
            "contents": "TriggerAddEventSelectedPurchaseCategoryChanged(${1:trigger t}, ${2:int player}, ${3:int inPurchaseCategoryId})"
        },
        {
            "trigger": "c_formatNumberStyleCurrency",
            "contents": "c_formatNumberStyleCurrency"
        },
        {
            "trigger": "c_animTimeVariantAsAutomatic",
            "contents": "c_animTimeVariantAsAutomatic"
        },
        {
            "trigger": "c_actorRequestActorImplicit",
            "contents": "c_actorRequestActorImplicit"
        },
        {
            "trigger": "DataTableGetConversation",
            "contents": "DataTableGetConversation(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_mouseButtonMiddle",
            "contents": "c_mouseButtonMiddle"
        },
        {
            "trigger": "CutscenePause",
            "contents": "CutscenePause(${1:int inCutscene})"
        },
        {
            "trigger": "TechTreeBehaviorAllow",
            "contents": "TechTreeBehaviorAllow(${1:int player}, ${2:string behaviorType}, ${3:bool allow})"
        },
        {
            "trigger": "TechTreeUpgradeProducedAbilCmdCount",
            "contents": "TechTreeUpgradeProducedAbilCmdCount(${1:string upgradeType})"
        },
        {
            "trigger": "c_unitStateIsDead",
            "contents": "c_unitStateIsDead"
        },
        {
            "trigger": "ActorWorldParticleFXDestroy",
            "contents": "ActorWorldParticleFXDestroy()"
        },
        {
            "trigger": "c_unitAbilChargeCountUse",
            "contents": "c_unitAbilChargeCountUse"
        },
        {
            "trigger": "c_gameCheatLast",
            "contents": "c_gameCheatLast"
        },
        {
            "trigger": "CharacterSheetPanelSetPortraitModelLink",
            "contents": "CharacterSheetPanelSetPortraitModelLink(${1:playergroup players}, ${2:string inModelLink})"
        },
        {
            "trigger": "UISetButtonFaceHighlighted",
            "contents": "UISetButtonFaceHighlighted(${1:playergroup inPlayers}, ${2:string face}, ${3:bool inHighlight})"
        },
        {
            "trigger": "ConversationDataSaveStateValue",
            "contents": "ConversationDataSaveStateValue(${1:string stateIndex}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "c_noPortraitChannel",
            "contents": "c_noPortraitChannel"
        },
        {
            "trigger": "UnitInventoryUnit",
            "contents": "UnitInventoryUnit(${1:unit inItem})"
        },
        {
            "trigger": "c_unitPropHeight",
            "contents": "c_unitPropHeight"
        },
        {
            "trigger": "c_cameraValueNearClip",
            "contents": "c_cameraValueNearClip"
        },
        {
            "trigger": "DialogControlGetItemCount",
            "contents": "DialogControlGetItemCount(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_unitProgressStageCancel",
            "contents": "c_unitProgressStageCancel"
        },
        {
            "trigger": "GameMapName",
            "contents": "GameMapName()"
        },
        {
            "trigger": "AchievementErase",
            "contents": "AchievementErase(${1:int player}, ${2:string name})"
        },
        {
            "trigger": "OrderSetAbilityCommand",
            "contents": "OrderSetAbilityCommand(${1:order inOrder}, ${2:abilcmd inAbilCmd})"
        },
        {
            "trigger": "TechTreeBehaviorCount",
            "contents": "TechTreeBehaviorCount(${1:int player}, ${2:string behaviorType}, ${3:int countType})"
        },
        {
            "trigger": "c_keyNumPad6",
            "contents": "c_keyNumPad6"
        },
        {
            "trigger": "ConversationVisible",
            "contents": "ConversationVisible(${1:int intId}, ${2:int player})"
        },
        {
            "trigger": "UnitBehaviorEffectUnit",
            "contents": "UnitBehaviorEffectUnit(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inLocation}, ${4:int inIndex})"
        },
        {
            "trigger": "c_unitStateTooltipable",
            "contents": "c_unitStateTooltipable"
        },
        {
            "trigger": "c_keyI",
            "contents": "c_keyI"
        },
        {
            "trigger": "BankValueGetAsInt",
            "contents": "BankValueGetAsInt(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "DialogDestroy",
            "contents": "DialogDestroy(${1:int dialog})"
        },
        {
            "trigger": "c_achievementToastStyleTerran",
            "contents": "c_achievementToastStyleTerran"
        },
        {
            "trigger": "EventPlayer",
            "contents": "EventPlayer()"
        },
        {
            "trigger": "c_messageAreaObjective",
            "contents": "c_messageAreaObjective"
        },
        {
            "trigger": "TriggerWaitForTrigger",
            "contents": "TriggerWaitForTrigger(${1:trigger t}, ${2:bool waitUntilDone})"
        },
        {
            "trigger": "PortraitSetOffscreen",
            "contents": "PortraitSetOffscreen(${1:int p}, ${2:bool isOffscreen})"
        },
        {
            "trigger": "c_syncFrameTypeMenuBar",
            "contents": "c_syncFrameTypeMenuBar"
        },
        {
            "trigger": "StringExternalAsset",
            "contents": "StringExternalAsset(${1:string s})"
        },
        {
            "trigger": "FormatNumber",
            "contents": "FormatNumber(${1:int number})"
        },
        {
            "trigger": "DialogControlHookupUnitStatus",
            "contents": "DialogControlHookupUnitStatus(${1:int type}, ${2:string inTemplate}, ${3:unit inUnit})"
        },
        {
            "trigger": "UIShowCustomMenu",
            "contents": "UIShowCustomMenu(${1:playergroup inPlayers}, ${2:text inTitleText})"
        },
        {
            "trigger": "c_localSelectionTypeIdleButton",
            "contents": "c_localSelectionTypeIdleButton"
        },
        {
            "trigger": "DataTableSetSound",
            "contents": "DataTableSetSound(${1:bool global}, ${2:string name}, ${3:sound val})"
        },
        {
            "trigger": "c_localSelectionTypePylonButton",
            "contents": "c_localSelectionTypePylonButton"
        },
        {
            "trigger": "DataTableGetWave",
            "contents": "DataTableGetWave(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "ConversationReplyGetIndex",
            "contents": "ConversationReplyGetIndex(${1:int intId}, ${2:int replyId})"
        },
        {
            "trigger": "VictoryPanelSetMissionTimeText",
            "contents": "VictoryPanelSetMissionTimeText(${1:text inText})"
        },
        {
            "trigger": "TriggerAddEventUnitOrder",
            "contents": "TriggerAddEventUnitOrder(${1:trigger t}, ${2:unitref u}, ${3:abilcmd a})"
        },
        {
            "trigger": "CinematicOverlay",
            "contents": "CinematicOverlay(${1:bool fadeIn}, ${2:fixed duration}, ${3:string imagePath}, ${4:fixed transparency}, ${5:bool waitUntilDone})"
        },
        {
            "trigger": "c_environmentAll",
            "contents": "c_environmentAll"
        },
        {
            "trigger": "UnitBehaviorDuration",
            "contents": "UnitBehaviorDuration(${1:unit inUnit}, ${2:string inBehavior})"
        },
        {
            "trigger": "c_orderQueueAddToEnd",
            "contents": "c_orderQueueAddToEnd"
        },
        {
            "trigger": "CameraSetBounds",
            "contents": "CameraSetBounds(${1:playergroup players}, ${2:region bounds}, ${3:bool includeMinimap})"
        },
        {
            "trigger": "VictoryPanelSetCustomStatisticValue",
            "contents": "VictoryPanelSetCustomStatisticValue(${1:text inText})"
        },
        {
            "trigger": "c_stringNoCase",
            "contents": "c_stringNoCase"
        },
        {
            "trigger": "c_timerWindowImageProgressFrame",
            "contents": "c_timerWindowImageProgressFrame"
        },
        {
            "trigger": "ConversationDataRegisterCamera",
            "contents": "ConversationDataRegisterCamera(${1:string camIndex}, ${2:string charIndex}, ${3:camerainfo c}, ${4:trigger t}, ${5:bool wait})"
        },
        {
            "trigger": "SoundStopAllTriggerSounds",
            "contents": "SoundStopAllTriggerSounds(${1:bool fade})"
        },
        {
            "trigger": "IntToFixed",
            "contents": "IntToFixed(${1:int x})"
        },
        {
            "trigger": "FixedToInt",
            "contents": "FixedToInt(${1:fixed x})"
        },
        {
            "trigger": "OrderTargetingRelativePoint",
            "contents": "OrderTargetingRelativePoint(${1:abilcmd inAbilCmd}, ${2:point inPoint})"
        },
        {
            "trigger": "ActorRefGet",
            "contents": "ActorRefGet(${1:actor a}, ${2:string refName})"
        },
        {
            "trigger": "DataTableGetAbilCmd",
            "contents": "DataTableGetAbilCmd(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "PortraitSetTintColor",
            "contents": "PortraitSetTintColor(${1:int p}, ${2:color inColor})"
        },
        {
            "trigger": "CatalogFieldValueGet",
            "contents": "CatalogFieldValueGet(${1:int catalog}, ${2:string entry}, ${3:string fieldPath}, ${4:int player})"
        },
        {
            "trigger": "c_backgroundTerrain",
            "contents": "c_backgroundTerrain"
        },
        {
            "trigger": "c_playerStateVespeneCostIgnored",
            "contents": "c_playerStateVespeneCostIgnored"
        },
        {
            "trigger": "TextTagSetText",
            "contents": "TextTagSetText(${1:int inTag}, ${2:text inText})"
        },
        {
            "trigger": "BoardRowSetGroup",
            "contents": "BoardRowSetGroup(${1:int inBoard}, ${2:int inRow}, ${3:int inGroup})"
        },
        {
            "trigger": "UnitWeaponRange",
            "contents": "UnitWeaponRange(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "TechTreeAbilityCount",
            "contents": "TechTreeAbilityCount(${1:int player}, ${2:string abilType}, ${3:int countType})"
        },
        {
            "trigger": "UnitInventoryContainerOpen",
            "contents": "UnitInventoryContainerOpen(${1:playergroup inPlayers}, ${2:unit inUnit}, ${3:int inContainer}, ${4:bool inOpen})"
        },
        {
            "trigger": "GameAddCooldown",
            "contents": "GameAddCooldown(${1:string inCooldown}, ${2:fixed inVal})"
        },
        {
            "trigger": "CampaignProgressDeleteCampaignSave",
            "contents": "CampaignProgressDeleteCampaignSave(${1:playergroup players})"
        },
        {
            "trigger": "UnitBehaviorRemove",
            "contents": "UnitBehaviorRemove(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inCount})"
        },
        {
            "trigger": "c_keyUp",
            "contents": "c_keyUp"
        },
        {
            "trigger": "UnitSetPingCursor",
            "contents": "UnitSetPingCursor(${1:unit inUnit}, ${2:string cursorLink})"
        },
        {
            "trigger": "PurchaseItemIsRecentlyPurchased",
            "contents": "PurchaseItemIsRecentlyPurchased(${1:int inPurchaseItemId})"
        },
        {
            "trigger": "c_purchaseGroupStateEnabled",
            "contents": "c_purchaseGroupStateEnabled"
        },
        {
            "trigger": "UnitOrderCount",
            "contents": "UnitOrderCount(${1:unit inUnit})"
        },
        {
            "trigger": "c_keyR",
            "contents": "c_keyR"
        },
        {
            "trigger": "BankValueSetFromUnit",
            "contents": "BankValueSetFromUnit(${1:bank b}, ${2:string section}, ${3:string key}, ${4:unit value})"
        },
        {
            "trigger": "TransmissionSourceFromUnitType",
            "contents": "TransmissionSourceFromUnitType(${1:string unitType}, ${2:bool overridePortrait})"
        },
        {
            "trigger": "PathCreateForUnit",
            "contents": "PathCreateForUnit(${1:playergroup inPlayerGroup}, ${2:unit inUnit})"
        },
        {
            "trigger": "c_dataTypeSound",
            "contents": "c_dataTypeSound"
        },
        {
            "trigger": "UnitControlGroupClear",
            "contents": "UnitControlGroupClear(${1:int inPlayer}, ${2:int inGroup})"
        },
        {
            "trigger": "c_meleeOptionReveal",
            "contents": "c_meleeOptionReveal"
        },
        {
            "trigger": "c_keyNumPadMinus",
            "contents": "c_keyNumPadMinus"
        },
        {
            "trigger": "c_nydusLinkSupport",
            "contents": "c_nydusLinkSupport"
        },
        {
            "trigger": "c_keyNumPad0",
            "contents": "c_keyNumPad0"
        },
        {
            "trigger": "PortraitSetBorderVisible",
            "contents": "PortraitSetBorderVisible(${1:int p}, ${2:bool isBorderVisible})"
        },
        {
            "trigger": "PathGetSourcePoint",
            "contents": "PathGetSourcePoint(${1:int inPathId})"
        },
        {
            "trigger": "TriggerAddEventPlayerLeft",
            "contents": "TriggerAddEventPlayerLeft(${1:trigger inTrigger}, ${2:int player}, ${3:int inResult})"
        },
        {
            "trigger": "c_keyNumPadDecimal",
            "contents": "c_keyNumPadDecimal"
        },
        {
            "trigger": "c_unitPropCarriedTerrazine",
            "contents": "c_unitPropCarriedTerrazine"
        },
        {
            "trigger": "PlayerPauseAllCooldowns",
            "contents": "PlayerPauseAllCooldowns(${1:int inPlayer}, ${2:bool inPause})"
        },
        {
            "trigger": "c_cmdStateNoCustom",
            "contents": "c_cmdStateNoCustom"
        },
        {
            "trigger": "c_textureSlotComponentEmissive",
            "contents": "c_textureSlotComponentEmissive"
        },
        {
            "trigger": "c_gameMenuDialogLoadLastButton",
            "contents": "c_gameMenuDialogLoadLastButton"
        },
        {
            "trigger": "c_dataTypeTrigger",
            "contents": "c_dataTypeTrigger"
        },
        {
            "trigger": "TimerWindowShowBorder",
            "contents": "TimerWindowShowBorder(${1:int inWindow}, ${2:bool inShow})"
        },
        {
            "trigger": "ConversationDataCanRun",
            "contents": "ConversationDataCanRun(${1:string convId}, ${2:bool unpickedOnly})"
        },
        {
            "trigger": "c_planetPanelContactButtonStatePause",
            "contents": "c_planetPanelContactButtonStatePause"
        },
        {
            "trigger": "TriggerAddEventMovieFunction",
            "contents": "TriggerAddEventMovieFunction(${1:trigger t}, ${2:int player}, ${3:string functionName})"
        },
        {
            "trigger": "c_timerWindowStyleHorizontalTitleTime",
            "contents": "c_timerWindowStyleHorizontalTitleTime"
        },
        {
            "trigger": "PlayerBeaconBuildMenuCurrentSet",
            "contents": "PlayerBeaconBuildMenuCurrentSet(${1:int inPlayer}, ${2:int inType}, ${3:int inSlotNum})"
        },
        {
            "trigger": "c_alignBottom",
            "contents": "c_alignBottom"
        },
        {
            "trigger": "c_playerLicenseLibertyFull",
            "contents": "c_playerLicenseLibertyFull"
        },
        {
            "trigger": "c_playerPropDamageTakenPercent",
            "contents": "c_playerPropDamageTakenPercent"
        },
        {
            "trigger": "PlayerValidateEffectUnit",
            "contents": "PlayerValidateEffectUnit(${1:int inPlayer}, ${2:string inEffect}, ${3:unit inTarget})"
        },
        {
            "trigger": "c_gameResultUndecided",
            "contents": "c_gameResultUndecided"
        },
        {
            "trigger": "c_cameraValuePitch",
            "contents": "c_cameraValuePitch"
        },
        {
            "trigger": "DialogIsFullscreen",
            "contents": "DialogIsFullscreen(${1:int dialog})"
        },
        {
            "trigger": "c_bankOptionSignature",
            "contents": "c_bankOptionSignature"
        },
        {
            "trigger": "c_dataTypeCameraInfo",
            "contents": "c_dataTypeCameraInfo"
        },
        {
            "trigger": "c_unitPropEnergy",
            "contents": "c_unitPropEnergy"
        },
        {
            "trigger": "c_unitCountDead",
            "contents": "c_unitCountDead"
        },
        {
            "trigger": "TriggerDebugOutput",
            "contents": "TriggerDebugOutput(${1:int type}, ${2:text inText}, ${3:bool includeGameUI})"
        },
        {
            "trigger": "BattleReportSetDifficultyLevelBestTimeText",
            "contents": "BattleReportSetDifficultyLevelBestTimeText(${1:int inBattleReportId}, ${2:int inDifficultyLevel}, ${3:text inText})"
        },
        {
            "trigger": "PlayerGroupLoopBegin",
            "contents": "PlayerGroupLoopBegin(${1:playergroup g})"
        },
        {
            "trigger": "c_textTagTimeCurrent",
            "contents": "c_textTagTimeCurrent"
        },
        {
            "trigger": "DialogControlHookupStandard",
            "contents": "DialogControlHookupStandard(${1:int type}, ${2:string inTemplate})"
        },
        {
            "trigger": "StoryCreatePlanetPanel",
            "contents": "StoryCreatePlanetPanel()"
        },
        {
            "trigger": "c_unitBehaviorChangeRefresh",
            "contents": "c_unitBehaviorChangeRefresh"
        },
        {
            "trigger": "c_unitBehaviorFlagRefreshStack",
            "contents": "c_unitBehaviorFlagRefreshStack"
        },
        {
            "trigger": "c_planetPanelContactButtonStateDisabled",
            "contents": "c_planetPanelContactButtonStateDisabled"
        },
        {
            "trigger": "UIClearMessages",
            "contents": "UIClearMessages(${1:playergroup players}, ${2:int messageArea})"
        },
        {
            "trigger": "c_messageAreaAll",
            "contents": "c_messageAreaAll"
        },
        {
            "trigger": "c_unitDamageTypeMelee",
            "contents": "c_unitDamageTypeMelee"
        },
        {
            "trigger": "c_unitStateStoppable",
            "contents": "c_unitStateStoppable"
        },
        {
            "trigger": "GamePauseAllCooldowns",
            "contents": "GamePauseAllCooldowns(${1:bool inPaused})"
        },
        {
            "trigger": "DialogSetImageVisible",
            "contents": "DialogSetImageVisible(${1:int dialog}, ${2:bool isVisible})"
        },
        {
            "trigger": "c_boardIconPosLeft",
            "contents": "c_boardIconPosLeft"
        },
        {
            "trigger": "c_dataTypePortrait",
            "contents": "c_dataTypePortrait"
        },
        {
            "trigger": "c_unitCargoPosition",
            "contents": "c_unitCargoPosition"
        },
        {
            "trigger": "TriggerAddEventPlanetPanelCanceled",
            "contents": "TriggerAddEventPlanetPanelCanceled(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "EventUnitCreatedBehavior",
            "contents": "EventUnitCreatedBehavior()"
        },
        {
            "trigger": "c_soundOffsetStart",
            "contents": "c_soundOffsetStart"
        },
        {
            "trigger": "c_triggerBlendModeNormal",
            "contents": "c_triggerBlendModeNormal"
        },
        {
            "trigger": "TriggerGetEvalCount",
            "contents": "TriggerGetEvalCount(${1:trigger t})"
        },
        {
            "trigger": "c_syncFrameTypeSupply",
            "contents": "c_syncFrameTypeSupply"
        },
        {
            "trigger": "SoundPlayAtPoint",
            "contents": "SoundPlayAtPoint(${1:soundlink link}, ${2:playergroup players}, ${3:point inPoint}, ${4:fixed height}, ${5:fixed volume}, ${6:fixed offset})"
        },
        {
            "trigger": "DataTableSetUnitGroup",
            "contents": "DataTableSetUnitGroup(${1:bool global}, ${2:string name}, ${3:unitgroup val})"
        },
        {
            "trigger": "BankPlayer",
            "contents": "BankPlayer(${1:bank b})"
        },
        {
            "trigger": "c_unitPropVitalityMax",
            "contents": "c_unitPropVitalityMax"
        },
        {
            "trigger": "UnitAbilityGetLevel",
            "contents": "UnitAbilityGetLevel(${1:unit inUnit}, ${2:string inAbil})"
        },
        {
            "trigger": "ResearchCategoryDestroy",
            "contents": "ResearchCategoryDestroy(${1:int inResearchCategoryId})"
        },
        {
            "trigger": "EventUnitProperty",
            "contents": "EventUnitProperty()"
        },
        {
            "trigger": "c_messageAreaSubtitle",
            "contents": "c_messageAreaSubtitle"
        },
        {
            "trigger": "c_keySlash",
            "contents": "c_keySlash"
        },
        {
            "trigger": "EventUnitInventoryItemSlot",
            "contents": "EventUnitInventoryItemSlot()"
        },
        {
            "trigger": "PurchaseItemLastCreated",
            "contents": "PurchaseItemLastCreated()"
        },
        {
            "trigger": "UISetGameMenuItemVisible",
            "contents": "UISetGameMenuItemVisible(${1:playergroup inPlayers}, ${2:int inMenuItemType}, ${3:bool inVisible})"
        },
        {
            "trigger": "BankRemove",
            "contents": "BankRemove(${1:bank b})"
        },
        {
            "trigger": "FixedToString",
            "contents": "FixedToString(${1:fixed x}, ${2:int precision})"
        },
        {
            "trigger": "TriggerAddEventPlayerEffectUsed",
            "contents": "TriggerAddEventPlayerEffectUsed(${1:trigger t}, ${2:int player}, ${3:string inEffect})"
        },
        {
            "trigger": "c_unitBehaviorFlagRestorable",
            "contents": "c_unitBehaviorFlagRestorable"
        },
        {
            "trigger": "c_keyW",
            "contents": "c_keyW"
        },
        {
            "trigger": "SoundChannelPause",
            "contents": "SoundChannelPause(${1:playergroup players}, ${2:int channel}, ${3:bool pause})"
        },
        {
            "trigger": "PortraitSetPaused",
            "contents": "PortraitSetPaused(${1:int p}, ${2:bool isPaused})"
        },
        {
            "trigger": "c_soundtrackIndexAny",
            "contents": "c_soundtrackIndexAny"
        },
        {
            "trigger": "TriggerActiveCount",
            "contents": "TriggerActiveCount(${1:trigger t})"
        },
        {
            "trigger": "UnitMagazineLastCreatedGroup",
            "contents": "UnitMagazineLastCreatedGroup()"
        },
        {
            "trigger": "TriggerQueuePause",
            "contents": "TriggerQueuePause(${1:bool pause})"
        },
        {
            "trigger": "c_triggerControlPropertyChannel",
            "contents": "c_triggerControlPropertyChannel"
        },
        {
            "trigger": "c_nydusLinkFeedCommunity",
            "contents": "c_nydusLinkFeedCommunity"
        },
        {
            "trigger": "PurchaseGetSelectedPurchaseCategory",
            "contents": "PurchaseGetSelectedPurchaseCategory(${1:int inPlayer})"
        },
        {
            "trigger": "TriggerAddEventUnitHighlight",
            "contents": "TriggerAddEventUnitHighlight(${1:trigger t}, ${2:unitref u}, ${3:int player}, ${4:bool state})"
        },
        {
            "trigger": "EventTrigger",
            "contents": "EventTrigger()"
        },
        {
            "trigger": "c_uiModeFullscreen",
            "contents": "c_uiModeFullscreen"
        },
        {
            "trigger": "c_placementTestIgnoreInvisibleMask",
            "contents": "c_placementTestIgnoreInvisibleMask"
        },
        {
            "trigger": "c_triggerControlTypePanel",
            "contents": "c_triggerControlTypePanel"
        },
        {
            "trigger": "PointPathingIsConnected",
            "contents": "PointPathingIsConnected(${1:point p1}, ${2:point p2})"
        },
        {
            "trigger": "ResearchItemSetNameText",
            "contents": "ResearchItemSetNameText(${1:int inResearchItemId}, ${2:text inText})"
        },
        {
            "trigger": "UnitGetChargeRegen",
            "contents": "UnitGetChargeRegen(${1:unit inUnit}, ${2:string inCharge})"
        },
        {
            "trigger": "c_gameMenuDialogQuitButton",
            "contents": "c_gameMenuDialogQuitButton"
        },
        {
            "trigger": "c_unitQueuePropertyCount",
            "contents": "c_unitQueuePropertyCount"
        },
        {
            "trigger": "CatalogFieldValueGetAsInt",
            "contents": "CatalogFieldValueGetAsInt(${1:int catalog}, ${2:string entry}, ${3:string fieldPath}, ${4:int player})"
        },
        {
            "trigger": "TriggerAddEventCutsceneEndSceneFired",
            "contents": "TriggerAddEventCutsceneEndSceneFired(${1:trigger t}, ${2:int inCutscene})"
        },
        {
            "trigger": "StringToText",
            "contents": "StringToText(${1:string s})"
        },
        {
            "trigger": "c_keyZ",
            "contents": "c_keyZ"
        },
        {
            "trigger": "EventUnitOwnerNew",
            "contents": "EventUnitOwnerNew()"
        },
        {
            "trigger": "c_unitDamageEither",
            "contents": "c_unitDamageEither"
        },
        {
            "trigger": "BattleReportCreate",
            "contents": "BattleReportCreate(${1:playergroup inPlayerGroup}, ${2:text inText}, ${3:int inType}, ${4:int inState})"
        },
        {
            "trigger": "c_messageAreaError",
            "contents": "c_messageAreaError"
        },
        {
            "trigger": "c_unitPropTurnRate",
            "contents": "c_unitPropTurnRate"
        },
        {
            "trigger": "EventTimer",
            "contents": "EventTimer()"
        },
        {
            "trigger": "TriggerFind",
            "contents": "TriggerFind(${1:string inFunction})"
        },
        {
            "trigger": "UnitTypePlacementTestsFromUnit",
            "contents": "UnitTypePlacementTestsFromUnit(${1:string inType}, ${2:int inPlayer}, ${3:unit inSource}, ${4:fixed inRange}, ${5:int inTests})"
        },
        {
            "trigger": "PortraitSetTeamColor",
            "contents": "PortraitSetTeamColor(${1:int p}, ${2:color inColor})"
        },
        {
            "trigger": "c_boardStateSorted",
            "contents": "c_boardStateSorted"
        },
        {
            "trigger": "UnitGetChargeUsed",
            "contents": "UnitGetChargeUsed(${1:unit inUnit}, ${2:string inCharge})"
        },
        {
            "trigger": "TextTagSetBackgroundOffset",
            "contents": "TextTagSetBackgroundOffset(${1:int inTag}, ${2:fixed inX}, ${3:fixed inY})"
        },
        {
            "trigger": "ObjectiveVisible",
            "contents": "ObjectiveVisible(${1:int inObjective}, ${2:int inPlayer})"
        },
        {
            "trigger": "UnitAbilityGet",
            "contents": "UnitAbilityGet(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "PurchaseItemSetRecentlyPurchased",
            "contents": "PurchaseItemSetRecentlyPurchased(${1:int inPurchaseItemId}, ${2:bool inRecent})"
        },
        {
            "trigger": "TransmissionIsComplete",
            "contents": "TransmissionIsComplete(${1:int t})"
        },
        {
            "trigger": "TriggerAddEventUnitChangeOwner",
            "contents": "TriggerAddEventUnitChangeOwner(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "c_invalidBattleReportId",
            "contents": "c_invalidBattleReportId"
        },
        {
            "trigger": "TimerWindowSetTimer",
            "contents": "TimerWindowSetTimer(${1:int inWindow}, ${2:timer inTimer})"
        },
        {
            "trigger": "Wait",
            "contents": "Wait(${1:fixed inSecs}, ${2:int inTimeType})"
        },
        {
            "trigger": "c_unitPropEnergyMax",
            "contents": "c_unitPropEnergyMax"
        },
        {
            "trigger": "DataTableValueExists",
            "contents": "DataTableValueExists(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "TriggerAddEventChatMessage",
            "contents": "TriggerAddEventChatMessage(${1:trigger t}, ${2:int player}, ${3:string inText}, ${4:bool exact})"
        },
        {
            "trigger": "c_unitAbilChargeRegenLeft",
            "contents": "c_unitAbilChargeRegenLeft"
        },
        {
            "trigger": "DataTableGetAIFilter",
            "contents": "DataTableGetAIFilter(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_unitInventoryChangeGives",
            "contents": "c_unitInventoryChangeGives"
        },
        {
            "trigger": "c_portraitRenderTypeHDR",
            "contents": "c_portraitRenderTypeHDR"
        },
        {
            "trigger": "ResearchTierDestroy",
            "contents": "ResearchTierDestroy(${1:int inResearchTierId})"
        },
        {
            "trigger": "CampaignProgressSetImageFilePath",
            "contents": "CampaignProgressSetImageFilePath(${1:playergroup players}, ${2:string campaignId}, ${3:string inFilePath})"
        },
        {
            "trigger": "c_customDialogTypeQuery",
            "contents": "c_customDialogTypeQuery"
        },
        {
            "trigger": "BattleReportGetResearchText",
            "contents": "BattleReportGetResearchText(${1:int inBattleReportId})"
        },
        {
            "trigger": "BoardMinimizeSetColor",
            "contents": "BoardMinimizeSetColor(${1:int inBoard}, ${2:color inColor})"
        },
        {
            "trigger": "UnitWaitUntilIdle",
            "contents": "UnitWaitUntilIdle(${1:unit inUnit}, ${2:bool inIdle})"
        },
        {
            "trigger": "CatalogReferenceCount",
            "contents": "CatalogReferenceCount(${1:string reference}, ${2:int player})"
        },
        {
            "trigger": "CatalogFieldValueSet",
            "contents": "CatalogFieldValueSet(${1:int catalog}, ${2:string entry}, ${3:string fieldPath}, ${4:int player}, ${5:string value})"
        },
        {
            "trigger": "c_nydusLinkSecurityHelp",
            "contents": "c_nydusLinkSecurityHelp"
        },
        {
            "trigger": "TimerLastStarted",
            "contents": "TimerLastStarted()"
        },
        {
            "trigger": "c_environmentBackgroundTerrain",
            "contents": "c_environmentBackgroundTerrain"
        },
        {
            "trigger": "PlayerDifficulty",
            "contents": "PlayerDifficulty(${1:int inPlayer})"
        },
        {
            "trigger": "DialogControlGetPropertyAsInt",
            "contents": "DialogControlGetPropertyAsInt(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "CinematicFade",
            "contents": "CinematicFade(${1:bool fadeIn}, ${2:fixed duration}, ${3:int style}, ${4:color inColor}, ${5:fixed transparency}, ${6:bool waitUntilDone})"
        },
        {
            "trigger": "c_dataTypeObjective",
            "contents": "c_dataTypeObjective"
        },
        {
            "trigger": "GameSetSeedLocked",
            "contents": "GameSetSeedLocked(${1:bool locked})"
        },
        {
            "trigger": "DataTableGetTransmission",
            "contents": "DataTableGetTransmission(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "EventPlayerEffectUsedUnitOwner",
            "contents": "EventPlayerEffectUsedUnitOwner(${1:int inLocation})"
        },
        {
            "trigger": "c_animFlagPlayForever",
            "contents": "c_animFlagPlayForever"
        },
        {
            "trigger": "GameGetSpeed",
            "contents": "GameGetSpeed()"
        },
        {
            "trigger": "c_buildMenuBeacons",
            "contents": "c_buildMenuBeacons"
        },
        {
            "trigger": "EventUnitDamageSourcePoint",
            "contents": "EventUnitDamageSourcePoint()"
        },
        {
            "trigger": "TextTagVisible",
            "contents": "TextTagVisible(${1:int inTag}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_key7",
            "contents": "c_key7"
        },
        {
            "trigger": "c_spendLocationBehavior",
            "contents": "c_spendLocationBehavior"
        },
        {
            "trigger": "EventPingPoint",
            "contents": "EventPingPoint()"
        },
        {
            "trigger": "UnitTypeMoveBlockersFromUnit",
            "contents": "UnitTypeMoveBlockersFromUnit(${1:string inType}, ${2:int inPlayer}, ${3:unit inSource}, ${4:fixed inRange})"
        },
        {
            "trigger": "c_secondaryObjectivesId",
            "contents": "c_secondaryObjectivesId"
        },
        {
            "trigger": "UISetResourceTradingMinorStep",
            "contents": "UISetResourceTradingMinorStep(${1:int inResourceType}, ${2:int inAmount})"
        },
        {
            "trigger": "IntLoopEnd",
            "contents": "IntLoopEnd()"
        },
        {
            "trigger": "UnitQueueItemTypeCheck",
            "contents": "UnitQueueItemTypeCheck(${1:unit inUnit}, ${2:int inItem}, ${3:int inType})"
        },
        {
            "trigger": "TimerWindowSetFixedHeight",
            "contents": "TimerWindowSetFixedHeight(${1:int inWindow}, ${2:int inHeight})"
        },
        {
            "trigger": "c_invalidTransmissionId",
            "contents": "c_invalidTransmissionId"
        },
        {
            "trigger": "c_unitBehaviorChangeIncrease",
            "contents": "c_unitBehaviorChangeIncrease"
        },
        {
            "trigger": "UserDataSetUnit",
            "contents": "UserDataSetUnit(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "GameIsTransitionMap",
            "contents": "GameIsTransitionMap()"
        },
        {
            "trigger": "c_invalidPingId",
            "contents": "c_invalidPingId"
        },
        {
            "trigger": "c_keyBackSlash",
            "contents": "c_keyBackSlash"
        },
        {
            "trigger": "UIHideCinematicText",
            "contents": "UIHideCinematicText(${1:playergroup inPlayers})"
        },
        {
            "trigger": "UnitGetCooldown",
            "contents": "UnitGetCooldown(${1:unit inUnit}, ${2:string inCooldown})"
        },
        {
            "trigger": "MakeMsgTextureVideoPlay",
            "contents": "MakeMsgTextureVideoPlay(${1:string slotName}, ${2:int slotComponent}, ${3:int fps}, ${4:int textureVideoPlayFlags}, ${5:int videoSoundType}, ${6:string attachQuery})"
        },
        {
            "trigger": "UnitInventoryContainer",
            "contents": "UnitInventoryContainer(${1:unit inUnit})"
        },
        {
            "trigger": "DialogSetOffscreen",
            "contents": "DialogSetOffscreen(${1:int dialog}, ${2:bool isOffscreen})"
        },
        {
            "trigger": "VictoryPanelSetMissionTimeTitle",
            "contents": "VictoryPanelSetMissionTimeTitle(${1:text inText})"
        },
        {
            "trigger": "TextTagFogofWar",
            "contents": "TextTagFogofWar(${1:int inTag}, ${2:bool inFog})"
        },
        {
            "trigger": "UserDataSetUpgrade",
            "contents": "UserDataSetUpgrade(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "c_placementTestZoneMask",
            "contents": "c_placementTestZoneMask"
        },
        {
            "trigger": "c_textTagTimeFadeDuration",
            "contents": "c_textTagTimeFadeDuration"
        },
        {
            "trigger": "c_pathingCliff",
            "contents": "c_pathingCliff"
        },
        {
            "trigger": "Floor",
            "contents": "Floor(${1:fixed x})"
        },
        {
            "trigger": "c_triggerControlPropertyRenderPriority",
            "contents": "c_triggerControlPropertyRenderPriority"
        },
        {
            "trigger": "GameGetChargeRegen",
            "contents": "GameGetChargeRegen(${1:string inCharge})"
        },
        {
            "trigger": "UnitGetAttachmentPoint",
            "contents": "UnitGetAttachmentPoint(${1:unit inUnit}, ${2:string attachment})"
        },
        {
            "trigger": "UserDataSetColor",
            "contents": "UserDataSetColor(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:color inValue})"
        },
        {
            "trigger": "MarkerCastingPlayer",
            "contents": "MarkerCastingPlayer(${1:string link}, ${2:int player})"
        },
        {
            "trigger": "UnitGetCustomValue",
            "contents": "UnitGetCustomValue(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_textTagNone",
            "contents": "c_textTagNone"
        },
        {
            "trigger": "MakeMsgRefTableDump",
            "contents": "MakeMsgRefTableDump(${1:int space})"
        },
        {
            "trigger": "TechTreeUpgradeAllow",
            "contents": "TechTreeUpgradeAllow(${1:int player}, ${2:string upgradeType}, ${3:bool allow})"
        },
        {
            "trigger": "PreloadScene",
            "contents": "PreloadScene(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "PlanetDestroyAll",
            "contents": "PlanetDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_cmdStateNoVespene",
            "contents": "c_cmdStateNoVespene"
        },
        {
            "trigger": "c_colorComponentGreen",
            "contents": "c_colorComponentGreen"
        },
        {
            "trigger": "TriggerAddEventLoadGameDone",
            "contents": "TriggerAddEventLoadGameDone(${1:trigger t})"
        },
        {
            "trigger": "c_invalidHelpItemId",
            "contents": "c_invalidHelpItemId"
        },
        {
            "trigger": "c_transitionDurationDefault",
            "contents": "c_transitionDurationDefault"
        },
        {
            "trigger": "c_gameSpeedNormal",
            "contents": "c_gameSpeedNormal"
        },
        {
            "trigger": "TextTagSetBackgroundImage",
            "contents": "TextTagSetBackgroundImage(${1:int inTag}, ${2:string inPath}, ${3:bool inTiled})"
        },
        {
            "trigger": "UnitCargoGroup",
            "contents": "UnitCargoGroup(${1:unit inUnit})"
        },
        {
            "trigger": "UserDataSetAbilCmd",
            "contents": "UserDataSetAbilCmd(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:abilcmd inValue})"
        },
        {
            "trigger": "c_animFlagRandomStartOffset",
            "contents": "c_animFlagRandomStartOffset"
        },
        {
            "trigger": "DialogCreate",
            "contents": "DialogCreate(${1:int width}, ${2:int height}, ${3:int anchor}, ${4:int offsetX}, ${5:int offsetY}, ${6:bool modal})"
        },
        {
            "trigger": "c_gameCheatCooldown",
            "contents": "c_gameCheatCooldown"
        },
        {
            "trigger": "UISetBattleNetButtonOffset",
            "contents": "UISetBattleNetButtonOffset(${1:playergroup inPlayers}, ${2:int inOffsetX}, ${3:int inOffsetY})"
        },
        {
            "trigger": "c_unitProgressTypeLearn",
            "contents": "c_unitProgressTypeLearn"
        },
        {
            "trigger": "c_cameraMoveReasonMouseScroll",
            "contents": "c_cameraMoveReasonMouseScroll"
        },
        {
            "trigger": "c_cameraDirectionX",
            "contents": "c_cameraDirectionX"
        },
        {
            "trigger": "CampaignProgressEnableCampaignCompletedSaves",
            "contents": "CampaignProgressEnableCampaignCompletedSaves(${1:playergroup players}, ${2:bool inDisable})"
        },
        {
            "trigger": "PlanetSetSecondaryObjectiveText",
            "contents": "PlanetSetSecondaryObjectiveText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "StringReplaceWord",
            "contents": "StringReplaceWord(${1:string s}, ${2:string word}, ${3:string replace}, ${4:int maxCount}, ${5:bool caseSens})"
        },
        {
            "trigger": "c_triggerBlendModeAdd",
            "contents": "c_triggerBlendModeAdd"
        },
        {
            "trigger": "UIFrameVisible",
            "contents": "UIFrameVisible(${1:int inPlayer}, ${2:int inFrameType})"
        },
        {
            "trigger": "c_nydusLinkFeedHomepage",
            "contents": "c_nydusLinkFeedHomepage"
        },
        {
            "trigger": "c_uiModeLetterboxed",
            "contents": "c_uiModeLetterboxed"
        },
        {
            "trigger": "TechTreeBehaviorIsAllowed",
            "contents": "TechTreeBehaviorIsAllowed(${1:int player}, ${2:string behaviorType})"
        },
        {
            "trigger": "TechTreeUnitHelp",
            "contents": "TechTreeUnitHelp(${1:int player}, ${2:string unitType}, ${3:bool display})"
        },
        {
            "trigger": "UnitWeaponRemove",
            "contents": "UnitWeaponRemove(${1:unit inUnit}, ${2:string inWeapon})"
        },
        {
            "trigger": "UnitInventoryGroup",
            "contents": "UnitInventoryGroup(${1:unit inUnit})"
        },
        {
            "trigger": "UnitGroupLoopDone",
            "contents": "UnitGroupLoopDone()"
        },
        {
            "trigger": "CutscenePlayCutsceneRangeOverTime",
            "contents": "CutscenePlayCutsceneRangeOverTime(${1:int inCutscene}, ${2:string inBookmarkStart}, ${3:string inBookmarkEnd}, ${4:fixed inDuration})"
        },
        {
            "trigger": "UserDataResetAll",
            "contents": "UserDataResetAll()"
        },
        {
            "trigger": "c_actorIntersectAgainstRadiusGame",
            "contents": "c_actorIntersectAgainstRadiusGame"
        },
        {
            "trigger": "TriggerAddEventMercenaryPanelExit",
            "contents": "TriggerAddEventMercenaryPanelExit(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "UnitFilterGetState",
            "contents": "UnitFilterGetState(${1:unitfilter inFilter}, ${2:int inType})"
        },
        {
            "trigger": "DataTableValueRemove",
            "contents": "DataTableValueRemove(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_cmdStateNoLife",
            "contents": "c_cmdStateNoLife"
        },
        {
            "trigger": "PlayerValidateEffectPoint",
            "contents": "PlayerValidateEffectPoint(${1:int inPlayer}, ${2:string inEffect}, ${3:point inTarget})"
        },
        {
            "trigger": "DataTableSetTransmission",
            "contents": "DataTableSetTransmission(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "UIFlyerHelperClearOverride",
            "contents": "UIFlyerHelperClearOverride(${1:playergroup inPlayers})"
        },
        {
            "trigger": "c_invalidResearchItemId",
            "contents": "c_invalidResearchItemId"
        },
        {
            "trigger": "c_unitAllianceAlly",
            "contents": "c_unitAllianceAlly"
        },
        {
            "trigger": "c_mercenaryStatePurchased",
            "contents": "c_mercenaryStatePurchased"
        },
        {
            "trigger": "c_cmdStateHasCharges",
            "contents": "c_cmdStateHasCharges"
        },
        {
            "trigger": "DataTableSetText",
            "contents": "DataTableSetText(${1:bool global}, ${2:string name}, ${3:text val})"
        },
        {
            "trigger": "c_battleReportTypeMission",
            "contents": "c_battleReportTypeMission"
        },
        {
            "trigger": "PingSetColor",
            "contents": "PingSetColor(${1:int p}, ${2:color intColor})"
        },
        {
            "trigger": "CameraShakeStart",
            "contents": "CameraShakeStart(${1:int player}, ${2:int position}, ${3:int direction}, ${4:fixed amplitude}, ${5:fixed frequency}, ${6:fixed randomPercent}, ${7:fixed duration})"
        },
        {
            "trigger": "c_keyModifierStateRequire",
            "contents": "c_keyModifierStateRequire"
        },
        {
            "trigger": "c_unitBehaviorFlagHidden",
            "contents": "c_unitBehaviorFlagHidden"
        },
        {
            "trigger": "ActorLookAtTypeStart",
            "contents": "ActorLookAtTypeStart(${1:actor s}, ${2:string type}, ${3:actor t})"
        },
        {
            "trigger": "CatalogEntryClass",
            "contents": "CatalogEntryClass(${1:int catalog}, ${2:string entry})"
        },
        {
            "trigger": "TextTagSetColor",
            "contents": "TextTagSetColor(${1:int inTag}, ${2:int inType}, ${3:color inColor})"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton7",
            "contents": "c_gameMenuDialogGenericButton7"
        },
        {
            "trigger": "BattleReportSetState",
            "contents": "BattleReportSetState(${1:int inBattleReportId}, ${2:int inState})"
        },
        {
            "trigger": "PortraitCreate",
            "contents": "PortraitCreate(${1:int offsetX}, ${2:int offsetY}, ${3:int anchor}, ${4:int width}, ${5:int height}, ${6:string modelLink}, ${7:string cameraLink}, ${8:string animProps}, ${9:bool visible}, ${10:bool waitUntilLoaded})"
        },
        {
            "trigger": "c_unitCostCustomResource",
            "contents": "c_unitCostCustomResource"
        },
        {
            "trigger": "c_playerStateRestartEnabled",
            "contents": "c_playerStateRestartEnabled"
        },
        {
            "trigger": "PingSetTooltip",
            "contents": "PingSetTooltip(${1:int p}, ${2:text tooltip})"
        },
        {
            "trigger": "UnitSetFacing",
            "contents": "UnitSetFacing(${1:unit inUnit}, ${2:fixed inFacing}, ${3:fixed inDuration})"
        },
        {
            "trigger": "UnitSetHeight",
            "contents": "UnitSetHeight(${1:unit inUnit}, ${2:fixed inHeight}, ${3:fixed inDuration})"
        },
        {
            "trigger": "ObjectiveSetPrimary",
            "contents": "ObjectiveSetPrimary(${1:int inObjective}, ${2:bool inPrimary})"
        },
        {
            "trigger": "ConversationShow",
            "contents": "ConversationShow(${1:int intId}, ${2:playergroup to}, ${3:bool visible})"
        },
        {
            "trigger": "c_syncFrameTypeFirst",
            "contents": "c_syncFrameTypeFirst"
        },
        {
            "trigger": "BoardItemSetProgressColor",
            "contents": "BoardItemSetProgressColor(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:color inColor}, ${5:int inStep})"
        },
        {
            "trigger": "MarkerGetCastingPlayer",
            "contents": "MarkerGetCastingPlayer(${1:marker m})"
        },
        {
            "trigger": "PlanetSetPlanetName",
            "contents": "PlanetSetPlanetName(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "EventUnitDamageEffect",
            "contents": "EventUnitDamageEffect()"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton2",
            "contents": "c_gameMenuDialogGenericButton2"
        },
        {
            "trigger": "ObjectiveDestroy",
            "contents": "ObjectiveDestroy(${1:int inObjective})"
        },
        {
            "trigger": "TriggerAddEventUnitRangePoint",
            "contents": "TriggerAddEventUnitRangePoint(${1:trigger t}, ${2:unitref u}, ${3:point p}, ${4:fixed distance}, ${5:bool state})"
        },
        {
            "trigger": "c_keyPrevTrack",
            "contents": "c_keyPrevTrack"
        },
        {
            "trigger": "TimerWindowDestroy",
            "contents": "TimerWindowDestroy(${1:int inWindow})"
        },
        {
            "trigger": "c_timerWindowImageBackground",
            "contents": "c_timerWindowImageBackground"
        },
        {
            "trigger": "HelpPanelSetHelpItemDarkenedWhenViewed",
            "contents": "HelpPanelSetHelpItemDarkenedWhenViewed(${1:int inHelpItemId}, ${2:bool inDarkened})"
        },
        {
            "trigger": "TechTreeSpecificRequirementEnabled",
            "contents": "TechTreeSpecificRequirementEnabled(${1:int player}, ${2:string requirementName})"
        },
        {
            "trigger": "ResearchTierSetRequiredLevel",
            "contents": "ResearchTierSetRequiredLevel(${1:int inResearchTierId}, ${2:int inLevel})"
        },
        {
            "trigger": "DataTableGetDoodad",
            "contents": "DataTableGetDoodad(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "DataTableGetOrder",
            "contents": "DataTableGetOrder(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UnitRallyPoint",
            "contents": "UnitRallyPoint(${1:unit inUnit}, ${2:unit inUser})"
        },
        {
            "trigger": "UnitLastCreated",
            "contents": "UnitLastCreated()"
        },
        {
            "trigger": "EventUnitPowerupUnit",
            "contents": "EventUnitPowerupUnit()"
        },
        {
            "trigger": "c_unitAbilStageExecute",
            "contents": "c_unitAbilStageExecute"
        },
        {
            "trigger": "c_unitStateMoveSuppressed",
            "contents": "c_unitStateMoveSuppressed"
        },
        {
            "trigger": "c_cmdStateExecuting",
            "contents": "c_cmdStateExecuting"
        },
        {
            "trigger": "c_triggerControlTypeAchievement",
            "contents": "c_triggerControlTypeAchievement"
        },
        {
            "trigger": "StringToAbilCmd",
            "contents": "StringToAbilCmd(${1:string x})"
        },
        {
            "trigger": "UserDataGetImageEdge",
            "contents": "UserDataGetImageEdge(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "EventMouseMovedPosXWorld",
            "contents": "EventMouseMovedPosXWorld()"
        },
        {
            "trigger": "ObjectiveShow",
            "contents": "ObjectiveShow(${1:int inObjective}, ${2:playergroup inPlayers}, ${3:bool inShow})"
        },
        {
            "trigger": "UnitIsAlive",
            "contents": "UnitIsAlive(${1:unit inUnit})"
        },
        {
            "trigger": "GameGetChargeUsed",
            "contents": "GameGetChargeUsed(${1:string inCharge})"
        },
        {
            "trigger": "TriggerEnable",
            "contents": "TriggerEnable(${1:trigger t}, ${2:bool enable})"
        },
        {
            "trigger": "c_gameSpeedSlower",
            "contents": "c_gameSpeedSlower"
        },
        {
            "trigger": "DataTableGetTrigger",
            "contents": "DataTableGetTrigger(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "VisRevealerLastCreated",
            "contents": "VisRevealerLastCreated()"
        },
        {
            "trigger": "TriggerAddEventSaveGame",
            "contents": "TriggerAddEventSaveGame(${1:trigger t})"
        },
        {
            "trigger": "UISetCommandDisallowedMessage",
            "contents": "UISetCommandDisallowedMessage(${1:playergroup players}, ${2:text message})"
        },
        {
            "trigger": "BattleReportSetMissionImage",
            "contents": "BattleReportSetMissionImage(${1:int inBattleReportId}, ${2:string inImage})"
        },
        {
            "trigger": "UnitGroupRemoveUnitGroup",
            "contents": "UnitGroupRemoveUnitGroup(${1:unitgroup inGroup}, ${2:unitgroup inRemoveGroup})"
        },
        {
            "trigger": "TriggerAddEventUnitCreated",
            "contents": "TriggerAddEventUnitCreated(${1:trigger t}, ${2:unitref u}, ${3:string creatorAbil}, ${4:string creatorBehavior})"
        },
        {
            "trigger": "TriggerAddEventUnitPowerup",
            "contents": "TriggerAddEventUnitPowerup(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "UnitWeaponAdd",
            "contents": "UnitWeaponAdd(${1:unit inUnit}, ${2:string inWeapon}, ${3:string inTurret})"
        },
        {
            "trigger": "c_triggerControlPropertyFile",
            "contents": "c_triggerControlPropertyFile"
        },
        {
            "trigger": "UnitGroupFilterThreat",
            "contents": "UnitGroupFilterThreat(${1:unitgroup g}, ${2:unit u}, ${3:string alternateType}, ${4:int maxCount})"
        },
        {
            "trigger": "UnitCargoLastCreated",
            "contents": "UnitCargoLastCreated()"
        },
        {
            "trigger": "UnitMagazineArm",
            "contents": "UnitMagazineArm(${1:unit inUnit}, ${2:abilcmd inAbilCmd}, ${3:int inCount})"
        },
        {
            "trigger": "UserDataSetSound",
            "contents": "UserDataSetSound(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "DataTableSetObjective",
            "contents": "DataTableSetObjective(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "UISetDragSelectEnabled",
            "contents": "UISetDragSelectEnabled(${1:playergroup players}, ${2:bool enable})"
        },
        {
            "trigger": "c_unitStateIdle",
            "contents": "c_unitStateIdle"
        },
        {
            "trigger": "ActorScopeCreate",
            "contents": "ActorScopeCreate(${1:string optionalCreateWithActorName})"
        },
        {
            "trigger": "PlanetSetTechnologyTitle",
            "contents": "PlanetSetTechnologyTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "CliffLevel",
            "contents": "CliffLevel(${1:point inPos})"
        },
        {
            "trigger": "TerrainTexture",
            "contents": "TerrainTexture(${1:point pos})"
        },
        {
            "trigger": "VictoryPanelSetSummaryBackgroundFilePath",
            "contents": "VictoryPanelSetSummaryBackgroundFilePath(${1:string inFilePath})"
        },
        {
            "trigger": "c_textTagEdgeRight",
            "contents": "c_textTagEdgeRight"
        },
        {
            "trigger": "ResearchTierSetMaxPurchasesAllowed",
            "contents": "ResearchTierSetMaxPurchasesAllowed(${1:int inResearchTierId}, ${2:int inMax})"
        },
        {
            "trigger": "c_playerPropMineralsCollected",
            "contents": "c_playerPropMineralsCollected"
        },
        {
            "trigger": "c_unitStateCloaked",
            "contents": "c_unitStateCloaked"
        },
        {
            "trigger": "PlayerColorName",
            "contents": "PlayerColorName(${1:int inColor})"
        },
        {
            "trigger": "DialogControlSetPositionRelative",
            "contents": "DialogControlSetPositionRelative(${1:int control}, ${2:playergroup players}, ${3:int anchor}, ${4:int relative}, ${5:int relativeAnchor}, ${6:int offsetX}, ${7:int offsetY})"
        },
        {
            "trigger": "c_nydusLinkAccountNew",
            "contents": "c_nydusLinkAccountNew"
        },
        {
            "trigger": "BankValueSetFromFlag",
            "contents": "BankValueSetFromFlag(${1:bank b}, ${2:string section}, ${3:string key}, ${4:bool value})"
        },
        {
            "trigger": "BattleReportGetSceneText",
            "contents": "BattleReportGetSceneText(${1:int inBattleReportId})"
        },
        {
            "trigger": "UILaunchNydusLink",
            "contents": "UILaunchNydusLink(${1:playergroup inPlayers}, ${2:int inNydusLink})"
        },
        {
            "trigger": "PurchaseItemSetState",
            "contents": "PurchaseItemSetState(${1:int inPurchaseItemId}, ${2:int inState})"
        },
        {
            "trigger": "UserDataGetModel",
            "contents": "UserDataGetModel(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_triggerControlTypeUnitStatusBar",
            "contents": "c_triggerControlTypeUnitStatusBar"
        },
        {
            "trigger": "BankReload",
            "contents": "BankReload(${1:bank b})"
        },
        {
            "trigger": "UnitGroupRemove",
            "contents": "UnitGroupRemove(${1:unitgroup inGroup}, ${2:unit inUnit})"
        },
        {
            "trigger": "c_syncFrameTypeAlertPanel",
            "contents": "c_syncFrameTypeAlertPanel"
        },
        {
            "trigger": "SoundPlaySceneFile",
            "contents": "SoundPlaySceneFile(${1:soundlink link}, ${2:playergroup players}, ${3:string sceneFile}, ${4:string camera})"
        },
        {
            "trigger": "ConversationDataGetSound",
            "contents": "ConversationDataGetSound(${1:string convLine}, ${2:bool checkConditions})"
        },
        {
            "trigger": "PlayerCreateEffectUnit",
            "contents": "PlayerCreateEffectUnit(${1:int inPlayer}, ${2:string inEffect}, ${3:unit inTarget})"
        },
        {
            "trigger": "UnitAbilityAddChargeUsed",
            "contents": "UnitAbilityAddChargeUsed(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCharge}, ${4:fixed inVal})"
        },
        {
            "trigger": "c_unitPropRadius",
            "contents": "c_unitPropRadius"
        },
        {
            "trigger": "DataTableSetColor",
            "contents": "DataTableSetColor(${1:bool global}, ${2:string name}, ${3:color val})"
        },
        {
            "trigger": "UnitAbilityChangeLevel",
            "contents": "UnitAbilityChangeLevel(${1:unit inUnit}, ${2:string inAbil}, ${3:int inLevel})"
        },
        {
            "trigger": "DialogGetImage",
            "contents": "DialogGetImage(${1:int dialog})"
        },
        {
            "trigger": "c_unitProgressTypeResearch",
            "contents": "c_unitProgressTypeResearch"
        },
        {
            "trigger": "TriggerAddEventBattleReportPanelPlayMission",
            "contents": "TriggerAddEventBattleReportPanelPlayMission(${1:trigger t}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_triggerControlPropertyBlendMode",
            "contents": "c_triggerControlPropertyBlendMode"
        },
        {
            "trigger": "c_mouseButtonXButton1",
            "contents": "c_mouseButtonXButton1"
        },
        {
            "trigger": "c_timerWindowStyleVerticalTimeTitle",
            "contents": "c_timerWindowStyleVerticalTimeTitle"
        },
        {
            "trigger": "c_targetModeStateOff",
            "contents": "c_targetModeStateOff"
        },
        {
            "trigger": "TextTagLastCreated",
            "contents": "TextTagLastCreated()"
        },
        {
            "trigger": "ActorScopeRefSet",
            "contents": "ActorScopeRefSet(${1:actorscope as}, ${2:string refName}, ${3:actor aValue})"
        },
        {
            "trigger": "UISetCursorAutoHide",
            "contents": "UISetCursorAutoHide(${1:playergroup players}, ${2:bool autoHide}, ${3:fixed delay})"
        },
        {
            "trigger": "UnitGroupAlliance",
            "contents": "UnitGroupAlliance(${1:int player}, ${2:int alliance}, ${3:region r}, ${4:unitfilter filter}, ${5:int maxCount})"
        },
        {
            "trigger": "c_keyPeriod",
            "contents": "c_keyPeriod"
        },
        {
            "trigger": "VisRevealerUpdate",
            "contents": "VisRevealerUpdate(${1:revealer r})"
        },
        {
            "trigger": "DataTableSetDialog",
            "contents": "DataTableSetDialog(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "PlayerGroupLoopEnd",
            "contents": "PlayerGroupLoopEnd()"
        },
        {
            "trigger": "c_textTagEdgeTop",
            "contents": "c_textTagEdgeTop"
        },
        {
            "trigger": "c_syncFrameTypeResearchPanel",
            "contents": "c_syncFrameTypeResearchPanel"
        },
        {
            "trigger": "c_dataTypeUnitRef",
            "contents": "c_dataTypeUnitRef"
        },
        {
            "trigger": "c_unitCargoSizeMax",
            "contents": "c_unitCargoSizeMax"
        },
        {
            "trigger": "TriggerQueueEnter",
            "contents": "TriggerQueueEnter()"
        },
        {
            "trigger": "DataTableSetMarker",
            "contents": "DataTableSetMarker(${1:bool global}, ${2:string name}, ${3:marker val})"
        },
        {
            "trigger": "DataTableSetActor",
            "contents": "DataTableSetActor(${1:bool global}, ${2:string name}, ${3:actor val})"
        },
        {
            "trigger": "c_techCountIncompleteOnly",
            "contents": "c_techCountIncompleteOnly"
        },
        {
            "trigger": "TriggerAddEventUnitInventoryChange",
            "contents": "TriggerAddEventUnitInventoryChange(${1:trigger t}, ${2:unitref u}, ${3:int inChangeType}, ${4:unitref inItem})"
        },
        {
            "trigger": "HelpPanelAddHint",
            "contents": "HelpPanelAddHint(${1:playergroup players}, ${2:text titleText}, ${3:text descriptionText}, ${4:string iconPath})"
        },
        {
            "trigger": "OrderSetTargetPlacement",
            "contents": "OrderSetTargetPlacement(${1:order inOrder}, ${2:point inPoint}, ${3:unit inPlacer}, ${4:string inType})"
        },
        {
            "trigger": "c_mouseButtonFlagLeft",
            "contents": "c_mouseButtonFlagLeft"
        },
        {
            "trigger": "c_boardStateShowTitle",
            "contents": "c_boardStateShowTitle"
        },
        {
            "trigger": "UnitEventSetNullVariableInvalid",
            "contents": "UnitEventSetNullVariableInvalid(${1:bool inVal})"
        },
        {
            "trigger": "c_cameraPositionTarget",
            "contents": "c_cameraPositionTarget"
        },
        {
            "trigger": "PathGetColor",
            "contents": "PathGetColor(${1:int inPathId}, ${2:int inLocation})"
        },
        {
            "trigger": "c_abilClassFilterAllowed",
            "contents": "c_abilClassFilterAllowed"
        },
        {
            "trigger": "UserDataSetImagePath",
            "contents": "UserDataSetImagePath(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "c_catalogFieldTypeFixed",
            "contents": "c_catalogFieldTypeFixed"
        },
        {
            "trigger": "TriggerAddEventGeneric",
            "contents": "TriggerAddEventGeneric(${1:trigger t}, ${2:string name})"
        },
        {
            "trigger": "SquareRootI",
            "contents": "SquareRootI(${1:fixed x})"
        },
        {
            "trigger": "TriggerAddEventUnitDied",
            "contents": "TriggerAddEventUnitDied(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "c_playerPropMinerals",
            "contents": "c_playerPropMinerals"
        },
        {
            "trigger": "DialogIsImageVisible",
            "contents": "DialogIsImageVisible(${1:int dialog})"
        },
        {
            "trigger": "DataTableValueName",
            "contents": "DataTableValueName(${1:bool global}, ${2:int index})"
        },
        {
            "trigger": "ConversationDataLoadNodeState",
            "contents": "ConversationDataLoadNodeState(${1:string convId}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "UnitAbilityEffectInstantGetRange",
            "contents": "UnitAbilityEffectInstantGetRange(${1:unit inUnit}, ${2:string inAbil})"
        },
        {
            "trigger": "c_triggerQueueKill",
            "contents": "c_triggerQueueKill"
        },
        {
            "trigger": "c_bankTypePoint",
            "contents": "c_bankTypePoint"
        },
        {
            "trigger": "c_keyNumPadDivide",
            "contents": "c_keyNumPadDivide"
        },
        {
            "trigger": "DialogControlSetPropertyAsBool",
            "contents": "DialogControlSetPropertyAsBool(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:bool value})"
        },
        {
            "trigger": "c_unitPropAcceleration",
            "contents": "c_unitPropAcceleration"
        },
        {
            "trigger": "TriggerGetCurrent",
            "contents": "TriggerGetCurrent()"
        },
        {
            "trigger": "c_unitQueuePropertyTotal",
            "contents": "c_unitQueuePropertyTotal"
        },
        {
            "trigger": "c_unitAbilAutoCastChangeAll",
            "contents": "c_unitAbilAutoCastChangeAll"
        },
        {
            "trigger": "MercenarySetUnitText",
            "contents": "MercenarySetUnitText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "c_animBracketStartFlagOpeningPlayForever",
            "contents": "c_animBracketStartFlagOpeningPlayForever"
        },
        {
            "trigger": "c_unitCargoSizeAsCargo",
            "contents": "c_unitCargoSizeAsCargo"
        },
        {
            "trigger": "IntLoopCurrent",
            "contents": "IntLoopCurrent()"
        },
        {
            "trigger": "ConversationDataStateGetValue",
            "contents": "ConversationDataStateGetValue(${1:string stateIndex})"
        },
        {
            "trigger": "UnitAddOnParent",
            "contents": "UnitAddOnParent(${1:unit inUnit})"
        },
        {
            "trigger": "c_unitStateAttackSuppressed",
            "contents": "c_unitStateAttackSuppressed"
        },
        {
            "trigger": "PurchaseSetSelectedPurchaseItem",
            "contents": "PurchaseSetSelectedPurchaseItem(${1:playergroup inPlayerGroup}, ${2:int inPurchaseItemId})"
        },
        {
            "trigger": "c_unitAllianceAnyExcludeSelf",
            "contents": "c_unitAllianceAnyExcludeSelf"
        },
        {
            "trigger": "PointPathingPassable",
            "contents": "PointPathingPassable(${1:point p})"
        },
        {
            "trigger": "ActorFromDoodad",
            "contents": "ActorFromDoodad(${1:doodad d})"
        },
        {
            "trigger": "PlanetSetMissionTitle",
            "contents": "PlanetSetMissionTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "CameraUseHeightDisplacement",
            "contents": "CameraUseHeightDisplacement(${1:int player}, ${2:bool value})"
        },
        {
            "trigger": "DataTableSetByte",
            "contents": "DataTableSetByte(${1:bool global}, ${2:string name}, ${3:byte val})"
        },
        {
            "trigger": "PingDestroyAll",
            "contents": "PingDestroyAll()"
        },
        {
            "trigger": "UISetChallengeHighScore",
            "contents": "UISetChallengeHighScore(${1:playergroup players}, ${2:string challengeName}, ${3:int highScore})"
        },
        {
            "trigger": "CutsceneSetTime",
            "contents": "CutsceneSetTime(${1:int inCutscene}, ${2:int inTime})"
        },
        {
            "trigger": "TriggerStop",
            "contents": "TriggerStop(${1:trigger t})"
        },
        {
            "trigger": "c_catalogFieldTypeFlags",
            "contents": "c_catalogFieldTypeFlags"
        },
        {
            "trigger": "PlayerBeaconGetTargetUnit",
            "contents": "PlayerBeaconGetTargetUnit(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "TriggerAddEventBattleReportPanelPlayScene",
            "contents": "TriggerAddEventBattleReportPanelPlayScene(${1:trigger t}, ${2:int inPlayer})"
        },
        {
            "trigger": "MarkerGetMatchFlag",
            "contents": "MarkerGetMatchFlag(${1:marker m}, ${2:int flag})"
        },
        {
            "trigger": "TextTagSetPosition",
            "contents": "TextTagSetPosition(${1:int inTag}, ${2:point inPoint}, ${3:fixed inHeightOffset})"
        },
        {
            "trigger": "TerrainShowRegion",
            "contents": "TerrainShowRegion(${1:region inArea}, ${2:bool inShow})"
        },
        {
            "trigger": "DialogControlGetPropertyAsControl",
            "contents": "DialogControlGetPropertyAsControl(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_cameraMoveReasonZoom",
            "contents": "c_cameraMoveReasonZoom"
        },
        {
            "trigger": "PlanetSetTechnologyTooltipText",
            "contents": "PlanetSetTechnologyTooltipText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "UnitBehaviorSetDuration",
            "contents": "UnitBehaviorSetDuration(${1:unit inUnit}, ${2:string inBehavior}, ${3:fixed inDuration})"
        },
        {
            "trigger": "OrderGetTargetItem",
            "contents": "OrderGetTargetItem(${1:order inOrder})"
        },
        {
            "trigger": "UserDataGetText",
            "contents": "UserDataGetText(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "MakeMsgTextureVideoSetPaused",
            "contents": "MakeMsgTextureVideoSetPaused(${1:string slotName}, ${2:int slotComponent}, ${3:bool isPaused})"
        },
        {
            "trigger": "c_actorRequestScopeCaster",
            "contents": "c_actorRequestScopeCaster"
        },
        {
            "trigger": "EventPlayerEffectUsedAmountFixed",
            "contents": "EventPlayerEffectUsedAmountFixed(${1:int inAmount}, ${2:bool total})"
        },
        {
            "trigger": "CatalogEntryCount",
            "contents": "CatalogEntryCount(${1:int catalog})"
        },
        {
            "trigger": "c_triggerControlTypeEditBox",
            "contents": "c_triggerControlTypeEditBox"
        },
        {
            "trigger": "c_actorRequestScopeTarget",
            "contents": "c_actorRequestScopeTarget"
        },
        {
            "trigger": "c_battleReportStateCompleted",
            "contents": "c_battleReportStateCompleted"
        },
        {
            "trigger": "EventDialogControlEventType",
            "contents": "EventDialogControlEventType()"
        },
        {
            "trigger": "c_catalogFieldTypeCatalogLink",
            "contents": "c_catalogFieldTypeCatalogLink"
        },
        {
            "trigger": "SoundAttachUnit",
            "contents": "SoundAttachUnit(${1:sound s}, ${2:unit u}, ${3:fixed height})"
        },
        {
            "trigger": "DistanceBetweenPoints",
            "contents": "DistanceBetweenPoints(${1:point p1}, ${2:point p2})"
        },
        {
            "trigger": "c_dataTypeConversation",
            "contents": "c_dataTypeConversation"
        },
        {
            "trigger": "UnitWeaponDamage",
            "contents": "UnitWeaponDamage(${1:unit inUnit}, ${2:int inIndex}, ${3:int inAttribute}, ${4:bool inMaximum})"
        },
        {
            "trigger": "DialogSetSubtitlePositionOverride",
            "contents": "DialogSetSubtitlePositionOverride(${1:int dialog})"
        },
        {
            "trigger": "PlanetSetRewardText",
            "contents": "PlanetSetRewardText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "BattleReportGetPriority",
            "contents": "BattleReportGetPriority(${1:int inBattleReportId})"
        },
        {
            "trigger": "c_purchaseGroupStateHidden",
            "contents": "c_purchaseGroupStateHidden"
        },
        {
            "trigger": "c_soundtrackCueAny",
            "contents": "c_soundtrackCueAny"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton5",
            "contents": "c_gameMenuDialogGenericButton5"
        },
        {
            "trigger": "PlayerName",
            "contents": "PlayerName(${1:int inPlayer})"
        },
        {
            "trigger": "UnitSetPropertyFixed",
            "contents": "UnitSetPropertyFixed(${1:unit inUnit}, ${2:int inProp}, ${3:fixed inVal})"
        },
        {
            "trigger": "c_unitStateInStasis",
            "contents": "c_unitStateInStasis"
        },
        {
            "trigger": "ConversationDataStateSetValue",
            "contents": "ConversationDataStateSetValue(${1:string stateIndex}, ${2:int value})"
        },
        {
            "trigger": "c_conversationReplyStateOld",
            "contents": "c_conversationReplyStateOld"
        },
        {
            "trigger": "UnitGroupFromId",
            "contents": "UnitGroupFromId(${1:int id})"
        },
        {
            "trigger": "PathingReset",
            "contents": "PathingReset()"
        },
        {
            "trigger": "c_dataTypeAIFilter",
            "contents": "c_dataTypeAIFilter"
        },
        {
            "trigger": "PathGetVisible",
            "contents": "PathGetVisible(${1:int inPathId}, ${2:int inLocation})"
        },
        {
            "trigger": "TextTagAttachToUnit",
            "contents": "TextTagAttachToUnit(${1:int inTag}, ${2:unit inUnit}, ${3:fixed inHeightOffset})"
        },
        {
            "trigger": "WaterPause",
            "contents": "WaterPause(${1:string inWater}, ${2:bool inPaused})"
        },
        {
            "trigger": "CatalogFieldType",
            "contents": "CatalogFieldType(${1:string scope}, ${2:string field})"
        },
        {
            "trigger": "c_unitPropLifeRegen",
            "contents": "c_unitPropLifeRegen"
        },
        {
            "trigger": "c_nydusLinkSecurityPassword",
            "contents": "c_nydusLinkSecurityPassword"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton8",
            "contents": "c_gameMenuDialogGenericButton8"
        },
        {
            "trigger": "PortraitSetFullscreen",
            "contents": "PortraitSetFullscreen(${1:int p}, ${2:bool isFullscreen})"
        },
        {
            "trigger": "BankSectionExists",
            "contents": "BankSectionExists(${1:bank b}, ${2:string section})"
        },
        {
            "trigger": "OrderSetTargetPoint",
            "contents": "OrderSetTargetPoint(${1:order inOrder}, ${2:point inPoint})"
        },
        {
            "trigger": "BankSectionName",
            "contents": "BankSectionName(${1:bank b}, ${2:int index})"
        },
        {
            "trigger": "c_triggerRenderTypeLDR",
            "contents": "c_triggerRenderTypeLDR"
        },
        {
            "trigger": "c_unitCostMinerals",
            "contents": "c_unitCostMinerals"
        },
        {
            "trigger": "c_keyCapsLock",
            "contents": "c_keyCapsLock"
        },
        {
            "trigger": "TriggerAddEventCameraMove",
            "contents": "TriggerAddEventCameraMove(${1:trigger t}, ${2:int player}, ${3:int reason})"
        },
        {
            "trigger": "DataTableGetCinematic",
            "contents": "DataTableGetCinematic(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "PathSetSourcePoint",
            "contents": "PathSetSourcePoint(${1:int inPathId}, ${2:point inSource})"
        },
        {
            "trigger": "c_unitAbilChargeCountMax",
            "contents": "c_unitAbilChargeCountMax"
        },
        {
            "trigger": "TriggerAddEventVictoryPanelExit",
            "contents": "TriggerAddEventVictoryPanelExit(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "PingSetUseUnitTeamColor",
            "contents": "PingSetUseUnitTeamColor(${1:int p}, ${2:bool useUnitTeamColor})"
        },
        {
            "trigger": "c_unitBehaviorChangeActivate",
            "contents": "c_unitBehaviorChangeActivate"
        },
        {
            "trigger": "c_actorRequestScopeOuter",
            "contents": "c_actorRequestScopeOuter"
        },
        {
            "trigger": "EventUnitXPDelta",
            "contents": "EventUnitXPDelta()"
        },
        {
            "trigger": "c_boardColGroups",
            "contents": "c_boardColGroups"
        },
        {
            "trigger": "PurchaseCategorySetNameText",
            "contents": "PurchaseCategorySetNameText(${1:int inPurchaseCategoryId}, ${2:text inText})"
        },
        {
            "trigger": "UnitPauseAll",
            "contents": "UnitPauseAll(${1:bool inPause})"
        },
        {
            "trigger": "UnitGroupHasUnit",
            "contents": "UnitGroupHasUnit(${1:unitgroup inGroup}, ${2:unit inUnit})"
        },
        {
            "trigger": "TechTreeSpecificRequirementEnable",
            "contents": "TechTreeSpecificRequirementEnable(${1:int player}, ${2:string requirementName}, ${3:bool enable})"
        },
        {
            "trigger": "c_keyV",
            "contents": "c_keyV"
        },
        {
            "trigger": "c_fadeStyleExponential",
            "contents": "c_fadeStyleExponential"
        },
        {
            "trigger": "c_unitAttributeNone",
            "contents": "c_unitAttributeNone"
        },
        {
            "trigger": "ObjectiveSetFirst",
            "contents": "ObjectiveSetFirst(${1:int inObjective})"
        },
        {
            "trigger": "e_physicsKeyframed",
            "contents": "e_physicsKeyframed"
        },
        {
            "trigger": "SoundPlayOnUnit",
            "contents": "SoundPlayOnUnit(${1:soundlink link}, ${2:playergroup players}, ${3:unit inUnit}, ${4:fixed height}, ${5:fixed volume}, ${6:fixed offset})"
        },
        {
            "trigger": "c_killDisplayDefault",
            "contents": "c_killDisplayDefault"
        },
        {
            "trigger": "UnitCheckAbilCmdState",
            "contents": "UnitCheckAbilCmdState(${1:unit inUnit}, ${2:abilcmd inAbilCmd}, ${3:int inState})"
        },
        {
            "trigger": "TriggerAddEventPlanetMissionLaunched",
            "contents": "TriggerAddEventPlanetMissionLaunched(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "CampaignMode",
            "contents": "CampaignMode(${1:playergroup players}, ${2:bool campaignMode})"
        },
        {
            "trigger": "ActorSendAsText",
            "contents": "ActorSendAsText(${1:actor a}, ${2:text msg})"
        },
        {
            "trigger": "c_keyNumPad1",
            "contents": "c_keyNumPad1"
        },
        {
            "trigger": "PurchaseItemSetDescriptionText",
            "contents": "PurchaseItemSetDescriptionText(${1:int inPurchaseItemId}, ${2:text inText})"
        },
        {
            "trigger": "UISetChallengeScoreText",
            "contents": "UISetChallengeScoreText(${1:playergroup players}, ${2:string challengeId}, ${3:text scoreText})"
        },
        {
            "trigger": "c_unitPropBaseMovementSpeed",
            "contents": "c_unitPropBaseMovementSpeed"
        },
        {
            "trigger": "ConversationDataRegisterUnit",
            "contents": "ConversationDataRegisterUnit(${1:string stateIndex}, ${2:unit u})"
        },
        {
            "trigger": "UnitGroupFilter",
            "contents": "UnitGroupFilter(${1:string type}, ${2:int player}, ${3:unitgroup g}, ${4:unitfilter filter}, ${5:int maxCount})"
        },
        {
            "trigger": "CameraSetChannel",
            "contents": "CameraSetChannel(${1:int player}, ${2:unit cameraUnit}, ${3:string cameraName}, ${4:int channel}, ${5:fixed aspectRatio})"
        },
        {
            "trigger": "c_triggerControlPropertyToggled",
            "contents": "c_triggerControlPropertyToggled"
        },
        {
            "trigger": "c_syncFrameTypeHelpMenuButton",
            "contents": "c_syncFrameTypeHelpMenuButton"
        },
        {
            "trigger": "c_localSelectionTypeSelectBuilder",
            "contents": "c_localSelectionTypeSelectBuilder"
        },
        {
            "trigger": "EventPlayerPropertyChangeInt",
            "contents": "EventPlayerPropertyChangeInt()"
        },
        {
            "trigger": "c_timerWindowImageProgressFill",
            "contents": "c_timerWindowImageProgressFill"
        },
        {
            "trigger": "c_cmdStateNoMinerals",
            "contents": "c_cmdStateNoMinerals"
        },
        {
            "trigger": "DialogControlSetPropertyAsInt",
            "contents": "DialogControlSetPropertyAsInt(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:int value})"
        },
        {
            "trigger": "BoardPlayerAdd",
            "contents": "BoardPlayerAdd(${1:int inBoard}, ${2:int inPlayer})"
        },
        {
            "trigger": "TextTagSetBackgroundBorderSize",
            "contents": "TextTagSetBackgroundBorderSize(${1:int inTag}, ${2:fixed inX}, ${3:fixed inY})"
        },
        {
            "trigger": "DialogControlGetPropertyAsString",
            "contents": "DialogControlGetPropertyAsString(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "SoundSetVolume",
            "contents": "SoundSetVolume(${1:sound s}, ${2:fixed volume})"
        },
        {
            "trigger": "VictoryPanelSetRewardTitle",
            "contents": "VictoryPanelSetRewardTitle(${1:text inText})"
        },
        {
            "trigger": "c_keyDown",
            "contents": "c_keyDown"
        },
        {
            "trigger": "BankValueSetFromInt",
            "contents": "BankValueSetFromInt(${1:bank b}, ${2:string section}, ${3:string key}, ${4:int value})"
        },
        {
            "trigger": "PlayerAddChargeUsed",
            "contents": "PlayerAddChargeUsed(${1:int inPlayer}, ${2:string inCharge}, ${3:fixed inVal})"
        },
        {
            "trigger": "VisIsVisibleForPlayer",
            "contents": "VisIsVisibleForPlayer(${1:int player}, ${2:point inPos})"
        },
        {
            "trigger": "c_keyG",
            "contents": "c_keyG"
        },
        {
            "trigger": "c_localSelectionTypeArmyButton",
            "contents": "c_localSelectionTypeArmyButton"
        },
        {
            "trigger": "ResearchItemSetSelected",
            "contents": "ResearchItemSetSelected(${1:playergroup inPlayerGroup}, ${2:int inResearchItemId})"
        },
        {
            "trigger": "c_conversationSkipFull",
            "contents": "c_conversationSkipFull"
        },
        {
            "trigger": "RegionFromName",
            "contents": "RegionFromName(${1:string name})"
        },
        {
            "trigger": "UnitFromId",
            "contents": "UnitFromId(${1:int id})"
        },
        {
            "trigger": "c_anchorLeft",
            "contents": "c_anchorLeft"
        },
        {
            "trigger": "CameraLookAt",
            "contents": "CameraLookAt(${1:int player}, ${2:point p}, ${3:fixed duration}, ${4:fixed velocity}, ${5:fixed decelerate})"
        },
        {
            "trigger": "c_cmdStateNoEnergy",
            "contents": "c_cmdStateNoEnergy"
        },
        {
            "trigger": "ConversationDataLineCount",
            "contents": "ConversationDataLineCount(${1:string convId})"
        },
        {
            "trigger": "TransmissionSendAdvanced",
            "contents": "TransmissionSendAdvanced(${1:playergroup players}, ${2:transmissionsource source}, ${3:int targetPortrait}, ${4:string actorLink}, ${5:string targetAnim}, ${6:soundlink soundLink}, ${7:text speaker}, ${8:text subtitle}, ${9:fixed duration}, ${10:int durationType}, ${11:bool waitUntilDone})"
        },
        {
            "trigger": "c_actorIntersectAgainstCenter",
            "contents": "c_actorIntersectAgainstCenter"
        },
        {
            "trigger": "BattleReportGetDifficultyLevelCompleted",
            "contents": "BattleReportGetDifficultyLevelCompleted(${1:int inBattleReportId}, ${2:int inDifficultyLevel})"
        },
        {
            "trigger": "c_unitPropLife",
            "contents": "c_unitPropLife"
        },
        {
            "trigger": "DialogControlSetEnabled",
            "contents": "DialogControlSetEnabled(${1:int control}, ${2:playergroup players}, ${3:bool isEnabled})"
        },
        {
            "trigger": "c_unitProgressTypeTrain",
            "contents": "c_unitProgressTypeTrain"
        },
        {
            "trigger": "c_triggerRenderTypeHDR",
            "contents": "c_triggerRenderTypeHDR"
        },
        {
            "trigger": "PurchaseItemDestroy",
            "contents": "PurchaseItemDestroy(${1:int inPurchaseItemId})"
        },
        {
            "trigger": "EventCheatUsed",
            "contents": "EventCheatUsed()"
        },
        {
            "trigger": "UserDataResetType",
            "contents": "UserDataResetType(${1:string inType})"
        },
        {
            "trigger": "c_triggerControlPropertyAnim",
            "contents": "c_triggerControlPropertyAnim"
        },
        {
            "trigger": "c_timerWindowColorTime",
            "contents": "c_timerWindowColorTime"
        },
        {
            "trigger": "c_triggerControlTypeTooltip",
            "contents": "c_triggerControlTypeTooltip"
        },
        {
            "trigger": "Ceiling",
            "contents": "Ceiling(${1:fixed x})"
        },
        {
            "trigger": "DialogControlSetPropertyAsColor",
            "contents": "DialogControlSetPropertyAsColor(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:color value})"
        },
        {
            "trigger": "PlanetSetSecondaryObjectiveTitle",
            "contents": "PlanetSetSecondaryObjectiveTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "AchievementPanelSetVisible",
            "contents": "AchievementPanelSetVisible(${1:playergroup players}, ${2:bool visible})"
        },
        {
            "trigger": "CameraInfoGetValue",
            "contents": "CameraInfoGetValue(${1:camerainfo c}, ${2:int type})"
        },
        {
            "trigger": "DataTableGetDialog",
            "contents": "DataTableGetDialog(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UISetChallengeCompleted",
            "contents": "UISetChallengeCompleted(${1:playergroup players}, ${2:string challengeName}, ${3:bool completed})"
        },
        {
            "trigger": "c_customDialogResultYes",
            "contents": "c_customDialogResultYes"
        },
        {
            "trigger": "c_keyPause",
            "contents": "c_keyPause"
        },
        {
            "trigger": "c_syncFrameTypeBattleReportPanel",
            "contents": "c_syncFrameTypeBattleReportPanel"
        },
        {
            "trigger": "ActorTextureGroupPop",
            "contents": "ActorTextureGroupPop()"
        },
        {
            "trigger": "UnitInventoryCount",
            "contents": "UnitInventoryCount(${1:unit inUnit}, ${2:int inCountType})"
        },
        {
            "trigger": "TriggerAddEventMovieStarted",
            "contents": "TriggerAddEventMovieStarted(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "HelpPanelDestroyHelpItem",
            "contents": "HelpPanelDestroyHelpItem(${1:int helpItemId})"
        },
        {
            "trigger": "DialogSetPositionRelativeToUnit",
            "contents": "DialogSetPositionRelativeToUnit(${1:int dialog}, ${2:unit inUnit}, ${3:string inAttachment}, ${4:int offsetX}, ${5:int offsetY})"
        },
        {
            "trigger": "c_keyNumPad5",
            "contents": "c_keyNumPad5"
        },
        {
            "trigger": "c_key0",
            "contents": "c_key0"
        },
        {
            "trigger": "PlanetClearSelected",
            "contents": "PlanetClearSelected(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_dataTypeControl",
            "contents": "c_dataTypeControl"
        },
        {
            "trigger": "DialogIsEnabled",
            "contents": "DialogIsEnabled(${1:int dialog})"
        },
        {
            "trigger": "BoardTitleShow",
            "contents": "BoardTitleShow(${1:int inBoard}, ${2:playergroup inPlayers}, ${3:bool inShow})"
        },
        {
            "trigger": "c_gameCheatFood",
            "contents": "c_gameCheatFood"
        },
        {
            "trigger": "c_animFlagAssetDrivenLooping",
            "contents": "c_animFlagAssetDrivenLooping"
        },
        {
            "trigger": "BankDeleteCampaignBanks",
            "contents": "BankDeleteCampaignBanks(${1:int player}, ${2:int index})"
        },
        {
            "trigger": "c_animGroupApplyFlagClosingFull",
            "contents": "c_animGroupApplyFlagClosingFull"
        },
        {
            "trigger": "BoardSort",
            "contents": "BoardSort(${1:int inBoard}, ${2:int inCol}, ${3:bool inAscending}, ${4:int inPriority})"
        },
        {
            "trigger": "c_meleeOptionPoints",
            "contents": "c_meleeOptionPoints"
        },
        {
            "trigger": "c_keyF3",
            "contents": "c_keyF3"
        },
        {
            "trigger": "c_unitInventoryChangeGains",
            "contents": "c_unitInventoryChangeGains"
        },
        {
            "trigger": "c_keySemiColon",
            "contents": "c_keySemiColon"
        },
        {
            "trigger": "CutscenePlay",
            "contents": "CutscenePlay(${1:int inCutscene})"
        },
        {
            "trigger": "UnitFilterSetState",
            "contents": "UnitFilterSetState(${1:unitfilter inFilter}, ${2:int inType}, ${3:int inState})"
        },
        {
            "trigger": "EventUnitTargetPoint",
            "contents": "EventUnitTargetPoint()"
        },
        {
            "trigger": "BattleReportDestroy",
            "contents": "BattleReportDestroy(${1:int inBattleReportId})"
        },
        {
            "trigger": "UserDataSaveInstance",
            "contents": "UserDataSaveInstance(${1:string inType}, ${2:string inInstance}, ${3:bank inBank}, ${4:string inSection})"
        },
        {
            "trigger": "c_messageAreaDebug",
            "contents": "c_messageAreaDebug"
        },
        {
            "trigger": "FogSetStartHeightOverTime",
            "contents": "FogSetStartHeightOverTime(${1:fixed h}, ${2:fixed timeRamp})"
        },
        {
            "trigger": "PlanetSetPlayerGroup",
            "contents": "PlanetSetPlayerGroup(${1:int inPlanetId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "DialogControlSetPropertyAsUnit",
            "contents": "DialogControlSetPropertyAsUnit(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:unit value})"
        },
        {
            "trigger": "DataTableSetPoint",
            "contents": "DataTableSetPoint(${1:bool global}, ${2:string name}, ${3:point val})"
        },
        {
            "trigger": "VictoryPanelAddAchievement",
            "contents": "VictoryPanelAddAchievement(${1:string inAchievement})"
        },
        {
            "trigger": "PointFromName",
            "contents": "PointFromName(${1:string name})"
        },
        {
            "trigger": "ActorLastCreatedSend",
            "contents": "ActorLastCreatedSend()"
        },
        {
            "trigger": "c_nydusLinkAccountTrialUpgrade",
            "contents": "c_nydusLinkAccountTrialUpgrade"
        },
        {
            "trigger": "CameraRestore",
            "contents": "CameraRestore(${1:int player}, ${2:fixed duration}, ${3:fixed velocity}, ${4:fixed decelerate})"
        },
        {
            "trigger": "c_cameraMoveReasonAlert",
            "contents": "c_cameraMoveReasonAlert"
        },
        {
            "trigger": "PlayerScoreValueEnableAll",
            "contents": "PlayerScoreValueEnableAll(${1:int player}, ${2:bool enable})"
        },
        {
            "trigger": "UnitFilterStr",
            "contents": "UnitFilterStr(${1:string filters})"
        },
        {
            "trigger": "ConversationDestroyAll",
            "contents": "ConversationDestroyAll()"
        },
        {
            "trigger": "CatalogFieldGet",
            "contents": "CatalogFieldGet(${1:string scope}, ${2:int index})"
        },
        {
            "trigger": "TriggerAddEventUnitArmMagazineProgress",
            "contents": "TriggerAddEventUnitArmMagazineProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "c_techCountQueuedOnly",
            "contents": "c_techCountQueuedOnly"
        },
        {
            "trigger": "UnitKill",
            "contents": "UnitKill(${1:unit inUnit})"
        },
        {
            "trigger": "UnitTypeAnimationUnload",
            "contents": "UnitTypeAnimationUnload(${1:string inUnitType}, ${2:string animPath})"
        },
        {
            "trigger": "UnitTypePlacementFromUnit",
            "contents": "UnitTypePlacementFromUnit(${1:string inType}, ${2:int inPlayer}, ${3:unit inSource}, ${4:fixed inRange})"
        },
        {
            "trigger": "c_triggerControlPropertyTiled",
            "contents": "c_triggerControlPropertyTiled"
        },
        {
            "trigger": "TechTreeUnitProducesUpgrade",
            "contents": "TechTreeUnitProducesUpgrade(${1:string unitType}, ${2:int index})"
        },
        {
            "trigger": "c_syncFrameTypeCommandPanel",
            "contents": "c_syncFrameTypeCommandPanel"
        },
        {
            "trigger": "TransmissionSourceFromMovie",
            "contents": "TransmissionSourceFromMovie(${1:string assetLink}, ${2:bool subtitles})"
        },
        {
            "trigger": "VictoryPanelSetCustomStatisticText",
            "contents": "VictoryPanelSetCustomStatisticText(${1:text inText})"
        },
        {
            "trigger": "CameraGetPitch",
            "contents": "CameraGetPitch(${1:int player})"
        },
        {
            "trigger": "TriggerAddEventPing",
            "contents": "TriggerAddEventPing(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_invalidMissionId",
            "contents": "c_invalidMissionId"
        },
        {
            "trigger": "TimerStart",
            "contents": "TimerStart(${1:timer t}, ${2:fixed duration}, ${3:bool periodic}, ${4:int timeType})"
        },
        {
            "trigger": "PurchaseGroupSetState",
            "contents": "PurchaseGroupSetState(${1:int inPurchaseGroupId}, ${2:int inState})"
        },
        {
            "trigger": "DataTableSetWaveTarget",
            "contents": "DataTableSetWaveTarget(${1:bool global}, ${2:string name}, ${3:wavetarget val})"
        },
        {
            "trigger": "c_unitDamageTypeRanged",
            "contents": "c_unitDamageTypeRanged"
        },
        {
            "trigger": "c_triggerControlPropertyWidth",
            "contents": "c_triggerControlPropertyWidth"
        },
        {
            "trigger": "RegionAddRegion",
            "contents": "RegionAddRegion(${1:region r}, ${2:region regToAdd})"
        },
        {
            "trigger": "PerfTestStop",
            "contents": "PerfTestStop()"
        },
        {
            "trigger": "SoundChannelStop",
            "contents": "SoundChannelStop(${1:playergroup players}, ${2:int channel})"
        },
        {
            "trigger": "ActorFromScope",
            "contents": "ActorFromScope(${1:actorscope as}, ${2:string name})"
        },
        {
            "trigger": "PingSetDuration",
            "contents": "PingSetDuration(${1:int p}, ${2:fixed duration})"
        },
        {
            "trigger": "c_unitStateRadar",
            "contents": "c_unitStateRadar"
        },
        {
            "trigger": "c_syncFrameTypePylonButton",
            "contents": "c_syncFrameTypePylonButton"
        },
        {
            "trigger": "PlayerGetChargeUsed",
            "contents": "PlayerGetChargeUsed(${1:int inPlayer}, ${2:string inCharge})"
        },
        {
            "trigger": "PreloadAsset",
            "contents": "PreloadAsset(${1:string key}, ${2:bool queue})"
        },
        {
            "trigger": "GameTimeOfDayGet",
            "contents": "GameTimeOfDayGet()"
        },
        {
            "trigger": "c_boardRowHeader",
            "contents": "c_boardRowHeader"
        },
        {
            "trigger": "c_unitBehaviorFlagPermanent",
            "contents": "c_unitBehaviorFlagPermanent"
        },
        {
            "trigger": "c_cameraMoveReasonIdleWorker",
            "contents": "c_cameraMoveReasonIdleWorker"
        },
        {
            "trigger": "c_triggerControlPropertyAlpha",
            "contents": "c_triggerControlPropertyAlpha"
        },
        {
            "trigger": "EventUnitBehaviorChange",
            "contents": "EventUnitBehaviorChange()"
        },
        {
            "trigger": "c_actorRefSpaceScope",
            "contents": "c_actorRefSpaceScope"
        },
        {
            "trigger": "ConversationDataPreloadLines",
            "contents": "ConversationDataPreloadLines(${1:string convId})"
        },
        {
            "trigger": "UnitCargoLastCreatedGroup",
            "contents": "UnitCargoLastCreatedGroup()"
        },
        {
            "trigger": "UnitMoverExists",
            "contents": "UnitMoverExists(${1:unit inUnit}, ${2:string inMover})"
        },
        {
            "trigger": "c_triggerControlPropertyBehavior",
            "contents": "c_triggerControlPropertyBehavior"
        },
        {
            "trigger": "c_triggerControlTypeButton",
            "contents": "c_triggerControlTypeButton"
        },
        {
            "trigger": "PlanetCreate",
            "contents": "PlanetCreate(${1:playergroup inPlayerGroup}, ${2:int inState})"
        },
        {
            "trigger": "PortraitSetRenderType",
            "contents": "PortraitSetRenderType(${1:int p}, ${2:int renderType})"
        },
        {
            "trigger": "c_transmissionOptionHideAlertPanel",
            "contents": "c_transmissionOptionHideAlertPanel"
        },
        {
            "trigger": "c_triggerControlPropertyRelativeAnchor",
            "contents": "c_triggerControlPropertyRelativeAnchor"
        },
        {
            "trigger": "CatalogReferenceGet",
            "contents": "CatalogReferenceGet(${1:string reference}, ${2:int player})"
        },
        {
            "trigger": "UserDataSetMovie",
            "contents": "UserDataSetMovie(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "c_bankTypeInt",
            "contents": "c_bankTypeInt"
        },
        {
            "trigger": "UnitRevive",
            "contents": "UnitRevive(${1:unit inUnit})"
        },
        {
            "trigger": "c_anchorTopLeft",
            "contents": "c_anchorTopLeft"
        },
        {
            "trigger": "RegionAddCircle",
            "contents": "RegionAddCircle(${1:region r}, ${2:bool positive}, ${3:point center}, ${4:fixed radius})"
        },
        {
            "trigger": "c_playerStateFidgetingEnabled",
            "contents": "c_playerStateFidgetingEnabled"
        },
        {
            "trigger": "c_bankTypeText",
            "contents": "c_bankTypeText"
        },
        {
            "trigger": "ConversationDataChoiceSetPickedCount",
            "contents": "ConversationDataChoiceSetPickedCount(${1:string convId}, ${2:string choiceId}, ${3:int count})"
        },
        {
            "trigger": "PingGetScale",
            "contents": "PingGetScale(${1:int p})"
        },
        {
            "trigger": "DataTableGetReply",
            "contents": "DataTableGetReply(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "Color",
            "contents": "Color(${1:fixed r}, ${2:fixed g}, ${3:fixed b})"
        },
        {
            "trigger": "CinematicDataRun",
            "contents": "CinematicDataRun(${1:int id}, ${2:playergroup players}, ${3:bool waitUntilDone})"
        },
        {
            "trigger": "c_gameCheatCategoryDevelopment",
            "contents": "c_gameCheatCategoryDevelopment"
        },
        {
            "trigger": "CatalogReferenceGetAsInt",
            "contents": "CatalogReferenceGetAsInt(${1:string reference}, ${2:int player})"
        },
        {
            "trigger": "c_triggerControlTypeProgressBar",
            "contents": "c_triggerControlTypeProgressBar"
        },
        {
            "trigger": "TriggerAddEventMapInit",
            "contents": "TriggerAddEventMapInit(${1:trigger t})"
        },
        {
            "trigger": "TipAlertPanelClear",
            "contents": "TipAlertPanelClear(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "ActorFromPortrait",
            "contents": "ActorFromPortrait(${1:int p})"
        },
        {
            "trigger": "UnitSetInfoSubTip",
            "contents": "UnitSetInfoSubTip(${1:unit inUnit}, ${2:text subTip})"
        },
        {
            "trigger": "BoardCreate",
            "contents": "BoardCreate(${1:int inCols}, ${2:int inRows}, ${3:text inName}, ${4:color inColor})"
        },
        {
            "trigger": "CatalogLinkReplace",
            "contents": "CatalogLinkReplace(${1:int player}, ${2:int catalog}, ${3:string idA}, ${4:string idB})"
        },
        {
            "trigger": "UnitGroupIssueOrder",
            "contents": "UnitGroupIssueOrder(${1:unitgroup inGroup}, ${2:order inOrder}, ${3:int inQueueType})"
        },
        {
            "trigger": "c_playerStateContinueEnabled",
            "contents": "c_playerStateContinueEnabled"
        },
        {
            "trigger": "c_meleeOptionSplitResources",
            "contents": "c_meleeOptionSplitResources"
        },
        {
            "trigger": "DialogControlSetFullDialog",
            "contents": "DialogControlSetFullDialog(${1:int control}, ${2:playergroup players}, ${3:bool isFullDialog})"
        },
        {
            "trigger": "BoardSetName",
            "contents": "BoardSetName(${1:int inBoard}, ${2:text inName}, ${3:color inColor})"
        },
        {
            "trigger": "c_purchaseItemStateDisabled",
            "contents": "c_purchaseItemStateDisabled"
        },
        {
            "trigger": "c_animTimeDefault",
            "contents": "c_animTimeDefault"
        },
        {
            "trigger": "c_playerPropVespene",
            "contents": "c_playerPropVespene"
        },
        {
            "trigger": "DialogGetHeight",
            "contents": "DialogGetHeight(${1:int dialog})"
        },
        {
            "trigger": "BattleReportGetSceneImage",
            "contents": "BattleReportGetSceneImage(${1:int inBattleReportId})"
        },
        {
            "trigger": "TriggerEvaluate",
            "contents": "TriggerEvaluate(${1:trigger t})"
        },
        {
            "trigger": "TextTagSetFontSize",
            "contents": "TextTagSetFontSize(${1:int inTag}, ${2:int inFontSize})"
        },
        {
            "trigger": "ActorRegionSend",
            "contents": "ActorRegionSend(${1:actor a}, ${2:int intersect}, ${3:string msg}, ${4:string filters}, ${5:string terms})"
        },
        {
            "trigger": "c_researchItemStateEnabled",
            "contents": "c_researchItemStateEnabled"
        },
        {
            "trigger": "c_unitBehaviorChangeDestroy",
            "contents": "c_unitBehaviorChangeDestroy"
        },
        {
            "trigger": "c_animNameDefault",
            "contents": "c_animNameDefault"
        },
        {
            "trigger": "c_localSelectionTypeInfoPanel",
            "contents": "c_localSelectionTypeInfoPanel"
        },
        {
            "trigger": "c_unitAbilStageUnpause",
            "contents": "c_unitAbilStageUnpause"
        },
        {
            "trigger": "StringWord",
            "contents": "StringWord(${1:string s}, ${2:int index})"
        },
        {
            "trigger": "c_keyNumLock",
            "contents": "c_keyNumLock"
        },
        {
            "trigger": "c_planetStateActive",
            "contents": "c_planetStateActive"
        },
        {
            "trigger": "EventTargetModeAbilCmd",
            "contents": "EventTargetModeAbilCmd()"
        },
        {
            "trigger": "CameraInfoSetTarget",
            "contents": "CameraInfoSetTarget(${1:camerainfo c}, ${2:point p})"
        },
        {
            "trigger": "BattleReportSetShownInMissionTotal",
            "contents": "BattleReportSetShownInMissionTotal(${1:int inBattleReportId}, ${2:bool inShown})"
        },
        {
            "trigger": "UnitGroupCopy",
            "contents": "UnitGroupCopy(${1:unitgroup inGroup})"
        },
        {
            "trigger": "UnitSetProgressComplete",
            "contents": "UnitSetProgressComplete(${1:unit inUnit}, ${2:int inSlot}, ${3:int inPercent})"
        },
        {
            "trigger": "c_triggerControlPropertyTextWriteout",
            "contents": "c_triggerControlPropertyTextWriteout"
        },
        {
            "trigger": "c_keyGrave",
            "contents": "c_keyGrave"
        },
        {
            "trigger": "MercenaryPurchase",
            "contents": "MercenaryPurchase(${1:int inMercenaryId})"
        },
        {
            "trigger": "TriggerAddEventCutsceneConversationLine",
            "contents": "TriggerAddEventCutsceneConversationLine(${1:trigger t}, ${2:int inCutscene}, ${3:string inConversationLine})"
        },
        {
            "trigger": "UnitGroupRandomUnit",
            "contents": "UnitGroupRandomUnit(${1:unitgroup inGroup}, ${2:int inType})"
        },
        {
            "trigger": "EventMouseClickedPosXUI",
            "contents": "EventMouseClickedPosXUI()"
        },
        {
            "trigger": "c_customDialogResultNo",
            "contents": "c_customDialogResultNo"
        },
        {
            "trigger": "TimerIsPaused",
            "contents": "TimerIsPaused(${1:timer t})"
        },
        {
            "trigger": "EventPlanetPanelDifficultySelected",
            "contents": "EventPlanetPanelDifficultySelected()"
        },
        {
            "trigger": "PointGetHeight",
            "contents": "PointGetHeight(${1:point p})"
        },
        {
            "trigger": "OrderGetPlayer",
            "contents": "OrderGetPlayer(${1:order inOrder})"
        },
        {
            "trigger": "UnitCreateEffectUnit",
            "contents": "UnitCreateEffectUnit(${1:unit inUnit}, ${2:string inEffect}, ${3:unit inTarget})"
        },
        {
            "trigger": "MercenarySetAvailabilityText",
            "contents": "MercenarySetAvailabilityText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "ActorRegionCreate",
            "contents": "ActorRegionCreate(${1:actorscope as}, ${2:string actorName}, ${3:region r})"
        },
        {
            "trigger": "c_playerPropCustom",
            "contents": "c_playerPropCustom"
        },
        {
            "trigger": "UserDataGetImageAttachPoint",
            "contents": "UserDataGetImageAttachPoint(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "VisRevealerDestroy",
            "contents": "VisRevealerDestroy(${1:revealer r})"
        },
        {
            "trigger": "c_cameraValueDistance",
            "contents": "c_cameraValueDistance"
        },
        {
            "trigger": "PerfTestGetFPS",
            "contents": "PerfTestGetFPS()"
        },
        {
            "trigger": "DialogClearSubtitlePositionOverrideControl",
            "contents": "DialogClearSubtitlePositionOverrideControl()"
        },
        {
            "trigger": "c_objectiveStateFailed",
            "contents": "c_objectiveStateFailed"
        },
        {
            "trigger": "c_keyEnd",
            "contents": "c_keyEnd"
        },
        {
            "trigger": "BattleReportSetButtonText",
            "contents": "BattleReportSetButtonText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "PlayerGroupActive",
            "contents": "PlayerGroupActive()"
        },
        {
            "trigger": "PlayerBeaconAlert",
            "contents": "PlayerBeaconAlert(${1:int inPlayer}, ${2:int inBeacon}, ${3:string inAlert}, ${4:text inMessage})"
        },
        {
            "trigger": "UserDataSetText",
            "contents": "UserDataSetText(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:text inValue})"
        },
        {
            "trigger": "EventUnitAbilityStage",
            "contents": "EventUnitAbilityStage()"
        },
        {
            "trigger": "UnitIssueOrder",
            "contents": "UnitIssueOrder(${1:unit inUnit}, ${2:order inOrder}, ${3:int inQueueType})"
        },
        {
            "trigger": "OrderTargetingUnitGroup",
            "contents": "OrderTargetingUnitGroup(${1:abilcmd inAbilCmd}, ${2:unitgroup inUnitGroup})"
        },
        {
            "trigger": "Sin",
            "contents": "Sin(${1:fixed degrees})"
        },
        {
            "trigger": "UnitAddChargeUsed",
            "contents": "UnitAddChargeUsed(${1:unit inUnit}, ${2:string inCharge}, ${3:fixed inVal})"
        },
        {
            "trigger": "c_syncFrameTypeCreditsPanel",
            "contents": "c_syncFrameTypeCreditsPanel"
        },
        {
            "trigger": "c_triggerControlPropertyCustomTooltip",
            "contents": "c_triggerControlPropertyCustomTooltip"
        },
        {
            "trigger": "c_unitAIOptionUsable",
            "contents": "c_unitAIOptionUsable"
        },
        {
            "trigger": "c_keyModifierStateExclude",
            "contents": "c_keyModifierStateExclude"
        },
        {
            "trigger": "PlayerBeaconBuildMenuSetSlotInfo",
            "contents": "PlayerBeaconBuildMenuSetSlotInfo(${1:int inPlayer}, ${2:int inType}, ${3:int inSlotNum}, ${4:text inIcon}, ${5:text inName}, ${6:text inTooltip})"
        },
        {
            "trigger": "ResearchItemSetTooltipText",
            "contents": "ResearchItemSetTooltipText(${1:int inResearchItemId}, ${2:text inText})"
        },
        {
            "trigger": "CatalogEntryGet",
            "contents": "CatalogEntryGet(${1:int catalog}, ${2:int index})"
        },
        {
            "trigger": "CutsceneGoToNextBookmark",
            "contents": "CutsceneGoToNextBookmark(${1:int inCutscene})"
        },
        {
            "trigger": "TriggerAddEventUnitProperty",
            "contents": "TriggerAddEventUnitProperty(${1:trigger t}, ${2:unitref u}, ${3:int prop})"
        },
        {
            "trigger": "ActorLookAtStop",
            "contents": "ActorLookAtStop(${1:actor s}, ${2:string lookAt}, ${3:int weight}, ${4:fixed time})"
        },
        {
            "trigger": "c_objectiveStateUnknown",
            "contents": "c_objectiveStateUnknown"
        },
        {
            "trigger": "TriggerAddEventConversationReplySelected",
            "contents": "TriggerAddEventConversationReplySelected(${1:trigger t}, ${2:int player}, ${3:int intId}, ${4:int replyId})"
        },
        {
            "trigger": "SelectMainShadowLight",
            "contents": "SelectMainShadowLight(${1:string inId})"
        },
        {
            "trigger": "EventBattleReportPanelSceneSelected",
            "contents": "EventBattleReportPanelSceneSelected()"
        },
        {
            "trigger": "c_syncFrameTypeTechTreePanel",
            "contents": "c_syncFrameTypeTechTreePanel"
        },
        {
            "trigger": "VictoryPanelAddCustomStatisticLine",
            "contents": "VictoryPanelAddCustomStatisticLine(${1:text inText}, ${2:text inValueText})"
        },
        {
            "trigger": "CatalogEntryParent",
            "contents": "CatalogEntryParent(${1:int catalog}, ${2:string entry})"
        },
        {
            "trigger": "c_keyY",
            "contents": "c_keyY"
        },
        {
            "trigger": "c_unitPropEnergyRegen",
            "contents": "c_unitPropEnergyRegen"
        },
        {
            "trigger": "ResearchItemSetIconFilePath",
            "contents": "ResearchItemSetIconFilePath(${1:int inResearchItemId}, ${2:string inFilePath})"
        },
        {
            "trigger": "c_cameraRotationRoll",
            "contents": "c_cameraRotationRoll"
        },
        {
            "trigger": "PlayerBeaconBuildMenuWasFromPlayer",
            "contents": "PlayerBeaconBuildMenuWasFromPlayer(${1:int inPlayer}, ${2:int inType})"
        },
        {
            "trigger": "CatalogLinkReplacement",
            "contents": "CatalogLinkReplacement(${1:int player}, ${2:int catalog}, ${3:string id})"
        },
        {
            "trigger": "MercenarySetState",
            "contents": "MercenarySetState(${1:int inMercenaryId}, ${2:int inState})"
        },
        {
            "trigger": "ActorLastCreated",
            "contents": "ActorLastCreated()"
        },
        {
            "trigger": "TransmissionSend",
            "contents": "TransmissionSend(${1:playergroup players}, ${2:transmissionsource source}, ${3:int targetPortrait}, ${4:string targetAnim}, ${5:soundlink soundLink}, ${6:text speaker}, ${7:text subtitle}, ${8:fixed duration}, ${9:int durationType}, ${10:bool waitUntilDone})"
        },
        {
            "trigger": "SoundtrackPause",
            "contents": "SoundtrackPause(${1:playergroup players}, ${2:int category}, ${3:bool pause}, ${4:bool fade})"
        },
        {
            "trigger": "c_alignRight",
            "contents": "c_alignRight"
        },
        {
            "trigger": "c_unitBehaviorFlagUpdateDurationWhileDisabled",
            "contents": "c_unitBehaviorFlagUpdateDurationWhileDisabled"
        },
        {
            "trigger": "PingGetRotation",
            "contents": "PingGetRotation(${1:int p})"
        },
        {
            "trigger": "PathSetAbilClassFilter",
            "contents": "PathSetAbilClassFilter(${1:int inPathId}, ${2:int inAbilClass}, ${3:int inFilter})"
        },
        {
            "trigger": "c_cameraValueShadowClip",
            "contents": "c_cameraValueShadowClip"
        },
        {
            "trigger": "DialogControlGetOffsetY",
            "contents": "DialogControlGetOffsetY(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_keyF10",
            "contents": "c_keyF10"
        },
        {
            "trigger": "PlanetSetContactModelLink",
            "contents": "PlanetSetContactModelLink(${1:int inPlanetId}, ${2:string inContactModelLink})"
        },
        {
            "trigger": "c_conversationSkipSimple",
            "contents": "c_conversationSkipSimple"
        },
        {
            "trigger": "c_meleeOptionDefeat",
            "contents": "c_meleeOptionDefeat"
        },
        {
            "trigger": "c_playerStateDisplayInLeaderPanel",
            "contents": "c_playerStateDisplayInLeaderPanel"
        },
        {
            "trigger": "TriggerDebugSetTypeName",
            "contents": "TriggerDebugSetTypeName(${1:int type}, ${2:text inText})"
        },
        {
            "trigger": "PathGetDestinationPoint",
            "contents": "PathGetDestinationPoint(${1:int inPathId})"
        },
        {
            "trigger": "EventUnitPropertyChangeInt",
            "contents": "EventUnitPropertyChangeInt()"
        },
        {
            "trigger": "c_uiModeConsole",
            "contents": "c_uiModeConsole"
        },
        {
            "trigger": "PlayerSetDifficulty",
            "contents": "PlayerSetDifficulty(${1:int inPlayer}, ${2:int inDifficulty})"
        },
        {
            "trigger": "UserDataGetMovie",
            "contents": "UserDataGetMovie(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_textTagColorEdge",
            "contents": "c_textTagColorEdge"
        },
        {
            "trigger": "c_soundOffsetEnd",
            "contents": "c_soundOffsetEnd"
        },
        {
            "trigger": "c_triggerControlTypeMovie",
            "contents": "c_triggerControlTypeMovie"
        },
        {
            "trigger": "UserDataSetImageAttachPoint",
            "contents": "UserDataSetImageAttachPoint(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "c_dataTypeString",
            "contents": "c_dataTypeString"
        },
        {
            "trigger": "VictoryPanelSetAchievementsTitle",
            "contents": "VictoryPanelSetAchievementsTitle(${1:text inText})"
        },
        {
            "trigger": "HelpPanelAddTip",
            "contents": "HelpPanelAddTip(${1:playergroup players}, ${2:text titleText}, ${3:text descriptionText}, ${4:text alertText}, ${5:string iconPath})"
        },
        {
            "trigger": "EventUnitInventoryItemTargetUnit",
            "contents": "EventUnitInventoryItemTargetUnit()"
        },
        {
            "trigger": "DialogSetTitle",
            "contents": "DialogSetTitle(${1:int dialog}, ${2:text title})"
        },
        {
            "trigger": "c_actorRefSpaceActor",
            "contents": "c_actorRefSpaceActor"
        },
        {
            "trigger": "c_triggerControlPropertyOffsetY",
            "contents": "c_triggerControlPropertyOffsetY"
        },
        {
            "trigger": "PurchaseGroupLastCreated",
            "contents": "PurchaseGroupLastCreated()"
        },
        {
            "trigger": "DialogControlGetPropertyAsBool",
            "contents": "DialogControlGetPropertyAsBool(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_gameMenuDialogMessageLogButton",
            "contents": "c_gameMenuDialogMessageLogButton"
        },
        {
            "trigger": "UserDataGetAbilCmd",
            "contents": "UserDataGetAbilCmd(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "PlayerAIBuildNumber",
            "contents": "PlayerAIBuildNumber(${1:int player})"
        },
        {
            "trigger": "UnitBehaviorAddChargeUsed",
            "contents": "UnitBehaviorAddChargeUsed(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCharge}, ${4:fixed inVal})"
        },
        {
            "trigger": "DataTableGetActorScope",
            "contents": "DataTableGetActorScope(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "BankValueSetFromFixed",
            "contents": "BankValueSetFromFixed(${1:bank b}, ${2:string section}, ${3:string key}, ${4:fixed value})"
        },
        {
            "trigger": "PlayerBeaconClearTarget",
            "contents": "PlayerBeaconClearTarget(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "TimerWindowCreate",
            "contents": "TimerWindowCreate(${1:timer inTimer}, ${2:text inTitle}, ${3:bool inShow}, ${4:bool inShowElapsed})"
        },
        {
            "trigger": "c_mouseButtonFlagRight",
            "contents": "c_mouseButtonFlagRight"
        },
        {
            "trigger": "MakeMsgTextureVideoStop",
            "contents": "MakeMsgTextureVideoStop(${1:string slotName}, ${2:int slotComponent})"
        },
        {
            "trigger": "TimerWindowShow",
            "contents": "TimerWindowShow(${1:int inWindow}, ${2:playergroup inPlayers}, ${3:bool inShow})"
        },
        {
            "trigger": "c_keyNumPad2",
            "contents": "c_keyNumPad2"
        },
        {
            "trigger": "UnitGroupWaitUntilIdle",
            "contents": "UnitGroupWaitUntilIdle(${1:unitgroup inGroup}, ${2:int inCount}, ${3:bool inIdle})"
        },
        {
            "trigger": "DialogControlInvokeAsString",
            "contents": "DialogControlInvokeAsString(${1:int control}, ${2:playergroup players}, ${3:string method}, ${4:string param1}, ${5:string param2}, ${6:string param3}, ${7:string param4})"
        },
        {
            "trigger": "UserDataGetUpgrade",
            "contents": "UserDataGetUpgrade(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "DialogControlFadeTransparency",
            "contents": "DialogControlFadeTransparency(${1:int control}, ${2:playergroup players}, ${3:fixed fadeTime}, ${4:fixed inTargetTransparency})"
        },
        {
            "trigger": "ObjectiveGetName",
            "contents": "ObjectiveGetName(${1:int inObjective})"
        },
        {
            "trigger": "TimerWindowSetColor",
            "contents": "TimerWindowSetColor(${1:int inWindow}, ${2:int inType}, ${3:color inColor}, ${4:fixed transparency})"
        },
        {
            "trigger": "DataTableGetSound",
            "contents": "DataTableGetSound(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UnitCountAlliance",
            "contents": "UnitCountAlliance(${1:int player}, ${2:int alliance}, ${3:region r}, ${4:unitfilter filter}, ${5:int maxCount})"
        },
        {
            "trigger": "UserDataGetUserInstance",
            "contents": "UserDataGetUserInstance(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "TextTagSetTextAlignment",
            "contents": "TextTagSetTextAlignment(${1:int inTag}, ${2:int inHoriz}, ${3:int inVert})"
        },
        {
            "trigger": "CameraLookAtUnit",
            "contents": "CameraLookAtUnit(${1:int player}, ${2:unit u})"
        },
        {
            "trigger": "PointGetFacing",
            "contents": "PointGetFacing(${1:point p})"
        },
        {
            "trigger": "PlayerGetAlliance",
            "contents": "PlayerGetAlliance(${1:int inSourcePlayer}, ${2:int inAllianceId}, ${3:int inTargetPlayer})"
        },
        {
            "trigger": "MercenarySetPlayerGroup",
            "contents": "MercenarySetPlayerGroup(${1:int inMercenaryId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_keySpace",
            "contents": "c_keySpace"
        },
        {
            "trigger": "TimerGetElapsed",
            "contents": "TimerGetElapsed(${1:timer t})"
        },
        {
            "trigger": "PingSetVisible",
            "contents": "PingSetVisible(${1:int p}, ${2:bool isVisible})"
        },
        {
            "trigger": "c_textureSlotComponentDefault",
            "contents": "c_textureSlotComponentDefault"
        },
        {
            "trigger": "PlayerAddChargeRegen",
            "contents": "PlayerAddChargeRegen(${1:int inPlayer}, ${2:string inCharge}, ${3:fixed inVal})"
        },
        {
            "trigger": "SoundLengthQueryWait",
            "contents": "SoundLengthQueryWait()"
        },
        {
            "trigger": "MercenarySetCostText",
            "contents": "MercenarySetCostText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "CatalogEntryIsDefault",
            "contents": "CatalogEntryIsDefault(${1:int catalog}, ${2:string entry})"
        },
        {
            "trigger": "BattleReportAddAchievement",
            "contents": "BattleReportAddAchievement(${1:int inBattleReportId}, ${2:string inAchievement})"
        },
        {
            "trigger": "c_techCountCompleteOnly",
            "contents": "c_techCountCompleteOnly"
        },
        {
            "trigger": "c_playerStatusLeft",
            "contents": "c_playerStatusLeft"
        },
        {
            "trigger": "c_effectAmountKilled",
            "contents": "c_effectAmountKilled"
        },
        {
            "trigger": "c_environmentTerrain",
            "contents": "c_environmentTerrain"
        },
        {
            "trigger": "TextReplaceWord",
            "contents": "TextReplaceWord(${1:text t}, ${2:text word}, ${3:text replace}, ${4:int maxCount}, ${5:bool caseSens})"
        },
        {
            "trigger": "c_mouseButtonFlagXButton2",
            "contents": "c_mouseButtonFlagXButton2"
        },
        {
            "trigger": "PointSetFacing",
            "contents": "PointSetFacing(${1:point p}, ${2:fixed inFacing})"
        },
        {
            "trigger": "c_objectiveStateActive",
            "contents": "c_objectiveStateActive"
        },
        {
            "trigger": "UnitMagazineLastCreated",
            "contents": "UnitMagazineLastCreated()"
        },
        {
            "trigger": "c_unitCreateConstruct",
            "contents": "c_unitCreateConstruct"
        },
        {
            "trigger": "c_playerPropDamageDealtPercent",
            "contents": "c_playerPropDamageDealtPercent"
        },
        {
            "trigger": "Round",
            "contents": "Round(${1:fixed x})"
        },
        {
            "trigger": "TruncI",
            "contents": "TruncI(${1:fixed x})"
        },
        {
            "trigger": "CameraClearChannel",
            "contents": "CameraClearChannel(${1:int player}, ${2:int channel})"
        },
        {
            "trigger": "PlanetSetMissionName",
            "contents": "PlanetSetMissionName(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_unitCostSumMineralsVespene",
            "contents": "c_unitCostSumMineralsVespene"
        },
        {
            "trigger": "DialogControlSetPosition",
            "contents": "DialogControlSetPosition(${1:int control}, ${2:playergroup players}, ${3:int anchor}, ${4:int offsetX}, ${5:int offsetY})"
        },
        {
            "trigger": "UISetRestartLoadingScreen",
            "contents": "UISetRestartLoadingScreen(${1:text help})"
        },
        {
            "trigger": "EventUnitBehavior",
            "contents": "EventUnitBehavior()"
        },
        {
            "trigger": "ConversationDestroy",
            "contents": "ConversationDestroy(${1:int intId})"
        },
        {
            "trigger": "c_keyH",
            "contents": "c_keyH"
        },
        {
            "trigger": "UserDataField",
            "contents": "UserDataField(${1:string inType}, ${2:int inIndex})"
        },
        {
            "trigger": "EventUnitDamageDeathCheck",
            "contents": "EventUnitDamageDeathCheck(${1:int inType})"
        },
        {
            "trigger": "PortraitDestroyAll",
            "contents": "PortraitDestroyAll()"
        },
        {
            "trigger": "c_invalidMercenaryId",
            "contents": "c_invalidMercenaryId"
        },
        {
            "trigger": "UnitBehaviorAddChargeRegen",
            "contents": "UnitBehaviorAddChargeRegen(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCharge}, ${4:fixed inVal})"
        },
        {
            "trigger": "ActorScopeFromDialogControl",
            "contents": "ActorScopeFromDialogControl(${1:int p})"
        },
        {
            "trigger": "c_unitDamageFatal",
            "contents": "c_unitDamageFatal"
        },
        {
            "trigger": "FogSetColor",
            "contents": "FogSetColor(${1:color c})"
        },
        {
            "trigger": "SoundLinkId",
            "contents": "SoundLinkId(${1:soundlink soundId})"
        },
        {
            "trigger": "TriggerAddEventMouseClicked",
            "contents": "TriggerAddEventMouseClicked(${1:trigger t}, ${2:int player}, ${3:int mouseButton}, ${4:bool down})"
        },
        {
            "trigger": "c_portraitRenderTypeLDR",
            "contents": "c_portraitRenderTypeLDR"
        },
        {
            "trigger": "c_textTagColorEdgeStart",
            "contents": "c_textTagColorEdgeStart"
        },
        {
            "trigger": "UISetWorldVisible",
            "contents": "UISetWorldVisible(${1:playergroup players}, ${2:bool isVisible})"
        },
        {
            "trigger": "c_dialogControlAny",
            "contents": "c_dialogControlAny"
        },
        {
            "trigger": "UnitValidateEffectPoint",
            "contents": "UnitValidateEffectPoint(${1:unit inUnit}, ${2:string inEffect}, ${3:point inTarget})"
        },
        {
            "trigger": "UISetResourceTradingMajorStep",
            "contents": "UISetResourceTradingMajorStep(${1:int inResourceType}, ${2:int inAmount})"
        },
        {
            "trigger": "TriggerAddEventConversationStateChanged",
            "contents": "TriggerAddEventConversationStateChanged(${1:trigger t}, ${2:string stateIndex})"
        },
        {
            "trigger": "MaxF",
            "contents": "MaxF(${1:fixed x1}, ${2:fixed x2})"
        },
        {
            "trigger": "c_cameraDirectionZ",
            "contents": "c_cameraDirectionZ"
        },
        {
            "trigger": "FogSetDensity",
            "contents": "FogSetDensity(${1:fixed d})"
        },
        {
            "trigger": "CameraInfoDefault",
            "contents": "CameraInfoDefault()"
        },
        {
            "trigger": "UserDataTypeFromReference",
            "contents": "UserDataTypeFromReference(${1:string inRef})"
        },
        {
            "trigger": "ObjectiveSetDescription",
            "contents": "ObjectiveSetDescription(${1:int inObjective}, ${2:text inText})"
        },
        {
            "trigger": "GameSetNextMap",
            "contents": "GameSetNextMap(${1:string inMap})"
        },
        {
            "trigger": "c_unitPropLifeExpected",
            "contents": "c_unitPropLifeExpected"
        },
        {
            "trigger": "CreepIsPresent",
            "contents": "CreepIsPresent(${1:point inPos})"
        },
        {
            "trigger": "ActorTextureGroupRemoveGlobal",
            "contents": "ActorTextureGroupRemoveGlobal(${1:string textureProps})"
        },
        {
            "trigger": "ResearchCategorySetPlayerGroup",
            "contents": "ResearchCategorySetPlayerGroup(${1:int inResearchCategoryId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "RegionGetBoundsMin",
            "contents": "RegionGetBoundsMin(${1:region r})"
        },
        {
            "trigger": "TriggerAddEventUnitTrainProgress",
            "contents": "TriggerAddEventUnitTrainProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "UnitGetAIOption",
            "contents": "UnitGetAIOption(${1:unit inUnit}, ${2:int inOption})"
        },
        {
            "trigger": "UIGetChallengeHighScore",
            "contents": "UIGetChallengeHighScore(${1:int player}, ${2:string challengeName})"
        },
        {
            "trigger": "UnitBehaviorGetChargeUsed",
            "contents": "UnitBehaviorGetChargeUsed(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCharge})"
        },
        {
            "trigger": "c_keyNextTrack",
            "contents": "c_keyNextTrack"
        },
        {
            "trigger": "c_keyRight",
            "contents": "c_keyRight"
        },
        {
            "trigger": "c_catalogFieldTypeUnknown",
            "contents": "c_catalogFieldTypeUnknown"
        },
        {
            "trigger": "GameAttributePlayersForTeam",
            "contents": "GameAttributePlayersForTeam(${1:int team})"
        },
        {
            "trigger": "TriggerAddEventPlayerPropChange",
            "contents": "TriggerAddEventPlayerPropChange(${1:trigger inTrigger}, ${2:int player}, ${3:int inProp})"
        },
        {
            "trigger": "UIClearCustomMenuItemList",
            "contents": "UIClearCustomMenuItemList(${1:playergroup inPlayers})"
        },
        {
            "trigger": "UnitIsSelected",
            "contents": "UnitIsSelected(${1:unit inUnit}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_invalidPlanetId",
            "contents": "c_invalidPlanetId"
        },
        {
            "trigger": "ConversationDataLoadStateValues",
            "contents": "ConversationDataLoadStateValues(${1:string stateId}, ${2:bank b}, ${3:string section})"
        },
        {
            "trigger": "DialogControlSetPropertyAsText",
            "contents": "DialogControlSetPropertyAsText(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:text value})"
        },
        {
            "trigger": "MinimapPing",
            "contents": "MinimapPing(${1:playergroup players}, ${2:point position}, ${3:fixed duration}, ${4:color c})"
        },
        {
            "trigger": "ResearchTierDestroyAll",
            "contents": "ResearchTierDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "PlayerGroupLoopStep",
            "contents": "PlayerGroupLoopStep()"
        },
        {
            "trigger": "PortraitLastCreated",
            "contents": "PortraitLastCreated()"
        },
        {
            "trigger": "UnitTestState",
            "contents": "UnitTestState(${1:unit inUnit}, ${2:int inState})"
        },
        {
            "trigger": "UserDataGetActor",
            "contents": "UserDataGetActor(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "MakeMsgTextureSelectByMatch",
            "contents": "MakeMsgTextureSelectByMatch(${1:string slotName}, ${2:int slotComponent}, ${3:string sourceSlotName}, ${4:int sourceSlotComponent})"
        },
        {
            "trigger": "c_gameCheatFastBuild",
            "contents": "c_gameCheatFastBuild"
        },
        {
            "trigger": "DialogSetSubtitlePositionOverrideControl",
            "contents": "DialogSetSubtitlePositionOverrideControl(${1:int inControlId})"
        },
        {
            "trigger": "DataTableGetBool",
            "contents": "DataTableGetBool(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "DataTableSetCameraInfo",
            "contents": "DataTableSetCameraInfo(${1:bool global}, ${2:string name}, ${3:camerainfo val})"
        },
        {
            "trigger": "PurchaseItemSetIconFilePath",
            "contents": "PurchaseItemSetIconFilePath(${1:int inPurchaseItemId}, ${2:string inFilePath})"
        },
        {
            "trigger": "c_stringNotFound",
            "contents": "c_stringNotFound"
        },
        {
            "trigger": "PointPathingCost",
            "contents": "PointPathingCost(${1:point p1}, ${2:point p2})"
        },
        {
            "trigger": "c_gameMenuDialogReturnToGameplayButton",
            "contents": "c_gameMenuDialogReturnToGameplayButton"
        },
        {
            "trigger": "StringToFixed",
            "contents": "StringToFixed(${1:string x})"
        },
        {
            "trigger": "BattleReportSetBonusText",
            "contents": "BattleReportSetBonusText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "CameraApplyInfo",
            "contents": "CameraApplyInfo(${1:int player}, ${2:camerainfo c}, ${3:fixed duration}, ${4:fixed velocity}, ${5:fixed decelerate}, ${6:bool useTarget})"
        },
        {
            "trigger": "PreloadObject",
            "contents": "PreloadObject(${1:int catalog}, ${2:string id}, ${3:bool queue})"
        },
        {
            "trigger": "GameMapIsBlizzard",
            "contents": "GameMapIsBlizzard()"
        },
        {
            "trigger": "c_uiCommandAllowMinimap",
            "contents": "c_uiCommandAllowMinimap"
        },
        {
            "trigger": "c_unitInventoryChangeDrops",
            "contents": "c_unitInventoryChangeDrops"
        },
        {
            "trigger": "EventBattleReportPanelMissionSelected",
            "contents": "EventBattleReportPanelMissionSelected()"
        },
        {
            "trigger": "c_triggerControlPropertyBorderImage",
            "contents": "c_triggerControlPropertyBorderImage"
        },
        {
            "trigger": "DataTableSetDoodad",
            "contents": "DataTableSetDoodad(${1:bool global}, ${2:string name}, ${3:doodad val})"
        },
        {
            "trigger": "ResearchItemCreate",
            "contents": "ResearchItemCreate(${1:playergroup inPlayerGroup}, ${2:int inResearchTierId}, ${3:int inState})"
        },
        {
            "trigger": "c_unitPropSuppliesMade",
            "contents": "c_unitPropSuppliesMade"
        },
        {
            "trigger": "MercenarySetDescriptionText",
            "contents": "MercenarySetDescriptionText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "c_triggerControlTypeFlash",
            "contents": "c_triggerControlTypeFlash"
        },
        {
            "trigger": "ResearchItemSetPlayerGroup",
            "contents": "ResearchItemSetPlayerGroup(${1:int inResearchItemId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "UnitRallyPointTargetUnit",
            "contents": "UnitRallyPointTargetUnit(${1:unit inUnit}, ${2:int inPoint}, ${3:int inTarget})"
        },
        {
            "trigger": "DialogControlSetSize",
            "contents": "DialogControlSetSize(${1:int control}, ${2:playergroup players}, ${3:int width}, ${4:int height})"
        },
        {
            "trigger": "PortraitSetModelAnim",
            "contents": "PortraitSetModelAnim(${1:int p}, ${2:string modelLink}, ${3:string anim}, ${4:int flags}, ${5:bool waitUntilLoaded})"
        },
        {
            "trigger": "PlayerBeaconGetNumAllies",
            "contents": "PlayerBeaconGetNumAllies(${1:int inPlayer})"
        },
        {
            "trigger": "TriggerAddEventMercenaryPanelSelectionChanged",
            "contents": "TriggerAddEventMercenaryPanelSelectionChanged(${1:trigger t}, ${2:int player}, ${3:int inMercenaryId})"
        },
        {
            "trigger": "ModelAnimationUnload",
            "contents": "ModelAnimationUnload(${1:string modelPath}, ${2:string animPath})"
        },
        {
            "trigger": "DataTableValueType",
            "contents": "DataTableValueType(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_keyNumPad8",
            "contents": "c_keyNumPad8"
        },
        {
            "trigger": "c_playerPropHandicap",
            "contents": "c_playerPropHandicap"
        },
        {
            "trigger": "c_gameResultVictory",
            "contents": "c_gameResultVictory"
        },
        {
            "trigger": "TextTagSetFadedTransparency",
            "contents": "TextTagSetFadedTransparency(${1:int inTag}, ${2:int inType}, ${3:fixed inTransparency})"
        },
        {
            "trigger": "c_actorTransitionIn",
            "contents": "c_actorTransitionIn"
        },
        {
            "trigger": "MarkerSetMatchFlag",
            "contents": "MarkerSetMatchFlag(${1:marker m}, ${2:int flag}, ${3:bool state})"
        },
        {
            "trigger": "c_actorTransitionOut",
            "contents": "c_actorTransitionOut"
        },
        {
            "trigger": "CutsceneSetGlobalFilter",
            "contents": "CutsceneSetGlobalFilter(${1:string inFilter})"
        },
        {
            "trigger": "CutsceneGoToBookmark",
            "contents": "CutsceneGoToBookmark(${1:int inCutscene}, ${2:string inBookmarkName})"
        },
        {
            "trigger": "UnitGroupNearestUnit",
            "contents": "UnitGroupNearestUnit(${1:unitgroup inGroup}, ${2:point inPoint})"
        },
        {
            "trigger": "c_triggerControlPropertyHotkey",
            "contents": "c_triggerControlPropertyHotkey"
        },
        {
            "trigger": "MercenarySetCost",
            "contents": "MercenarySetCost(${1:int inMercenaryId}, ${2:int inCost})"
        },
        {
            "trigger": "c_anchorTop",
            "contents": "c_anchorTop"
        },
        {
            "trigger": "PlayerHasLicense",
            "contents": "PlayerHasLicense(${1:int inPlayer}, ${2:int inLicense})"
        },
        {
            "trigger": "c_keyControl",
            "contents": "c_keyControl"
        },
        {
            "trigger": "DataTableGetPoint",
            "contents": "DataTableGetPoint(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "PurchaseItemSetCost",
            "contents": "PurchaseItemSetCost(${1:int inPurchaseItemId}, ${2:int inCost})"
        },
        {
            "trigger": "DialogDestroyAll",
            "contents": "DialogDestroyAll()"
        },
        {
            "trigger": "UnitResetTeamColorIndex",
            "contents": "UnitResetTeamColorIndex(${1:unit inUnit})"
        },
        {
            "trigger": "RegionContainsPoint",
            "contents": "RegionContainsPoint(${1:region r}, ${2:point p})"
        },
        {
            "trigger": "c_unitAbilAutoCastChangeOff",
            "contents": "c_unitAbilAutoCastChangeOff"
        },
        {
            "trigger": "c_unitStateHighlightable",
            "contents": "c_unitStateHighlightable"
        },
        {
            "trigger": "TriggerAddEventUnitReviveProgress",
            "contents": "TriggerAddEventUnitReviveProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "GameGetAbsoluteTimeRemaining",
            "contents": "GameGetAbsoluteTimeRemaining()"
        },
        {
            "trigger": "BoardMinimizeEnable",
            "contents": "BoardMinimizeEnable(${1:int inBoard}, ${2:playergroup inPlayers}, ${3:bool inEnable})"
        },
        {
            "trigger": "UnitRemove",
            "contents": "UnitRemove(${1:unit inUnit})"
        },
        {
            "trigger": "c_nydusLinkBreakingNews",
            "contents": "c_nydusLinkBreakingNews"
        },
        {
            "trigger": "MaxI",
            "contents": "MaxI(${1:int x1}, ${2:int x2})"
        },
        {
            "trigger": "TriggerAddEventUnitClick",
            "contents": "TriggerAddEventUnitClick(${1:trigger t}, ${2:unitref u}, ${3:int player})"
        },
        {
            "trigger": "Marker",
            "contents": "Marker(${1:string link})"
        },
        {
            "trigger": "CameraLockInput",
            "contents": "CameraLockInput(${1:int player}, ${2:bool lock})"
        },
        {
            "trigger": "HelpPanelDestroyAllTips",
            "contents": "HelpPanelDestroyAllTips()"
        },
        {
            "trigger": "UnitTypeGetProperty",
            "contents": "UnitTypeGetProperty(${1:string inUnitType}, ${2:int inProp})"
        },
        {
            "trigger": "c_unitAbilAutoCastChangeOn",
            "contents": "c_unitAbilAutoCastChangeOn"
        },
        {
            "trigger": "c_cameraValueHeightOffset",
            "contents": "c_cameraValueHeightOffset"
        },
        {
            "trigger": "MarkerSetMismatchFlag",
            "contents": "MarkerSetMismatchFlag(${1:marker m}, ${2:int flag}, ${3:bool state})"
        },
        {
            "trigger": "DialogControlGetRelativeAnchor",
            "contents": "DialogControlGetRelativeAnchor(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_invalidReplyId",
            "contents": "c_invalidReplyId"
        },
        {
            "trigger": "VisRevealerEnable",
            "contents": "VisRevealerEnable(${1:revealer r}, ${2:bool enable})"
        },
        {
            "trigger": "MercenarySetSelected",
            "contents": "MercenarySetSelected(${1:playergroup inPlayerGroup}, ${2:int inMercenaryId})"
        },
        {
            "trigger": "c_anchorTopRight",
            "contents": "c_anchorTopRight"
        },
        {
            "trigger": "DialogControlSetPropertyAsControl",
            "contents": "DialogControlSetPropertyAsControl(${1:int control}, ${2:int property}, ${3:playergroup players}, ${4:int value})"
        },
        {
            "trigger": "c_physicsDisabled",
            "contents": "c_physicsDisabled"
        },
        {
            "trigger": "MovieAddSubTitle",
            "contents": "MovieAddSubTitle(${1:string title}, ${2:int duration}, ${3:int timeStamp})"
        },
        {
            "trigger": "c_animBracketStartFlagClosingFull",
            "contents": "c_animBracketStartFlagClosingFull"
        },
        {
            "trigger": "ConversationReplyGetState",
            "contents": "ConversationReplyGetState(${1:int intId}, ${2:int replyId})"
        },
        {
            "trigger": "c_keyK",
            "contents": "c_keyK"
        },
        {
            "trigger": "c_triggerControlPropertyBackgroundVisible",
            "contents": "c_triggerControlPropertyBackgroundVisible"
        },
        {
            "trigger": "UnitTypePlacementFromPoint",
            "contents": "UnitTypePlacementFromPoint(${1:string inType}, ${2:int inPlayer}, ${3:point inSource}, ${4:fixed inRange})"
        },
        {
            "trigger": "DataTableGetPortrait",
            "contents": "DataTableGetPortrait(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_gameCheatTechTree",
            "contents": "c_gameCheatTechTree"
        },
        {
            "trigger": "UISetResourceTradingAllowed",
            "contents": "UISetResourceTradingAllowed(${1:int inResourceType}, ${2:bool inAllowed})"
        },
        {
            "trigger": "c_unitPropShieldArmor",
            "contents": "c_unitPropShieldArmor"
        },
        {
            "trigger": "UnitCanAttackTarget",
            "contents": "UnitCanAttackTarget(${1:unit inUnit}, ${2:unit inTarget})"
        },
        {
            "trigger": "RegionCircle",
            "contents": "RegionCircle(${1:point center}, ${2:fixed radius})"
        },
        {
            "trigger": "c_unitBehaviorChangeDecrease",
            "contents": "c_unitBehaviorChangeDecrease"
        },
        {
            "trigger": "FixedToText",
            "contents": "FixedToText(${1:fixed x}, ${2:int precision})"
        },
        {
            "trigger": "c_playerPropCredits",
            "contents": "c_playerPropCredits"
        },
        {
            "trigger": "TextTagDestroy",
            "contents": "TextTagDestroy(${1:int inTag})"
        },
        {
            "trigger": "PlayerBeaconSelectDropoff",
            "contents": "PlayerBeaconSelectDropoff(${1:int localPlayer})"
        },
        {
            "trigger": "GameTimeOfDaySet",
            "contents": "GameTimeOfDaySet(${1:string x})"
        },
        {
            "trigger": "c_gameCheatVespene",
            "contents": "c_gameCheatVespene"
        },
        {
            "trigger": "PlayerBeaconRequestedVespene",
            "contents": "PlayerBeaconRequestedVespene(${1:int inPlayer})"
        },
        {
            "trigger": "TechTreeUpgradeCount",
            "contents": "TechTreeUpgradeCount(${1:int player}, ${2:string upgradeType}, ${3:int countType})"
        },
        {
            "trigger": "PlayerGroupPlayer",
            "contents": "PlayerGroupPlayer(${1:playergroup inGroup}, ${2:int inIndex})"
        },
        {
            "trigger": "ConsoleCommand",
            "contents": "ConsoleCommand(${1:string inText}, ${2:bool allowDefault}, ${3:bool allowMacros})"
        },
        {
            "trigger": "c_bankTypeFixed",
            "contents": "c_bankTypeFixed"
        },
        {
            "trigger": "c_unitCargoSpaceTotal",
            "contents": "c_unitCargoSpaceTotal"
        },
        {
            "trigger": "DataTableValueCount",
            "contents": "DataTableValueCount(${1:bool global})"
        },
        {
            "trigger": "MinI",
            "contents": "MinI(${1:int x1}, ${2:int x2})"
        },
        {
            "trigger": "MovieAddSubTitleText",
            "contents": "MovieAddSubTitleText(${1:text title}, ${2:int duration}, ${3:int timeStamp})"
        },
        {
            "trigger": "c_meleeOptionXPGainDisable",
            "contents": "c_meleeOptionXPGainDisable"
        },
        {
            "trigger": "EventChatMessage",
            "contents": "EventChatMessage(${1:bool matchedOnly})"
        },
        {
            "trigger": "MercenarySetImageFilePath",
            "contents": "MercenarySetImageFilePath(${1:int inMercenaryId}, ${2:string inFilePath})"
        },
        {
            "trigger": "c_triggerControlPropertyOffscreen",
            "contents": "c_triggerControlPropertyOffscreen"
        },
        {
            "trigger": "PlayerGroupLoopDone",
            "contents": "PlayerGroupLoopDone()"
        },
        {
            "trigger": "c_customDialogTypeMessage",
            "contents": "c_customDialogTypeMessage"
        },
        {
            "trigger": "c_gameMenuDialogLoadButton",
            "contents": "c_gameMenuDialogLoadButton"
        },
        {
            "trigger": "PlanetSetContactName",
            "contents": "PlanetSetContactName(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_targetModeStateOn",
            "contents": "c_targetModeStateOn"
        },
        {
            "trigger": "c_unitProgressStateActive",
            "contents": "c_unitProgressStateActive"
        },
        {
            "trigger": "PathGetUnit",
            "contents": "PathGetUnit(${1:int inPathId})"
        },
        {
            "trigger": "c_purchaseCategoryStateDisabled",
            "contents": "c_purchaseCategoryStateDisabled"
        },
        {
            "trigger": "c_gameOverTie",
            "contents": "c_gameOverTie"
        },
        {
            "trigger": "c_triggerControlPropertyItemCount",
            "contents": "c_triggerControlPropertyItemCount"
        },
        {
            "trigger": "c_gameCheatScene",
            "contents": "c_gameCheatScene"
        },
        {
            "trigger": "c_meleeOptionStalemate",
            "contents": "c_meleeOptionStalemate"
        },
        {
            "trigger": "PurchaseCategorySetState",
            "contents": "PurchaseCategorySetState(${1:int inPurchaseCategoryId}, ${2:int inState})"
        },
        {
            "trigger": "BattleReportSetBestTimeText",
            "contents": "BattleReportSetBestTimeText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "MercenaryLastCreated",
            "contents": "MercenaryLastCreated()"
        },
        {
            "trigger": "ConversationDataStateFixedValue",
            "contents": "ConversationDataStateFixedValue(${1:string stateIndex}, ${2:string inInfoName})"
        },
        {
            "trigger": "PortraitSetAnim",
            "contents": "PortraitSetAnim(${1:int p}, ${2:string anim})"
        },
        {
            "trigger": "UnitBehaviorHasFlag",
            "contents": "UnitBehaviorHasFlag(${1:string inBehavior}, ${2:int inCategory})"
        },
        {
            "trigger": "c_effectAmountShieldsChanged",
            "contents": "c_effectAmountShieldsChanged"
        },
        {
            "trigger": "ActorScopeSend",
            "contents": "ActorScopeSend(${1:actorscope as}, ${2:string msg})"
        },
        {
            "trigger": "DialogControlGetAnchor",
            "contents": "DialogControlGetAnchor(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_triggerControlTypeUnitStatus",
            "contents": "c_triggerControlTypeUnitStatus"
        },
        {
            "trigger": "PingCreate",
            "contents": "PingCreate(${1:playergroup players}, ${2:string modelLink}, ${3:point position}, ${4:color intColor}, ${5:fixed duration})"
        },
        {
            "trigger": "TextTimeFormat",
            "contents": "TextTimeFormat(${1:text inFormat}, ${2:int inSecs})"
        },
        {
            "trigger": "UserDataSetFixed",
            "contents": "UserDataSetFixed(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:fixed inValue})"
        },
        {
            "trigger": "UserDataFieldValueCount",
            "contents": "UserDataFieldValueCount(${1:string inType}, ${2:string inField})"
        },
        {
            "trigger": "UserDataGetSound",
            "contents": "UserDataGetSound(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "MercenarySetTitleText",
            "contents": "MercenarySetTitleText(${1:int inMercenaryId}, ${2:text inText})"
        },
        {
            "trigger": "RandomInt",
            "contents": "RandomInt(${1:int min}, ${2:int max})"
        },
        {
            "trigger": "PortraitSetLight",
            "contents": "PortraitSetLight(${1:int p}, ${2:string lightLink})"
        },
        {
            "trigger": "ConversationDataStateImagePath",
            "contents": "ConversationDataStateImagePath(${1:string stateIndex})"
        },
        {
            "trigger": "c_playerStateChargesPaused",
            "contents": "c_playerStateChargesPaused"
        },
        {
            "trigger": "DataTableGetControl",
            "contents": "DataTableGetControl(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "PathLastCreated",
            "contents": "PathLastCreated()"
        },
        {
            "trigger": "TransmissionSourceSetStreamingAllowed",
            "contents": "TransmissionSourceSetStreamingAllowed(${1:transmissionsource source}, ${2:bool allowed})"
        },
        {
            "trigger": "ResearchCategorySetNameText",
            "contents": "ResearchCategorySetNameText(${1:int inResearchCategoryId}, ${2:text inText})"
        },
        {
            "trigger": "ObjectiveSetPriority",
            "contents": "ObjectiveSetPriority(${1:int inObjective}, ${2:int inPriority})"
        },
        {
            "trigger": "ResearchCategoryLastCreated",
            "contents": "ResearchCategoryLastCreated()"
        },
        {
            "trigger": "OrderTargetingUnit",
            "contents": "OrderTargetingUnit(${1:abilcmd inAbilCmd}, ${2:unit inUnit})"
        },
        {
            "trigger": "TextTagSetEdgeImage",
            "contents": "TextTagSetEdgeImage(${1:int inTag}, ${2:int inEdge}, ${3:string inPath}, ${4:int inXOffset}, ${5:int inYOffset})"
        },
        {
            "trigger": "BattleReportGetBonusText",
            "contents": "BattleReportGetBonusText(${1:int inBattleReportId})"
        },
        {
            "trigger": "Point",
            "contents": "Point(${1:fixed x}, ${2:fixed y})"
        },
        {
            "trigger": "SquareRoot",
            "contents": "SquareRoot(${1:fixed x})"
        },
        {
            "trigger": "VictoryPanelSetBackgroundFilePath",
            "contents": "VictoryPanelSetBackgroundFilePath(${1:string inFilePath})"
        },
        {
            "trigger": "PathGetDestinationUnit",
            "contents": "PathGetDestinationUnit(${1:int inPathId})"
        },
        {
            "trigger": "c_playerStateShowScore",
            "contents": "c_playerStateShowScore"
        },
        {
            "trigger": "CameraSetVerticalFieldOfView",
            "contents": "CameraSetVerticalFieldOfView(${1:int player}, ${2:bool value})"
        },
        {
            "trigger": "TriggerAddEventTimeElapsed",
            "contents": "TriggerAddEventTimeElapsed(${1:trigger inTrigger}, ${2:fixed inTime}, ${3:int inTimeType})"
        },
        {
            "trigger": "TriggerAddEventUnitBecomesIdle",
            "contents": "TriggerAddEventUnitBecomesIdle(${1:trigger t}, ${2:unitref u}, ${3:bool idle})"
        },
        {
            "trigger": "DialogClearSubtitlePositionOverride",
            "contents": "DialogClearSubtitlePositionOverride()"
        },
        {
            "trigger": "PathCreateForUnitType",
            "contents": "PathCreateForUnitType(${1:playergroup inPlayerGroup}, ${2:string inType}, ${3:int inPlayer}, ${4:point inSource})"
        },
        {
            "trigger": "c_gameMenuDialogAbortButton",
            "contents": "c_gameMenuDialogAbortButton"
        },
        {
            "trigger": "TriggerAddEventTargetModeUpdate",
            "contents": "TriggerAddEventTargetModeUpdate(${1:trigger t}, ${2:int player}, ${3:abilcmd inAbilCmd}, ${4:int state})"
        },
        {
            "trigger": "c_animGroupApplyFlagInstant",
            "contents": "c_animGroupApplyFlagInstant"
        },
        {
            "trigger": "DialogControlGetSelectedItem",
            "contents": "DialogControlGetSelectedItem(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_invalidDialogId",
            "contents": "c_invalidDialogId"
        },
        {
            "trigger": "c_environmentBackgroundFixed",
            "contents": "c_environmentBackgroundFixed"
        },
        {
            "trigger": "MakeMsgAnimPlay",
            "contents": "MakeMsgAnimPlay(${1:string animName}, ${2:string animProps}, ${3:int animFlags}, ${4:fixed blendIn}, ${5:fixed blendOut}, ${6:fixed timeVariant}, ${7:int timeType})"
        },
        {
            "trigger": "HelpPanelDestroyAllTutorials",
            "contents": "HelpPanelDestroyAllTutorials()"
        },
        {
            "trigger": "c_mercenaryStateNew",
            "contents": "c_mercenaryStateNew"
        },
        {
            "trigger": "PlayerStatus",
            "contents": "PlayerStatus(${1:int inPlayer})"
        },
        {
            "trigger": "c_uiCommandAllowModifiers",
            "contents": "c_uiCommandAllowModifiers"
        },
        {
            "trigger": "c_cmdStateNoTerrazine",
            "contents": "c_cmdStateNoTerrazine"
        },
        {
            "trigger": "c_unitPropBountyMinerals",
            "contents": "c_unitPropBountyMinerals"
        },
        {
            "trigger": "c_keyF1",
            "contents": "c_keyF1"
        },
        {
            "trigger": "c_textTagColorBackgroundEnd",
            "contents": "c_textTagColorBackgroundEnd"
        },
        {
            "trigger": "c_mouseButtonXButton2",
            "contents": "c_mouseButtonXButton2"
        },
        {
            "trigger": "ActorScopeKill",
            "contents": "ActorScopeKill(${1:actorscope as})"
        },
        {
            "trigger": "RandomFixed",
            "contents": "RandomFixed(${1:fixed min}, ${2:fixed max})"
        },
        {
            "trigger": "TimerWindowSetTitle",
            "contents": "TimerWindowSetTitle(${1:int inWindow}, ${2:text inTitle})"
        },
        {
            "trigger": "UnitSetOwner",
            "contents": "UnitSetOwner(${1:unit inUnit}, ${2:int inPlayer}, ${3:bool inChangeColor})"
        },
        {
            "trigger": "UnitLoadModel",
            "contents": "UnitLoadModel(${1:unit inUnit})"
        },
        {
            "trigger": "c_gameCheatFastHeal",
            "contents": "c_gameCheatFastHeal"
        },
        {
            "trigger": "PathingUpdate",
            "contents": "PathingUpdate()"
        },
        {
            "trigger": "PlanetSetTechnologyIconFilePath",
            "contents": "PlanetSetTechnologyIconFilePath(${1:int inPlanetId}, ${2:string inTechnologyIconFilePath})"
        },
        {
            "trigger": "c_gameCheatTV",
            "contents": "c_gameCheatTV"
        },
        {
            "trigger": "c_battleReportStateHidden",
            "contents": "c_battleReportStateHidden"
        },
        {
            "trigger": "BankWait",
            "contents": "BankWait(${1:bank b})"
        },
        {
            "trigger": "TriggerAddEventButtonPressed",
            "contents": "TriggerAddEventButtonPressed(${1:trigger t}, ${2:int player}, ${3:string button})"
        },
        {
            "trigger": "DifficultyName",
            "contents": "DifficultyName(${1:int inDifficulty})"
        },
        {
            "trigger": "c_triggerControlPropertyImageType",
            "contents": "c_triggerControlPropertyImageType"
        },
        {
            "trigger": "UnitBehaviorGetCooldown",
            "contents": "UnitBehaviorGetCooldown(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCooldown})"
        },
        {
            "trigger": "c_unitStateRevivable",
            "contents": "c_unitStateRevivable"
        },
        {
            "trigger": "MercenaryPanelSetCloseButtonEnabled",
            "contents": "MercenaryPanelSetCloseButtonEnabled(${1:playergroup players}, ${2:bool inEnabled})"
        },
        {
            "trigger": "PlayerBeaconSetTargetUnit",
            "contents": "PlayerBeaconSetTargetUnit(${1:int inPlayer}, ${2:int inBeacon}, ${3:unit inUnit}, ${4:bool alert})"
        },
        {
            "trigger": "BankValueIsType",
            "contents": "BankValueIsType(${1:bank b}, ${2:string section}, ${3:string key}, ${4:int type})"
        },
        {
            "trigger": "UnitGetTag",
            "contents": "UnitGetTag(${1:unit inUnit})"
        },
        {
            "trigger": "c_targetModeStateAny",
            "contents": "c_targetModeStateAny"
        },
        {
            "trigger": "UnitWeaponsPlaneTest",
            "contents": "UnitWeaponsPlaneTest(${1:unit inUnit}, ${2:int inPlane})"
        },
        {
            "trigger": "c_cmdActionInstant",
            "contents": "c_cmdActionInstant"
        },
        {
            "trigger": "ObjectiveGetPriority",
            "contents": "ObjectiveGetPriority(${1:int inObjective})"
        },
        {
            "trigger": "c_playerPropOperSubtract",
            "contents": "c_playerPropOperSubtract"
        },
        {
            "trigger": "RegionGetOffset",
            "contents": "RegionGetOffset(${1:region r})"
        },
        {
            "trigger": "UnitHasBehavior",
            "contents": "UnitHasBehavior(${1:unit inUnit}, ${2:string inBehavior})"
        },
        {
            "trigger": "c_cameraValueFarClip",
            "contents": "c_cameraValueFarClip"
        },
        {
            "trigger": "BankExists",
            "contents": "BankExists(${1:string name}, ${2:int player})"
        },
        {
            "trigger": "ActorTextureGroupPush",
            "contents": "ActorTextureGroupPush()"
        },
        {
            "trigger": "c_unitStateIgnoreTerrainZ",
            "contents": "c_unitStateIgnoreTerrainZ"
        },
        {
            "trigger": "PlayerBeaconIsAutoCast",
            "contents": "PlayerBeaconIsAutoCast(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "c_keyNumPadMultiply",
            "contents": "c_keyNumPadMultiply"
        },
        {
            "trigger": "c_playerStateMineralCostIgnored",
            "contents": "c_playerStateMineralCostIgnored"
        },
        {
            "trigger": "UserDataFieldCount",
            "contents": "UserDataFieldCount(${1:string inType})"
        },
        {
            "trigger": "PathingModify",
            "contents": "PathingModify(${1:region inArea}, ${2:int inType}, ${3:bool inAdd})"
        },
        {
            "trigger": "c_orderTargetPoint",
            "contents": "c_orderTargetPoint"
        },
        {
            "trigger": "c_triggerControlEventTypeMouseEnter",
            "contents": "c_triggerControlEventTypeMouseEnter"
        },
        {
            "trigger": "ObjectiveLastCreated",
            "contents": "ObjectiveLastCreated()"
        },
        {
            "trigger": "c_keyMinus",
            "contents": "c_keyMinus"
        },
        {
            "trigger": "c_playerStateDisplayGameResult",
            "contents": "c_playerStateDisplayGameResult"
        },
        {
            "trigger": "DialogControlRemoveAllItems",
            "contents": "DialogControlRemoveAllItems(${1:int control}, ${2:playergroup players})"
        },
        {
            "trigger": "DataTableClear",
            "contents": "DataTableClear(${1:bool global})"
        },
        {
            "trigger": "DialogControlIsFullDialog",
            "contents": "DialogControlIsFullDialog(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "DataTableSetUnitRef",
            "contents": "DataTableSetUnitRef(${1:bool global}, ${2:string name}, ${3:unitref val})"
        },
        {
            "trigger": "UnitBehaviorEnabled",
            "contents": "UnitBehaviorEnabled(${1:unit inUnit}, ${2:string inBehavior})"
        },
        {
            "trigger": "c_cameraMoveReasonAny",
            "contents": "c_cameraMoveReasonAny"
        },
        {
            "trigger": "PortraitWaitForLoad",
            "contents": "PortraitWaitForLoad(${1:int p})"
        },
        {
            "trigger": "c_unitAbilStagePreempt",
            "contents": "c_unitAbilStagePreempt"
        },
        {
            "trigger": "BoardItemSetProgressValue",
            "contents": "BoardItemSetProgressValue(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:fixed inVal})"
        },
        {
            "trigger": "UserDataSetString",
            "contents": "UserDataSetString(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "c_triggerControlPropertyStyle",
            "contents": "c_triggerControlPropertyStyle"
        },
        {
            "trigger": "TriggerDebugEnableType",
            "contents": "TriggerDebugEnableType(${1:int type}, ${2:bool enable})"
        },
        {
            "trigger": "EventKeyControl",
            "contents": "EventKeyControl()"
        },
        {
            "trigger": "c_unitPropResources",
            "contents": "c_unitPropResources"
        },
        {
            "trigger": "c_cameraMoveReasonSelection",
            "contents": "c_cameraMoveReasonSelection"
        },
        {
            "trigger": "c_cameraMoveReasonView",
            "contents": "c_cameraMoveReasonView"
        },
        {
            "trigger": "UnitTypeGetCost",
            "contents": "UnitTypeGetCost(${1:string inUnitType}, ${2:int inCostType})"
        },
        {
            "trigger": "c_anchorCenter",
            "contents": "c_anchorCenter"
        },
        {
            "trigger": "GameGetAbsoluteTimeRemainingPaused",
            "contents": "GameGetAbsoluteTimeRemainingPaused()"
        },
        {
            "trigger": "DialogSetSize",
            "contents": "DialogSetSize(${1:int dialog}, ${2:int width}, ${3:int height})"
        },
        {
            "trigger": "PreloadModel",
            "contents": "PreloadModel(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "GameDataIsFullyDownloaded",
            "contents": "GameDataIsFullyDownloaded(${1:int player})"
        },
        {
            "trigger": "BankSave",
            "contents": "BankSave(${1:bank b})"
        },
        {
            "trigger": "PathSetColor",
            "contents": "PathSetColor(${1:int inPathId}, ${2:int inLocation}, ${3:color inColor})"
        },
        {
            "trigger": "c_catalogFieldTypeEnum",
            "contents": "c_catalogFieldTypeEnum"
        },
        {
            "trigger": "c_animBracketStartFlagContentPlayOnce",
            "contents": "c_animBracketStartFlagContentPlayOnce"
        },
        {
            "trigger": "MeleeInitAI",
            "contents": "MeleeInitAI()"
        },
        {
            "trigger": "PreloadSound",
            "contents": "PreloadSound(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "MakeMsgTextureSelectBySlot",
            "contents": "MakeMsgTextureSelectBySlot(${1:string slotName}, ${2:int slotComponent}, ${3:string textureExpression})"
        },
        {
            "trigger": "c_triggerControlPropertyFullDialog",
            "contents": "c_triggerControlPropertyFullDialog"
        },
        {
            "trigger": "CreepModify",
            "contents": "CreepModify(${1:point inPos}, ${2:fixed inRadius}, ${3:bool inAdd}, ${4:bool inPermanent})"
        },
        {
            "trigger": "WaitForCutsceneToEnd",
            "contents": "WaitForCutsceneToEnd(${1:int inCutscene})"
        },
        {
            "trigger": "EventDialogControlMouseButton",
            "contents": "EventDialogControlMouseButton()"
        },
        {
            "trigger": "PlanetSetPrimaryObjectiveTitle",
            "contents": "PlanetSetPrimaryObjectiveTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "UISetGameMenuItemText",
            "contents": "UISetGameMenuItemText(${1:playergroup inPlayers}, ${2:int inMenuItemType}, ${3:text inText})"
        },
        {
            "trigger": "ColorGetComponent",
            "contents": "ColorGetComponent(${1:color c}, ${2:int component})"
        },
        {
            "trigger": "c_fadeStyleNormal",
            "contents": "c_fadeStyleNormal"
        },
        {
            "trigger": "c_gameCheatProgress",
            "contents": "c_gameCheatProgress"
        },
        {
            "trigger": "c_invalidDialogControlId",
            "contents": "c_invalidDialogControlId"
        },
        {
            "trigger": "UnitGroupCount",
            "contents": "UnitGroupCount(${1:unitgroup inGroup}, ${2:int inType})"
        },
        {
            "trigger": "c_unitBehaviorChangeCreate",
            "contents": "c_unitBehaviorChangeCreate"
        },
        {
            "trigger": "c_dataTypeActorScope",
            "contents": "c_dataTypeActorScope"
        },
        {
            "trigger": "c_unitBehaviorFlagChanneling",
            "contents": "c_unitBehaviorFlagChanneling"
        },
        {
            "trigger": "c_keyB",
            "contents": "c_keyB"
        },
        {
            "trigger": "BattleReportGetMissionImage",
            "contents": "BattleReportGetMissionImage(${1:int inBattleReportId})"
        },
        {
            "trigger": "c_boardColorText",
            "contents": "c_boardColorText"
        },
        {
            "trigger": "TriggerAddEventUnitConstructProgress",
            "contents": "TriggerAddEventUnitConstructProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "GameDestroyEffects",
            "contents": "GameDestroyEffects(${1:point pos}, ${2:fixed radius}, ${3:int maxCount}, ${4:string effectType})"
        },
        {
            "trigger": "c_unitBehaviorFlagExtend",
            "contents": "c_unitBehaviorFlagExtend"
        },
        {
            "trigger": "UISetCustomMenuItemVisible",
            "contents": "UISetCustomMenuItemVisible(${1:playergroup inPlayers}, ${2:int inMenuItemType}, ${3:bool inVisible})"
        },
        {
            "trigger": "c_planetPanelContactButtonStateBlinking",
            "contents": "c_planetPanelContactButtonStateBlinking"
        },
        {
            "trigger": "EventUnitGetItem",
            "contents": "EventUnitGetItem()"
        },
        {
            "trigger": "DataTableSetRevealer",
            "contents": "DataTableSetRevealer(${1:bool global}, ${2:string name}, ${3:revealer val})"
        },
        {
            "trigger": "c_playerPropTerrazineCollected",
            "contents": "c_playerPropTerrazineCollected"
        },
        {
            "trigger": "MeleeSetOption",
            "contents": "MeleeSetOption(${1:int player}, ${2:int option}, ${3:bool value})"
        },
        {
            "trigger": "DataTableSetPlanet",
            "contents": "DataTableSetPlanet(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "c_catalogFieldTypeFourCC",
            "contents": "c_catalogFieldTypeFourCC"
        },
        {
            "trigger": "c_keyT",
            "contents": "c_keyT"
        },
        {
            "trigger": "CameraShakeStop",
            "contents": "CameraShakeStop(${1:int player})"
        },
        {
            "trigger": "c_keyScrollLock",
            "contents": "c_keyScrollLock"
        },
        {
            "trigger": "c_gameMenuDialogPauseButton",
            "contents": "c_gameMenuDialogPauseButton"
        },
        {
            "trigger": "PlayerType",
            "contents": "PlayerType(${1:int inPlayer})"
        },
        {
            "trigger": "DialogControlClearSelectedItem",
            "contents": "DialogControlClearSelectedItem(${1:int control}, ${2:playergroup players})"
        },
        {
            "trigger": "c_unitProgressStageResume",
            "contents": "c_unitProgressStageResume"
        },
        {
            "trigger": "UISetNextLoadingScreen",
            "contents": "UISetNextLoadingScreen(${1:string imagePath}, ${2:text title}, ${3:text subtitle}, ${4:text body}, ${5:text help}, ${6:bool waitForInput})"
        },
        {
            "trigger": "c_playerPropSuppliesMade",
            "contents": "c_playerPropSuppliesMade"
        },
        {
            "trigger": "SoundtrackStop",
            "contents": "SoundtrackStop(${1:playergroup players}, ${2:int category}, ${3:bool fade})"
        },
        {
            "trigger": "DataTableGetByte",
            "contents": "DataTableGetByte(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "GameIsSeedLocked",
            "contents": "GameIsSeedLocked()"
        },
        {
            "trigger": "c_dataTypeColor",
            "contents": "c_dataTypeColor"
        },
        {
            "trigger": "c_planetStateHidden",
            "contents": "c_planetStateHidden"
        },
        {
            "trigger": "c_gameCheatShowmap",
            "contents": "c_gameCheatShowmap"
        },
        {
            "trigger": "UnitAbilityAddCooldown",
            "contents": "UnitAbilityAddCooldown(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCooldown}, ${4:fixed inVal})"
        },
        {
            "trigger": "UnitCheckProgressState",
            "contents": "UnitCheckProgressState(${1:unit inUnit}, ${2:int inSlot}, ${3:int inState})"
        },
        {
            "trigger": "c_gameMenuDialogMoreOptionsButton",
            "contents": "c_gameMenuDialogMoreOptionsButton"
        },
        {
            "trigger": "c_unitProgressTypeConstruct",
            "contents": "c_unitProgressTypeConstruct"
        },
        {
            "trigger": "WaterSetState",
            "contents": "WaterSetState(${1:string inWater}, ${2:fixed inDuration}, ${3:int inMorphType})"
        },
        {
            "trigger": "c_actorRequestScopeMissile",
            "contents": "c_actorRequestScopeMissile"
        },
        {
            "trigger": "c_unitStateBuried",
            "contents": "c_unitStateBuried"
        },
        {
            "trigger": "DialogSetFullscreen",
            "contents": "DialogSetFullscreen(${1:int dialog}, ${2:bool isFullscreen})"
        },
        {
            "trigger": "Pow",
            "contents": "Pow(${1:fixed x}, ${2:fixed power})"
        },
        {
            "trigger": "c_effectAmountLifeChanged",
            "contents": "c_effectAmountLifeChanged"
        },
        {
            "trigger": "EventPlayerEffectUsedAmountInt",
            "contents": "EventPlayerEffectUsedAmountInt(${1:int inAmount}, ${2:bool total})"
        },
        {
            "trigger": "c_helpPanelPageTutorials",
            "contents": "c_helpPanelPageTutorials"
        },
        {
            "trigger": "UnitMarkerCount",
            "contents": "UnitMarkerCount(${1:unit inUnit}, ${2:marker inMarker})"
        },
        {
            "trigger": "c_gameCheatUpgrade",
            "contents": "c_gameCheatUpgrade"
        },
        {
            "trigger": "DataTableSetWave",
            "contents": "DataTableSetWave(${1:bool global}, ${2:string name}, ${3:wave val})"
        },
        {
            "trigger": "DialogControlHookup",
            "contents": "DialogControlHookup(${1:int panel}, ${2:int type}, ${3:string inTemplate})"
        },
        {
            "trigger": "UnitWeaponCheck",
            "contents": "UnitWeaponCheck(${1:unit inUnit}, ${2:int inIndex}, ${3:int inTarget})"
        },
        {
            "trigger": "TimerGetRemaining",
            "contents": "TimerGetRemaining(${1:timer t})"
        },
        {
            "trigger": "c_unitInventoryChangeExhausts",
            "contents": "c_unitInventoryChangeExhausts"
        },
        {
            "trigger": "TechTreeRequirementsEnable",
            "contents": "TechTreeRequirementsEnable(${1:int player}, ${2:bool enable})"
        },
        {
            "trigger": "TextExpressionAssemble",
            "contents": "TextExpressionAssemble(${1:string id})"
        },
        {
            "trigger": "c_cameraDirectionY",
            "contents": "c_cameraDirectionY"
        },
        {
            "trigger": "c_triggerControlEventTypeValueChanged",
            "contents": "c_triggerControlEventTypeValueChanged"
        },
        {
            "trigger": "UnitTypeAnimationLoadOverriding",
            "contents": "UnitTypeAnimationLoadOverriding(${1:string inUnitType}, ${2:string animPath})"
        },
        {
            "trigger": "DataTableSetBool",
            "contents": "DataTableSetBool(${1:bool global}, ${2:string name}, ${3:bool val})"
        },
        {
            "trigger": "c_effectAmountAbsorbed",
            "contents": "c_effectAmountAbsorbed"
        },
        {
            "trigger": "TriggerAddEventTimer",
            "contents": "TriggerAddEventTimer(${1:trigger inTrigger}, ${2:timer inTimer})"
        },
        {
            "trigger": "c_unitBehaviorFlagRemoveDamageResponseExhausted",
            "contents": "c_unitBehaviorFlagRemoveDamageResponseExhausted"
        },
        {
            "trigger": "c_triggerControlTypeUnitModel",
            "contents": "c_triggerControlTypeUnitModel"
        },
        {
            "trigger": "GameSetMissionTimePaused",
            "contents": "GameSetMissionTimePaused(${1:bool inPaused})"
        },
        {
            "trigger": "PlanetSetTooltipText",
            "contents": "PlanetSetTooltipText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_triggerBlendModeLighten",
            "contents": "c_triggerBlendModeLighten"
        },
        {
            "trigger": "UnitAbilityChargeInfo",
            "contents": "UnitAbilityChargeInfo(${1:unit inUnit}, ${2:abilcmd inAbilCmd}, ${3:int inType})"
        },
        {
            "trigger": "c_timeAI",
            "contents": "c_timeAI"
        },
        {
            "trigger": "PurchaseItemSetMovieFilePath",
            "contents": "PurchaseItemSetMovieFilePath(${1:int inPurchaseItemId}, ${2:string inFilePath})"
        },
        {
            "trigger": "c_unitBehaviorFlagTemporary",
            "contents": "c_unitBehaviorFlagTemporary"
        },
        {
            "trigger": "UnitGroupIdle",
            "contents": "UnitGroupIdle(${1:int player}, ${2:bool workerOnly})"
        },
        {
            "trigger": "PurchaseItemSetPlayerGroup",
            "contents": "PurchaseItemSetPlayerGroup(${1:int inPurchaseItemId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "TechTreeUnitProducesUnitCount",
            "contents": "TechTreeUnitProducesUnitCount(${1:string unitType})"
        },
        {
            "trigger": "c_keyF2",
            "contents": "c_keyF2"
        },
        {
            "trigger": "ConversationDataStateModel",
            "contents": "ConversationDataStateModel(${1:string stateIndex}, ${2:string inInfoName})"
        },
        {
            "trigger": "c_nydusLinkAccountManagement",
            "contents": "c_nydusLinkAccountManagement"
        },
        {
            "trigger": "StringFind",
            "contents": "StringFind(${1:string s1}, ${2:string s2}, ${3:bool caseSens})"
        },
        {
            "trigger": "BankKeyExists",
            "contents": "BankKeyExists(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "TriggerAddEventTimePeriodic",
            "contents": "TriggerAddEventTimePeriodic(${1:trigger inTrigger}, ${2:fixed inTime}, ${3:int inTimeType})"
        },
        {
            "trigger": "SoundSetOffset",
            "contents": "SoundSetOffset(${1:sound s}, ${2:fixed offset}, ${3:int offsetType})"
        },
        {
            "trigger": "c_placementTestPowerMask",
            "contents": "c_placementTestPowerMask"
        },
        {
            "trigger": "c_orderTargetNone",
            "contents": "c_orderTargetNone"
        },
        {
            "trigger": "DifficultyAPM",
            "contents": "DifficultyAPM(${1:int inDifficulty})"
        },
        {
            "trigger": "c_cmdStateNoFood",
            "contents": "c_cmdStateNoFood"
        },
        {
            "trigger": "StringExternal",
            "contents": "StringExternal(${1:string s})"
        },
        {
            "trigger": "BankVerify",
            "contents": "BankVerify(${1:bank b})"
        },
        {
            "trigger": "EventButtonPressed",
            "contents": "EventButtonPressed()"
        },
        {
            "trigger": "GameSetAbsoluteTimeRemaining",
            "contents": "GameSetAbsoluteTimeRemaining(${1:fixed inTime})"
        },
        {
            "trigger": "CatalogReferenceSet",
            "contents": "CatalogReferenceSet(${1:string reference}, ${2:int player}, ${3:string value})"
        },
        {
            "trigger": "c_pathingUnpathable",
            "contents": "c_pathingUnpathable"
        },
        {
            "trigger": "PingIsVisible",
            "contents": "PingIsVisible(${1:int p})"
        },
        {
            "trigger": "EventMouseMovedPosXUI",
            "contents": "EventMouseMovedPosXUI()"
        },
        {
            "trigger": "c_key5",
            "contents": "c_key5"
        },
        {
            "trigger": "ConversationDataChoiceCount",
            "contents": "ConversationDataChoiceCount(${1:string convId})"
        },
        {
            "trigger": "FloorI",
            "contents": "FloorI(${1:fixed x})"
        },
        {
            "trigger": "PurchaseCategorySetSlot",
            "contents": "PurchaseCategorySetSlot(${1:int inPurchaseCategoryId}, ${2:int inSlot})"
        },
        {
            "trigger": "c_unitAbilChargeRegenMax",
            "contents": "c_unitAbilChargeRegenMax"
        },
        {
            "trigger": "c_localSelectionTypeControlGroup",
            "contents": "c_localSelectionTypeControlGroup"
        },
        {
            "trigger": "EventUnitDamageSourcePlayer",
            "contents": "EventUnitDamageSourcePlayer()"
        },
        {
            "trigger": "PlayerHasAccessTo",
            "contents": "PlayerHasAccessTo(${1:int inPlayer}, ${2:string inEntityName})"
        },
        {
            "trigger": "VictoryPanelSetRewardCredits",
            "contents": "VictoryPanelSetRewardCredits(${1:int inCredits})"
        },
        {
            "trigger": "TriggerAddEventDialogControl",
            "contents": "TriggerAddEventDialogControl(${1:trigger t}, ${2:int player}, ${3:int control}, ${4:int eventType})"
        },
        {
            "trigger": "c_mouseButtonFlagXButton1",
            "contents": "c_mouseButtonFlagXButton1"
        },
        {
            "trigger": "EventUnitProgressObjectType",
            "contents": "EventUnitProgressObjectType()"
        },
        {
            "trigger": "StringExternalHotkey",
            "contents": "StringExternalHotkey(${1:string s})"
        },
        {
            "trigger": "ColorWithAlpha",
            "contents": "ColorWithAlpha(${1:fixed r}, ${2:fixed g}, ${3:fixed b}, ${4:fixed a})"
        },
        {
            "trigger": "OrderGetFlag",
            "contents": "OrderGetFlag(${1:order inOrder}, ${2:int inFlag})"
        },
        {
            "trigger": "UnitInventoryIndex",
            "contents": "UnitInventoryIndex(${1:unit inItem})"
        },
        {
            "trigger": "c_textTagEdgeLeft",
            "contents": "c_textTagEdgeLeft"
        },
        {
            "trigger": "UnitWeaponIsEnabled",
            "contents": "UnitWeaponIsEnabled(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_triggerImageTypeBorder",
            "contents": "c_triggerImageTypeBorder"
        },
        {
            "trigger": "FogSetEnabled",
            "contents": "FogSetEnabled(${1:bool f})"
        },
        {
            "trigger": "PlayerModifyPropertyInt",
            "contents": "PlayerModifyPropertyInt(${1:int inPlayer}, ${2:int inProp}, ${3:int inOper}, ${4:int inVal})"
        },
        {
            "trigger": "c_animFlagFullMatch",
            "contents": "c_animFlagFullMatch"
        },
        {
            "trigger": "ConversationDataChoiceGetPicked",
            "contents": "ConversationDataChoiceGetPicked(${1:string convId}, ${2:string choiceId})"
        },
        {
            "trigger": "DialogIsOffscreen",
            "contents": "DialogIsOffscreen(${1:int dialog})"
        },
        {
            "trigger": "TriggerAddEventUnitResearchProgress",
            "contents": "TriggerAddEventUnitResearchProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "c_conversationReplyStateUnread",
            "contents": "c_conversationReplyStateUnread"
        },
        {
            "trigger": "UnitRefToUnit",
            "contents": "UnitRefToUnit(${1:unitref r})"
        },
        {
            "trigger": "c_creepSpeedGrowth",
            "contents": "c_creepSpeedGrowth"
        },
        {
            "trigger": "TriggerAddEventUnitAttacked2",
            "contents": "TriggerAddEventUnitAttacked2(${1:trigger t}, ${2:unitref u}, ${3:string inWeapon})"
        },
        {
            "trigger": "c_cmdStateDisabled",
            "contents": "c_cmdStateDisabled"
        },
        {
            "trigger": "Pow2",
            "contents": "Pow2(${1:fixed x})"
        },
        {
            "trigger": "UnitInventoryCreate",
            "contents": "UnitInventoryCreate(${1:unit inUnit}, ${2:string itemType})"
        },
        {
            "trigger": "PingDestroy",
            "contents": "PingDestroy(${1:int p})"
        },
        {
            "trigger": "PathGetLineTexture",
            "contents": "PathGetLineTexture(${1:int inPathId}, ${2:int inLocation})"
        },
        {
            "trigger": "PortraitSetTransitionModel",
            "contents": "PortraitSetTransitionModel(${1:int p}, ${2:string modelLink})"
        },
        {
            "trigger": "c_unitFilterRequired",
            "contents": "c_unitFilterRequired"
        },
        {
            "trigger": "GameGetMissionTime",
            "contents": "GameGetMissionTime()"
        },
        {
            "trigger": "SoundPlay",
            "contents": "SoundPlay(${1:soundlink link}, ${2:playergroup players}, ${3:fixed volume}, ${4:fixed offset})"
        },
        {
            "trigger": "UnitGroupFilterPlane",
            "contents": "UnitGroupFilterPlane(${1:unitgroup g}, ${2:int plane}, ${3:int maxCount})"
        },
        {
            "trigger": "PlanetPanelSetDismissButtonEnabled",
            "contents": "PlanetPanelSetDismissButtonEnabled(${1:playergroup players}, ${2:bool inEnabled})"
        },
        {
            "trigger": "GameTimeOfDayIsPaused",
            "contents": "GameTimeOfDayIsPaused()"
        },
        {
            "trigger": "PingGetPosition",
            "contents": "PingGetPosition(${1:int p})"
        },
        {
            "trigger": "c_invalidResearchTierId",
            "contents": "c_invalidResearchTierId"
        },
        {
            "trigger": "ModF",
            "contents": "ModF(${1:fixed x}, ${2:fixed m})"
        },
        {
            "trigger": "TriggerAddEventUnitGainLevel",
            "contents": "TriggerAddEventUnitGainLevel(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "CameraGetYaw",
            "contents": "CameraGetYaw(${1:int player})"
        },
        {
            "trigger": "BattleReportPanelGetSelectedBattleReport",
            "contents": "BattleReportPanelGetSelectedBattleReport(${1:int inPlayer})"
        },
        {
            "trigger": "SoundSubtitleText",
            "contents": "SoundSubtitleText(${1:soundlink link})"
        },
        {
            "trigger": "CameraSetValue",
            "contents": "CameraSetValue(${1:int player}, ${2:int type}, ${3:fixed value}, ${4:fixed duration}, ${5:fixed velocity}, ${6:fixed decelerate})"
        },
        {
            "trigger": "TriggerQueueExit",
            "contents": "TriggerQueueExit()"
        },
        {
            "trigger": "PreloadLayout",
            "contents": "PreloadLayout(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "c_unitDamageNonFatal",
            "contents": "c_unitDamageNonFatal"
        },
        {
            "trigger": "PreloadImage",
            "contents": "PreloadImage(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "DataTableSetString",
            "contents": "DataTableSetString(${1:bool global}, ${2:string name}, ${3:string val})"
        },
        {
            "trigger": "c_unitStateHighlighted",
            "contents": "c_unitStateHighlighted"
        },
        {
            "trigger": "DataTableGetBank",
            "contents": "DataTableGetBank(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_bankTypeString",
            "contents": "c_bankTypeString"
        },
        {
            "trigger": "SoundLengthQuery",
            "contents": "SoundLengthQuery(${1:soundlink info})"
        },
        {
            "trigger": "BankOptionSet",
            "contents": "BankOptionSet(${1:bank b}, ${2:int option}, ${3:bool enable})"
        },
        {
            "trigger": "c_triggerControlPropertyTeamColorIndex",
            "contents": "c_triggerControlPropertyTeamColorIndex"
        },
        {
            "trigger": "ConversationDataChoiceGetState",
            "contents": "ConversationDataChoiceGetState(${1:string convId}, ${2:string choiceId})"
        },
        {
            "trigger": "TechTreeUnitProducedAbilCmdCount",
            "contents": "TechTreeUnitProducedAbilCmdCount(${1:string unitType})"
        },
        {
            "trigger": "ColorFromIndex",
            "contents": "ColorFromIndex(${1:int inIndex}, ${2:int inType})"
        },
        {
            "trigger": "PathingType",
            "contents": "PathingType(${1:point inPos})"
        },
        {
            "trigger": "c_textTagColorText",
            "contents": "c_textTagColorText"
        },
        {
            "trigger": "CatalogFieldIsScope",
            "contents": "CatalogFieldIsScope(${1:string scope}, ${2:string field})"
        },
        {
            "trigger": "GameSetBackground",
            "contents": "GameSetBackground(${1:int inType}, ${2:string inModel}, ${3:fixed inAnimSpeed})"
        },
        {
            "trigger": "Tan",
            "contents": "Tan(${1:fixed degrees})"
        },
        {
            "trigger": "AbsF",
            "contents": "AbsF(${1:fixed x})"
        },
        {
            "trigger": "DialogSetImage",
            "contents": "DialogSetImage(${1:int dialog}, ${2:string image})"
        },
        {
            "trigger": "PurchaseCategorySetPlayerGroup",
            "contents": "PurchaseCategorySetPlayerGroup(${1:int inPurchaseCategoryId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_researchItemStatePurchased",
            "contents": "c_researchItemStatePurchased"
        },
        {
            "trigger": "PerfTestStart",
            "contents": "PerfTestStart(${1:text name})"
        },
        {
            "trigger": "DoodadFromId",
            "contents": "DoodadFromId(${1:int id})"
        },
        {
            "trigger": "TriggerSkippableEnd",
            "contents": "TriggerSkippableEnd()"
        },
        {
            "trigger": "IntLoopStep",
            "contents": "IntLoopStep()"
        },
        {
            "trigger": "c_uiCommandAllowPings",
            "contents": "c_uiCommandAllowPings"
        },
        {
            "trigger": "PortraitUseTransition",
            "contents": "PortraitUseTransition(${1:int p}, ${2:bool useTransition})"
        },
        {
            "trigger": "PlayerHandle",
            "contents": "PlayerHandle(${1:int inPlayer})"
        },
        {
            "trigger": "c_triggerControlPropertyCamera",
            "contents": "c_triggerControlPropertyCamera"
        },
        {
            "trigger": "c_key6",
            "contents": "c_key6"
        },
        {
            "trigger": "DataTableSetTransmissionSource",
            "contents": "DataTableSetTransmissionSource(${1:bool global}, ${2:string name}, ${3:transmissionsource val})"
        },
        {
            "trigger": "PlayerBeaconBuildMenuCurrentGet",
            "contents": "PlayerBeaconBuildMenuCurrentGet(${1:int inPlayer}, ${2:int inType})"
        },
        {
            "trigger": "CameraForceMouseRelative",
            "contents": "CameraForceMouseRelative(${1:int player}, ${2:bool value})"
        },
        {
            "trigger": "c_pathLocationAll",
            "contents": "c_pathLocationAll"
        },
        {
            "trigger": "VictoryPanelSetMissionTitle",
            "contents": "VictoryPanelSetMissionTitle(${1:text inText})"
        },
        {
            "trigger": "PurchaseGroupSetTooltipText",
            "contents": "PurchaseGroupSetTooltipText(${1:int inPurchaseGroupId}, ${2:text inText})"
        },
        {
            "trigger": "c_unitPropShieldsRegen",
            "contents": "c_unitPropShieldsRegen"
        },
        {
            "trigger": "TechTreeRestrictionsEnabled",
            "contents": "TechTreeRestrictionsEnabled(${1:int player})"
        },
        {
            "trigger": "ConversationDataStop",
            "contents": "ConversationDataStop()"
        },
        {
            "trigger": "c_textTagTimeFadeOut",
            "contents": "c_textTagTimeFadeOut"
        },
        {
            "trigger": "c_alignTop",
            "contents": "c_alignTop"
        },
        {
            "trigger": "TriggerAddEventUnitStartedAttack",
            "contents": "TriggerAddEventUnitStartedAttack(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "c_syncFrameTypeConsolePanel",
            "contents": "c_syncFrameTypeConsolePanel"
        },
        {
            "trigger": "DataTableGetUnit",
            "contents": "DataTableGetUnit(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "DataTableSetTimer",
            "contents": "DataTableSetTimer(${1:bool global}, ${2:string name}, ${3:timer val})"
        },
        {
            "trigger": "c_transmissionTransitionDuration",
            "contents": "c_transmissionTransitionDuration"
        },
        {
            "trigger": "ResearchItemSetState",
            "contents": "ResearchItemSetState(${1:int inResearchItemId}, ${2:int inState})"
        },
        {
            "trigger": "UIShowTextCrawl",
            "contents": "UIShowTextCrawl(${1:playergroup inPlayers}, ${2:text inTitle}, ${3:text inText}, ${4:fixed inMaxTime}, ${5:soundlink inBirthSoundLink}, ${6:soundlink inTypeSoundLink})"
        },
        {
            "trigger": "c_scaleAspect",
            "contents": "c_scaleAspect"
        },
        {
            "trigger": "c_cameraValueYaw",
            "contents": "c_cameraValueYaw"
        },
        {
            "trigger": "c_cmdActionNone",
            "contents": "c_cmdActionNone"
        },
        {
            "trigger": "UnitAbilityGetChargeRegen",
            "contents": "UnitAbilityGetChargeRegen(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCharge})"
        },
        {
            "trigger": "BoardResetPosition",
            "contents": "BoardResetPosition(${1:int inBoard})"
        },
        {
            "trigger": "PlanetSetContactTitle",
            "contents": "PlanetSetContactTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "TriggerIsEnabled",
            "contents": "TriggerIsEnabled(${1:trigger t})"
        },
        {
            "trigger": "c_triggerControlTypePortrait",
            "contents": "c_triggerControlTypePortrait"
        },
        {
            "trigger": "c_key9",
            "contents": "c_key9"
        },
        {
            "trigger": "UnitTransport",
            "contents": "UnitTransport(${1:unit inUnit})"
        },
        {
            "trigger": "EventMouseClickedPosYWorld",
            "contents": "EventMouseClickedPosYWorld()"
        },
        {
            "trigger": "UISetCustomMenuItemText",
            "contents": "UISetCustomMenuItemText(${1:playergroup inPlayers}, ${2:int inMenuItemType}, ${3:text inText})"
        },
        {
            "trigger": "UnitCargoValue",
            "contents": "UnitCargoValue(${1:unit inUnit}, ${2:int inValue})"
        },
        {
            "trigger": "c_gameOverDefeat",
            "contents": "c_gameOverDefeat"
        },
        {
            "trigger": "GameIsTestMap",
            "contents": "GameIsTestMap(${1:bool inAuto})"
        },
        {
            "trigger": "PortraitSetModel",
            "contents": "PortraitSetModel(${1:int p}, ${2:string modelLink}, ${3:bool waitUntilLoaded})"
        },
        {
            "trigger": "c_unitStateHallucination",
            "contents": "c_unitStateHallucination"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton3",
            "contents": "c_gameMenuDialogGenericButton3"
        },
        {
            "trigger": "PingGetDuration",
            "contents": "PingGetDuration(${1:int p})"
        },
        {
            "trigger": "c_achievementToastStyleZerg",
            "contents": "c_achievementToastStyleZerg"
        },
        {
            "trigger": "c_cameraDirectionXZ",
            "contents": "c_cameraDirectionXZ"
        },
        {
            "trigger": "HelpPanelDisplayPage",
            "contents": "HelpPanelDisplayPage(${1:playergroup players}, ${2:int inPage})"
        },
        {
            "trigger": "UIStatusBarClearOverride",
            "contents": "UIStatusBarClearOverride(${1:playergroup inPlayers})"
        },
        {
            "trigger": "GameOver",
            "contents": "GameOver(${1:int player}, ${2:int type}, ${3:bool showDialog}, ${4:bool showScore})"
        },
        {
            "trigger": "DialogControlForceTransition",
            "contents": "DialogControlForceTransition(${1:int control}, ${2:playergroup players}, ${3:bool inVisible}, ${4:bool inInstant})"
        },
        {
            "trigger": "c_nydusLinkAccountTrial",
            "contents": "c_nydusLinkAccountTrial"
        },
        {
            "trigger": "c_playerStatusActive",
            "contents": "c_playerStatusActive"
        },
        {
            "trigger": "DifficultyEnabled",
            "contents": "DifficultyEnabled(${1:int inDifficulty})"
        },
        {
            "trigger": "EventPlanetPanelMissionSelected",
            "contents": "EventPlanetPanelMissionSelected()"
        },
        {
            "trigger": "UnitTypePlacementTestsFromPoint",
            "contents": "UnitTypePlacementTestsFromPoint(${1:string inType}, ${2:int inPlayer}, ${3:point inSource}, ${4:fixed inRange}, ${5:int inTests})"
        },
        {
            "trigger": "c_textTagColorBackgroundStart",
            "contents": "c_textTagColorBackgroundStart"
        },
        {
            "trigger": "BoardItemSetFontSize",
            "contents": "BoardItemSetFontSize(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:int inSize})"
        },
        {
            "trigger": "TransmissionClear",
            "contents": "TransmissionClear(${1:int t})"
        },
        {
            "trigger": "PlayerGroupLoopCurrent",
            "contents": "PlayerGroupLoopCurrent()"
        },
        {
            "trigger": "PingSetModel",
            "contents": "PingSetModel(${1:int p}, ${2:string modelLink})"
        },
        {
            "trigger": "CinematicMode",
            "contents": "CinematicMode(${1:playergroup players}, ${2:bool cinematicMode}, ${3:fixed duration})"
        },
        {
            "trigger": "ConversationDataRegisterPortrait",
            "contents": "ConversationDataRegisterPortrait(${1:string stateIndex}, ${2:int p})"
        },
        {
            "trigger": "AITimePause",
            "contents": "AITimePause(${1:bool inPause})"
        },
        {
            "trigger": "PlayerGroupClear",
            "contents": "PlayerGroupClear(${1:playergroup inGroup})"
        },
        {
            "trigger": "c_unitStateDetector",
            "contents": "c_unitStateDetector"
        },
        {
            "trigger": "BankValueSetFromText",
            "contents": "BankValueSetFromText(${1:bank b}, ${2:string section}, ${3:string key}, ${4:text value})"
        },
        {
            "trigger": "GameSetToDLighting",
            "contents": "GameSetToDLighting(${1:string inId})"
        },
        {
            "trigger": "ActorScopeOrphan",
            "contents": "ActorScopeOrphan(${1:actorscope as})"
        },
        {
            "trigger": "c_key8",
            "contents": "c_key8"
        },
        {
            "trigger": "ConversationDataStateIndex",
            "contents": "ConversationDataStateIndex(${1:string inStateId}, ${2:int inIndex})"
        },
        {
            "trigger": "c_playerStateShowWorldTip",
            "contents": "c_playerStateShowWorldTip"
        },
        {
            "trigger": "c_triggerControlTypeImage",
            "contents": "c_triggerControlTypeImage"
        },
        {
            "trigger": "EventPlayerEffectUsedUnit",
            "contents": "EventPlayerEffectUsedUnit(${1:int inLocation})"
        },
        {
            "trigger": "c_planetPanelContactButtonStateOff",
            "contents": "c_planetPanelContactButtonStateOff"
        },
        {
            "trigger": "c_gameCheatGod",
            "contents": "c_gameCheatGod"
        },
        {
            "trigger": "EventUnitInventoryItem",
            "contents": "EventUnitInventoryItem()"
        },
        {
            "trigger": "c_keyF8",
            "contents": "c_keyF8"
        },
        {
            "trigger": "PingSetPlayerPingsShown",
            "contents": "PingSetPlayerPingsShown(${1:playergroup inPlayers}, ${2:bool inShown})"
        },
        {
            "trigger": "c_triggerControlPropertyAnimDuration",
            "contents": "c_triggerControlPropertyAnimDuration"
        },
        {
            "trigger": "PurchaseSetSelectedPurchaseCategory",
            "contents": "PurchaseSetSelectedPurchaseCategory(${1:playergroup inPlayerGroup}, ${2:int inPurchaseCategoryId})"
        },
        {
            "trigger": "c_mouseButtonFlagMiddle",
            "contents": "c_mouseButtonFlagMiddle"
        },
        {
            "trigger": "HelpPanelEnableTechTreeButton",
            "contents": "HelpPanelEnableTechTreeButton(${1:playergroup inPlayerGroup}, ${2:bool inEnable})"
        },
        {
            "trigger": "ResearchItemLastCreated",
            "contents": "ResearchItemLastCreated()"
        },
        {
            "trigger": "c_playerStateCustomCostIgnored",
            "contents": "c_playerStateCustomCostIgnored"
        },
        {
            "trigger": "PreloadScript",
            "contents": "PreloadScript(${1:string path}, ${2:bool queue})"
        },
        {
            "trigger": "c_unitPropShields",
            "contents": "c_unitPropShields"
        },
        {
            "trigger": "c_triggerObservedTypeSelectedOrObservedPlayerId",
            "contents": "c_triggerObservedTypeSelectedOrObservedPlayerId"
        },
        {
            "trigger": "CameraLookAtActor",
            "contents": "CameraLookAtActor(${1:int player}, ${2:actor a})"
        },
        {
            "trigger": "FogSetFallOff",
            "contents": "FogSetFallOff(${1:fixed f})"
        },
        {
            "trigger": "c_keyN",
            "contents": "c_keyN"
        },
        {
            "trigger": "TransmissionSourceFromModel",
            "contents": "TransmissionSourceFromModel(${1:string modelLink})"
        },
        {
            "trigger": "c_unitBehaviorChangeAny",
            "contents": "c_unitBehaviorChangeAny"
        },
        {
            "trigger": "PowerLevel",
            "contents": "PowerLevel(${1:int inPlayer}, ${2:point inPos}, ${3:string inLink})"
        },
        {
            "trigger": "RegionPlayableMap",
            "contents": "RegionPlayableMap()"
        },
        {
            "trigger": "c_actorRequestScopeImplicit",
            "contents": "c_actorRequestScopeImplicit"
        },
        {
            "trigger": "AITimeIsPaused",
            "contents": "AITimeIsPaused()"
        },
        {
            "trigger": "c_unitCargoSpaceFree",
            "contents": "c_unitCargoSpaceFree"
        },
        {
            "trigger": "c_triggerBlendModeMultiply",
            "contents": "c_triggerBlendModeMultiply"
        },
        {
            "trigger": "BattleReportGetButtonText",
            "contents": "BattleReportGetButtonText(${1:int inBattleReportId})"
        },
        {
            "trigger": "c_dataTypeUnitGroup",
            "contents": "c_dataTypeUnitGroup"
        },
        {
            "trigger": "c_unitCargoSpaceUsed",
            "contents": "c_unitCargoSpaceUsed"
        },
        {
            "trigger": "TextureGetSlotName",
            "contents": "TextureGetSlotName(${1:string textureLink})"
        },
        {
            "trigger": "c_boardIconPosRight",
            "contents": "c_boardIconPosRight"
        },
        {
            "trigger": "UnitAbilityReset",
            "contents": "UnitAbilityReset(${1:unit inUnit}, ${2:abilcmd inAbilCmd}, ${3:int inLocation})"
        },
        {
            "trigger": "c_triggerImageTypeNone",
            "contents": "c_triggerImageTypeNone"
        },
        {
            "trigger": "EventDialogControl",
            "contents": "EventDialogControl()"
        },
        {
            "trigger": "c_triggerControlPropertyTeamColor",
            "contents": "c_triggerControlPropertyTeamColor"
        },
        {
            "trigger": "StringEqual",
            "contents": "StringEqual(${1:string s1}, ${2:string s2}, ${3:bool caseSens})"
        },
        {
            "trigger": "ResearchItemSetMovieFilePath",
            "contents": "ResearchItemSetMovieFilePath(${1:int inResearchItemId}, ${2:string inFilePath})"
        },
        {
            "trigger": "PlayerAddCooldown",
            "contents": "PlayerAddCooldown(${1:int inPlayer}, ${2:string inCooldown}, ${3:fixed inVal})"
        },
        {
            "trigger": "StorySetChange",
            "contents": "StorySetChange()"
        },
        {
            "trigger": "c_keyM",
            "contents": "c_keyM"
        },
        {
            "trigger": "c_playerGroupAlly",
            "contents": "c_playerGroupAlly"
        },
        {
            "trigger": "SoundPause",
            "contents": "SoundPause(${1:sound s}, ${2:bool pause})"
        },
        {
            "trigger": "c_cameraMoveReasonKeyScroll",
            "contents": "c_cameraMoveReasonKeyScroll"
        },
        {
            "trigger": "BoardItemSetBackgroundColor",
            "contents": "BoardItemSetBackgroundColor(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:color inColor})"
        },
        {
            "trigger": "c_textureSlotComponentSpecular",
            "contents": "c_textureSlotComponentSpecular"
        },
        {
            "trigger": "c_keyJ",
            "contents": "c_keyJ"
        },
        {
            "trigger": "SoundWait",
            "contents": "SoundWait(${1:sound s}, ${2:fixed offset}, ${3:int offsetType})"
        },
        {
            "trigger": "TimerRestart",
            "contents": "TimerRestart(${1:timer t})"
        },
        {
            "trigger": "UnitInventoryLastCreated",
            "contents": "UnitInventoryLastCreated()"
        },
        {
            "trigger": "StringSub",
            "contents": "StringSub(${1:string s}, ${2:int start}, ${3:int end})"
        },
        {
            "trigger": "UnitIsHarvesting",
            "contents": "UnitIsHarvesting(${1:unit inUnit}, ${2:int inResource})"
        },
        {
            "trigger": "PlanetPanelGetContactButtonState",
            "contents": "PlanetPanelGetContactButtonState(${1:int player})"
        },
        {
            "trigger": "DataTableGetPlayerGroup",
            "contents": "DataTableGetPlayerGroup(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_playerPropCustomCollected",
            "contents": "c_playerPropCustomCollected"
        },
        {
            "trigger": "ConversationReplyDestroy",
            "contents": "ConversationReplyDestroy(${1:int intId}, ${2:int replyId})"
        },
        {
            "trigger": "PointSetHeight",
            "contents": "PointSetHeight(${1:point p}, ${2:fixed inHeight})"
        },
        {
            "trigger": "UIShowCinematicText",
            "contents": "UIShowCinematicText(${1:playergroup inPlayers}, ${2:text inMessageText}, ${3:fixed inTimeBetweenCharacters}, ${4:fixed inMaxTime}, ${5:soundlink inSoundLink})"
        },
        {
            "trigger": "c_triggerControlEventTypeClick",
            "contents": "c_triggerControlEventTypeClick"
        },
        {
            "trigger": "c_cameraMoveReasonTown",
            "contents": "c_cameraMoveReasonTown"
        },
        {
            "trigger": "UnitRefFromVariable",
            "contents": "UnitRefFromVariable(${1:string v})"
        },
        {
            "trigger": "RegionGetAttachUnit",
            "contents": "RegionGetAttachUnit(${1:region r})"
        },
        {
            "trigger": "UnitGroup",
            "contents": "UnitGroup(${1:string type}, ${2:int player}, ${3:region r}, ${4:unitfilter filter}, ${5:int maxCount})"
        },
        {
            "trigger": "DataTableGetWaveTarget",
            "contents": "DataTableGetWaveTarget(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "TechTreeAbilityIsAllowed",
            "contents": "TechTreeAbilityIsAllowed(${1:int player}, ${2:abilcmd inAbilCmd})"
        },
        {
            "trigger": "PlanetPanelSetBackgroundImage",
            "contents": "PlanetPanelSetBackgroundImage(${1:playergroup players}, ${2:string inFilePath})"
        },
        {
            "trigger": "PlayerRace",
            "contents": "PlayerRace(${1:int inPlayer})"
        },
        {
            "trigger": "DialogSetVisible",
            "contents": "DialogSetVisible(${1:int dialog}, ${2:playergroup players}, ${3:bool isVisible})"
        },
        {
            "trigger": "UnitGroupSearch",
            "contents": "UnitGroupSearch(${1:string type}, ${2:int player}, ${3:point p}, ${4:fixed radius}, ${5:unitfilter filter}, ${6:int maxCount})"
        },
        {
            "trigger": "UnitTypeIsAffectedByUpgrade",
            "contents": "UnitTypeIsAffectedByUpgrade(${1:string inUnitType}, ${2:string inUpgrade})"
        },
        {
            "trigger": "c_catalogFieldTypeIntSigned",
            "contents": "c_catalogFieldTypeIntSigned"
        },
        {
            "trigger": "PathSetDestinationUnit",
            "contents": "PathSetDestinationUnit(${1:int inPathId}, ${2:unit inUnit})"
        },
        {
            "trigger": "UnitGetPropertyInt",
            "contents": "UnitGetPropertyInt(${1:unit inUnit}, ${2:int inProp}, ${3:bool inCurrent})"
        },
        {
            "trigger": "c_buildMenuLateGame",
            "contents": "c_buildMenuLateGame"
        },
        {
            "trigger": "BoardItemSetProgressShow",
            "contents": "BoardItemSetProgressShow(${1:int inBoard}, ${2:int inCol}, ${3:int inRow}, ${4:bool inShow})"
        },
        {
            "trigger": "c_unitStateSelectable",
            "contents": "c_unitStateSelectable"
        },
        {
            "trigger": "MakeMsgTextureVideoSetTime",
            "contents": "MakeMsgTextureVideoSetTime(${1:string slotName}, ${2:int slotComponent}, ${3:fixed time})"
        },
        {
            "trigger": "UnitBehaviorAddCooldown",
            "contents": "UnitBehaviorAddCooldown(${1:unit inUnit}, ${2:string inBehavior}, ${3:string inCooldown}, ${4:fixed inVal})"
        },
        {
            "trigger": "ModelAnimationLoad",
            "contents": "ModelAnimationLoad(${1:string modelPath}, ${2:string animPath})"
        },
        {
            "trigger": "c_dataTypeWaveTarget",
            "contents": "c_dataTypeWaveTarget"
        },
        {
            "trigger": "OrderTargetingPoint",
            "contents": "OrderTargetingPoint(${1:abilcmd inAbilCmd}, ${2:point inPoint})"
        },
        {
            "trigger": "Order",
            "contents": "Order(${1:abilcmd inAbilCmd})"
        },
        {
            "trigger": "UnitBehaviorSpawn",
            "contents": "UnitBehaviorSpawn(${1:unit inUnit}, ${2:string inBehavior}, ${3:int inCount})"
        },
        {
            "trigger": "DialogControlCreate",
            "contents": "DialogControlCreate(${1:int dialog}, ${2:int type})"
        },
        {
            "trigger": "PurchaseGroupDestroyAll",
            "contents": "PurchaseGroupDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "ConversationReplyGetText",
            "contents": "ConversationReplyGetText(${1:int intId}, ${2:int replyId})"
        },
        {
            "trigger": "c_gameCheatDefeat",
            "contents": "c_gameCheatDefeat"
        },
        {
            "trigger": "c_unitStateVisionSuppressed",
            "contents": "c_unitStateVisionSuppressed"
        },
        {
            "trigger": "UnitGroupSelected",
            "contents": "UnitGroupSelected(${1:int inPlayer})"
        },
        {
            "trigger": "c_unitInventoryChangePicksUp",
            "contents": "c_unitInventoryChangePicksUp"
        },
        {
            "trigger": "BankLoad",
            "contents": "BankLoad(${1:string name}, ${2:int player})"
        },
        {
            "trigger": "c_gameCheatResearch",
            "contents": "c_gameCheatResearch"
        },
        {
            "trigger": "TriggerAddEventCheatUsed",
            "contents": "TriggerAddEventCheatUsed(${1:trigger t}, ${2:int player}, ${3:int inCheat})"
        },
        {
            "trigger": "BoardTitleSetAlignment",
            "contents": "BoardTitleSetAlignment(${1:int inBoard}, ${2:int inAlign}, ${3:int inIconPos})"
        },
        {
            "trigger": "c_stringBegin",
            "contents": "c_stringBegin"
        },
        {
            "trigger": "BankConditionEvaluate",
            "contents": "BankConditionEvaluate(${1:int player}, ${2:string bankCondition})"
        },
        {
            "trigger": "GameGetGlobalTimeScale",
            "contents": "GameGetGlobalTimeScale()"
        },
        {
            "trigger": "UnitRallyPointCount",
            "contents": "UnitRallyPointCount(${1:unit inUnit})"
        },
        {
            "trigger": "PurchaseCategoryDestroy",
            "contents": "PurchaseCategoryDestroy(${1:int inPurchaseCategoryId})"
        },
        {
            "trigger": "c_triggerControlPropertyColor",
            "contents": "c_triggerControlPropertyColor"
        },
        {
            "trigger": "DataTableGetWaveInfo",
            "contents": "DataTableGetWaveInfo(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "UISetCursorVisible",
            "contents": "UISetCursorVisible(${1:playergroup players}, ${2:bool isCursorVisible})"
        },
        {
            "trigger": "DialogSetEnabled",
            "contents": "DialogSetEnabled(${1:int dialog}, ${2:bool isEnabled})"
        },
        {
            "trigger": "DataTableSetPing",
            "contents": "DataTableSetPing(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "DataTableGetUnitGroup",
            "contents": "DataTableGetUnitGroup(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "ConversationDataResetNodeState",
            "contents": "ConversationDataResetNodeState(${1:string convId})"
        },
        {
            "trigger": "TransmissionSource",
            "contents": "TransmissionSource()"
        },
        {
            "trigger": "UIShowCustomDialog",
            "contents": "UIShowCustomDialog(${1:playergroup inPlayers}, ${2:int inType}, ${3:text inTitle}, ${4:text inText}, ${5:bool pause})"
        },
        {
            "trigger": "c_syncFrameTypeAllianceButton",
            "contents": "c_syncFrameTypeAllianceButton"
        },
        {
            "trigger": "UnitAgent",
            "contents": "UnitAgent(${1:unit inUnit}, ${2:int inPlayer})"
        },
        {
            "trigger": "c_gameResultDefeat",
            "contents": "c_gameResultDefeat"
        },
        {
            "trigger": "c_unitPropShieldsExpected",
            "contents": "c_unitPropShieldsExpected"
        },
        {
            "trigger": "c_playerPropOperSetTo",
            "contents": "c_playerPropOperSetTo"
        },
        {
            "trigger": "c_techCountInProgressOrBetter",
            "contents": "c_techCountInProgressOrBetter"
        },
        {
            "trigger": "c_playerPropSuppliesLimit",
            "contents": "c_playerPropSuppliesLimit"
        },
        {
            "trigger": "CatalogFieldCount",
            "contents": "CatalogFieldCount(${1:string scope})"
        },
        {
            "trigger": "c_gameMenuDialogRestartDifficultyPulldown",
            "contents": "c_gameMenuDialogRestartDifficultyPulldown"
        },
        {
            "trigger": "DataTableSetControl",
            "contents": "DataTableSetControl(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "DialogGetChannel",
            "contents": "DialogGetChannel(${1:int dialog})"
        },
        {
            "trigger": "c_colorComponentRed",
            "contents": "c_colorComponentRed"
        },
        {
            "trigger": "ResearchItemDestroyAll",
            "contents": "ResearchItemDestroyAll(${1:playergroup inPlayerGroup})"
        },
        {
            "trigger": "c_unitStateUnderConstruction",
            "contents": "c_unitStateUnderConstruction"
        },
        {
            "trigger": "StringCase",
            "contents": "StringCase(${1:string s}, ${2:bool upper})"
        },
        {
            "trigger": "c_triggerControlPropertyInvalid",
            "contents": "c_triggerControlPropertyInvalid"
        },
        {
            "trigger": "PathGetLineTileLength",
            "contents": "PathGetLineTileLength(${1:int inPathId}, ${2:int inLocation})"
        },
        {
            "trigger": "UnitSetCursor",
            "contents": "UnitSetCursor(${1:unit inUnit}, ${2:string cursorLink})"
        },
        {
            "trigger": "c_alignLeft",
            "contents": "c_alignLeft"
        },
        {
            "trigger": "c_objectiveStateHidden",
            "contents": "c_objectiveStateHidden"
        },
        {
            "trigger": "TextTagSetAlignment",
            "contents": "TextTagSetAlignment(${1:int inTag}, ${2:int inHoriz}, ${3:int inVert})"
        },
        {
            "trigger": "PurchaseCategoryCreate",
            "contents": "PurchaseCategoryCreate(${1:playergroup inPlayerGroup}, ${2:int inSlot})"
        },
        {
            "trigger": "GameSetSpeedValueMinimum",
            "contents": "GameSetSpeedValueMinimum(${1:int speed})"
        },
        {
            "trigger": "FogSetStartHeight",
            "contents": "FogSetStartHeight(${1:fixed h})"
        },
        {
            "trigger": "c_keyNone",
            "contents": "c_keyNone"
        },
        {
            "trigger": "SoundSetReverb",
            "contents": "SoundSetReverb(${1:string inReverbLink}, ${2:fixed inDuration}, ${3:bool inAmbient}, ${4:bool inGlobal})"
        },
        {
            "trigger": "ConversationDataStateImageEdge",
            "contents": "ConversationDataStateImageEdge(${1:string stateIndex})"
        },
        {
            "trigger": "BankKeyRemove",
            "contents": "BankKeyRemove(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "c_boardWidthAuto",
            "contents": "c_boardWidthAuto"
        },
        {
            "trigger": "TriggerAddEventSelectedPurchaseItemChanged",
            "contents": "TriggerAddEventSelectedPurchaseItemChanged(${1:trigger t}, ${2:int player}, ${3:int inPurchaseItemId})"
        },
        {
            "trigger": "c_unitInventoryCountEmpty",
            "contents": "c_unitInventoryCountEmpty"
        },
        {
            "trigger": "PlanetSetSelected",
            "contents": "PlanetSetSelected(${1:playergroup inPlayerGroup}, ${2:int inPlanetId})"
        },
        {
            "trigger": "ActorScopeGetText",
            "contents": "ActorScopeGetText(${1:actorscope as})"
        },
        {
            "trigger": "RegionAddRect",
            "contents": "RegionAddRect(${1:region r}, ${2:bool positive}, ${3:fixed minx}, ${4:fixed miny}, ${5:fixed maxx}, ${6:fixed maxy})"
        },
        {
            "trigger": "c_playerStateCooldownsPaused",
            "contents": "c_playerStateCooldownsPaused"
        },
        {
            "trigger": "GameIsExaminable",
            "contents": "GameIsExaminable()"
        },
        {
            "trigger": "c_creepSpeedDecay",
            "contents": "c_creepSpeedDecay"
        },
        {
            "trigger": "c_unitBehaviorFlagCountdown",
            "contents": "c_unitBehaviorFlagCountdown"
        },
        {
            "trigger": "EventGameMenuItemSelected",
            "contents": "EventGameMenuItemSelected()"
        },
        {
            "trigger": "VisEnable",
            "contents": "VisEnable(${1:int visType}, ${2:bool enable})"
        },
        {
            "trigger": "ConversationDataPreloadLinesQueue",
            "contents": "ConversationDataPreloadLinesQueue(${1:string convId})"
        },
        {
            "trigger": "c_keyF",
            "contents": "c_keyF"
        },
        {
            "trigger": "UnitInventoryItem",
            "contents": "UnitInventoryItem(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_keyNumPad9",
            "contents": "c_keyNumPad9"
        },
        {
            "trigger": "c_triggerControlEventTypeAny",
            "contents": "c_triggerControlEventTypeAny"
        },
        {
            "trigger": "ObjectiveGetDescription",
            "contents": "ObjectiveGetDescription(${1:int inObjective})"
        },
        {
            "trigger": "TechTreeUnitHelpDefault",
            "contents": "TechTreeUnitHelpDefault(${1:int player}, ${2:bool display})"
        },
        {
            "trigger": "c_alignCenter",
            "contents": "c_alignCenter"
        },
        {
            "trigger": "c_dataTypeSoundLink",
            "contents": "c_dataTypeSoundLink"
        },
        {
            "trigger": "c_playerStateFoodIgnored",
            "contents": "c_playerStateFoodIgnored"
        },
        {
            "trigger": "ResearchCategorySetLastLevel",
            "contents": "ResearchCategorySetLastLevel(${1:int inResearchCategoryId}, ${2:int inLevel})"
        },
        {
            "trigger": "TechTreeUnitProducesUpgradeCount",
            "contents": "TechTreeUnitProducesUpgradeCount(${1:string unitType})"
        },
        {
            "trigger": "c_cmdStateNoShields",
            "contents": "c_cmdStateNoShields"
        },
        {
            "trigger": "UserDataGetGameLink",
            "contents": "UserDataGetGameLink(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_dataTypeCinematic",
            "contents": "c_dataTypeCinematic"
        },
        {
            "trigger": "c_cameraPositionEye",
            "contents": "c_cameraPositionEye"
        },
        {
            "trigger": "EventUnitDamageAmount",
            "contents": "EventUnitDamageAmount()"
        },
        {
            "trigger": "StringToInt",
            "contents": "StringToInt(${1:string x})"
        },
        {
            "trigger": "BattleReportGetBonusTitle",
            "contents": "BattleReportGetBonusTitle(${1:int inBattleReportId})"
        },
        {
            "trigger": "UnitTypeFromString",
            "contents": "UnitTypeFromString(${1:string inString})"
        },
        {
            "trigger": "UnitGroupLoopStep",
            "contents": "UnitGroupLoopStep()"
        },
        {
            "trigger": "TechTreeUnitAllow",
            "contents": "TechTreeUnitAllow(${1:int player}, ${2:string unitType}, ${3:bool allow})"
        },
        {
            "trigger": "PointsInRange",
            "contents": "PointsInRange(${1:point p1}, ${2:point p2}, ${3:fixed range})"
        },
        {
            "trigger": "UnitTypeTestAttribute",
            "contents": "UnitTypeTestAttribute(${1:string inUnitType}, ${2:int inAttribute})"
        },
        {
            "trigger": "c_placementTestIgnoreBlockersMask",
            "contents": "c_placementTestIgnoreBlockersMask"
        },
        {
            "trigger": "c_anchorBottomRight",
            "contents": "c_anchorBottomRight"
        },
        {
            "trigger": "c_spendLocationAbility",
            "contents": "c_spendLocationAbility"
        },
        {
            "trigger": "c_nydusLinkCopyright",
            "contents": "c_nydusLinkCopyright"
        },
        {
            "trigger": "CameraGetTarget",
            "contents": "CameraGetTarget(${1:int player})"
        },
        {
            "trigger": "PortraitSetCamera",
            "contents": "PortraitSetCamera(${1:int p}, ${2:string cameraName})"
        },
        {
            "trigger": "c_stringEnd",
            "contents": "c_stringEnd"
        },
        {
            "trigger": "UserDataSetGameLink",
            "contents": "UserDataSetGameLink(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "PurchaseItemSetSlot",
            "contents": "PurchaseItemSetSlot(${1:int inPurchaseItemId}, ${2:int inSlot})"
        },
        {
            "trigger": "UnitSetPosition",
            "contents": "UnitSetPosition(${1:unit inUnit}, ${2:point inPos}, ${3:bool blend})"
        },
        {
            "trigger": "c_gameCheatAny",
            "contents": "c_gameCheatAny"
        },
        {
            "trigger": "PlayerPauseAllCharges",
            "contents": "PlayerPauseAllCharges(${1:int inPlayer}, ${2:bool inPause})"
        },
        {
            "trigger": "c_animTimeVariantAsDuration",
            "contents": "c_animTimeVariantAsDuration"
        },
        {
            "trigger": "UnitCount",
            "contents": "UnitCount(${1:string type}, ${2:int player}, ${3:region r}, ${4:unitfilter filter}, ${5:int maxCount})"
        },
        {
            "trigger": "UnitValidateEffectUnit",
            "contents": "UnitValidateEffectUnit(${1:unit inUnit}, ${2:string inEffect}, ${3:unit inTarget})"
        },
        {
            "trigger": "AbilityCommandGetAbility",
            "contents": "AbilityCommandGetAbility(${1:abilcmd inAbilCmd})"
        },
        {
            "trigger": "UnitOrderHasAbil",
            "contents": "UnitOrderHasAbil(${1:unit inUnit}, ${2:string abilLink})"
        },
        {
            "trigger": "UIAlert",
            "contents": "UIAlert(${1:string alert}, ${2:int player}, ${3:text message}, ${4:string icon})"
        },
        {
            "trigger": "c_cameraPositionBoth",
            "contents": "c_cameraPositionBoth"
        },
        {
            "trigger": "TriggerAddEventAbortMission",
            "contents": "TriggerAddEventAbortMission(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_transmissionDurationDefault",
            "contents": "c_transmissionDurationDefault"
        },
        {
            "trigger": "BattleReportSetResearchText",
            "contents": "BattleReportSetResearchText(${1:int inBattleReportId}, ${2:text inText})"
        },
        {
            "trigger": "c_triggerControlTypeUnitStatusDurationBar",
            "contents": "c_triggerControlTypeUnitStatusDurationBar"
        },
        {
            "trigger": "UserDataInstance",
            "contents": "UserDataInstance(${1:string inType}, ${2:int inIndex})"
        },
        {
            "trigger": "c_triggerControlTypeOffscreenUnit",
            "contents": "c_triggerControlTypeOffscreenUnit"
        },
        {
            "trigger": "UnitTypeAnimationLoad",
            "contents": "UnitTypeAnimationLoad(${1:string inUnitType}, ${2:string animPath})"
        },
        {
            "trigger": "OrderSetFlag",
            "contents": "OrderSetFlag(${1:order inOrder}, ${2:int inFlag}, ${3:bool inValue})"
        },
        {
            "trigger": "c_unitAbilStageCancel",
            "contents": "c_unitAbilStageCancel"
        },
        {
            "trigger": "ConversationDataStateIndexCount",
            "contents": "ConversationDataStateIndexCount(${1:string inStateId})"
        },
        {
            "trigger": "c_unitAllianceEnemy",
            "contents": "c_unitAllianceEnemy"
        },
        {
            "trigger": "PingGetTooltip",
            "contents": "PingGetTooltip(${1:int p})"
        },
        {
            "trigger": "c_invalidResearchCategoryId",
            "contents": "c_invalidResearchCategoryId"
        },
        {
            "trigger": "PlayerGetPropertyFixed",
            "contents": "PlayerGetPropertyFixed(${1:int inPlayer}, ${2:int inProp})"
        },
        {
            "trigger": "c_unitProgressTypeSpecialize",
            "contents": "c_unitProgressTypeSpecialize"
        },
        {
            "trigger": "UnitRefFromUnit",
            "contents": "UnitRefFromUnit(${1:unit u})"
        },
        {
            "trigger": "c_keyEnter",
            "contents": "c_keyEnter"
        },
        {
            "trigger": "PlayerBeaconRequestedMinerals",
            "contents": "PlayerBeaconRequestedMinerals(${1:int inPlayer})"
        },
        {
            "trigger": "SoundLink",
            "contents": "SoundLink(${1:string soundId}, ${2:int soundIndex})"
        },
        {
            "trigger": "MercenaryCreate",
            "contents": "MercenaryCreate(${1:playergroup inPlayerGroup}, ${2:int inState})"
        },
        {
            "trigger": "CameraSetData",
            "contents": "CameraSetData(${1:playergroup players}, ${2:string cameraId})"
        },
        {
            "trigger": "ResearchTierCreate",
            "contents": "ResearchTierCreate(${1:playergroup inPlayerGroup}, ${2:int inResearchCategoryId}, ${3:int inSlot})"
        },
        {
            "trigger": "c_unitAllianceAllyExcludeSelf",
            "contents": "c_unitAllianceAllyExcludeSelf"
        },
        {
            "trigger": "c_cmdStateCanAutoCast",
            "contents": "c_cmdStateCanAutoCast"
        },
        {
            "trigger": "c_gameOverVictory",
            "contents": "c_gameOverVictory"
        },
        {
            "trigger": "PingSetUseUnitVisibility",
            "contents": "PingSetUseUnitVisibility(${1:int p}, ${2:bool useUnitVisibility})"
        },
        {
            "trigger": "c_cmdStateMaxCharges",
            "contents": "c_cmdStateMaxCharges"
        },
        {
            "trigger": "PlanetPanelSetContactButtonState",
            "contents": "PlanetPanelSetContactButtonState(${1:playergroup players}, ${2:int inState})"
        },
        {
            "trigger": "c_unitInventoryChangeReceives",
            "contents": "c_unitInventoryChangeReceives"
        },
        {
            "trigger": "ConversationReplyDestroyAll",
            "contents": "ConversationReplyDestroyAll(${1:int intId})"
        },
        {
            "trigger": "DataTableSetCinematic",
            "contents": "DataTableSetCinematic(${1:bool global}, ${2:string name}, ${3:int val})"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton10",
            "contents": "c_gameMenuDialogGenericButton10"
        },
        {
            "trigger": "c_unitProgressTypeRevive",
            "contents": "c_unitProgressTypeRevive"
        },
        {
            "trigger": "CutsceneCreate",
            "contents": "CutsceneCreate(${1:string inFilePath}, ${2:point pos}, ${3:playergroup players}, ${4:bool inAutoPlay})"
        },
        {
            "trigger": "UserDataFieldIsModifiable",
            "contents": "UserDataFieldIsModifiable(${1:string inType}, ${2:string inField})"
        },
        {
            "trigger": "c_actorRefSpaceGlobal",
            "contents": "c_actorRefSpaceGlobal"
        },
        {
            "trigger": "SoundChannelDSPRemove",
            "contents": "SoundChannelDSPRemove(${1:playergroup players}, ${2:int channel}, ${3:string dsp})"
        },
        {
            "trigger": "PurchaseItemPurchase",
            "contents": "PurchaseItemPurchase(${1:int inPurchaseItemId})"
        },
        {
            "trigger": "TextureGetSlotComponent",
            "contents": "TextureGetSlotComponent(${1:string textureLink})"
        },
        {
            "trigger": "DialogGetAnchor",
            "contents": "DialogGetAnchor(${1:int dialog})"
        },
        {
            "trigger": "DataTableGetUnitRef",
            "contents": "DataTableGetUnitRef(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "BoardTitleSetColor",
            "contents": "BoardTitleSetColor(${1:int inBoard}, ${2:int inType}, ${3:color inColor})"
        },
        {
            "trigger": "c_triggerControlPropertyDesaturated",
            "contents": "c_triggerControlPropertyDesaturated"
        },
        {
            "trigger": "c_textTagTimePermanent",
            "contents": "c_textTagTimePermanent"
        },
        {
            "trigger": "c_nydusLinkForum",
            "contents": "c_nydusLinkForum"
        },
        {
            "trigger": "SoundSetPosition",
            "contents": "SoundSetPosition(${1:sound s}, ${2:point position}, ${3:fixed height})"
        },
        {
            "trigger": "UnitWeaponGet",
            "contents": "UnitWeaponGet(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_dataTypeAbilCmd",
            "contents": "c_dataTypeAbilCmd"
        },
        {
            "trigger": "c_playerPropSuppliesUsed",
            "contents": "c_playerPropSuppliesUsed"
        },
        {
            "trigger": "c_triggerControlPropertyClickOnDown",
            "contents": "c_triggerControlPropertyClickOnDown"
        },
        {
            "trigger": "c_keyU",
            "contents": "c_keyU"
        },
        {
            "trigger": "UISetMode",
            "contents": "UISetMode(${1:playergroup players}, ${2:int mode}, ${3:fixed duration})"
        },
        {
            "trigger": "BattleReportLastCreated",
            "contents": "BattleReportLastCreated()"
        },
        {
            "trigger": "CampaignProgressSetText",
            "contents": "CampaignProgressSetText(${1:playergroup players}, ${2:string campaignId}, ${3:text inText})"
        },
        {
            "trigger": "UnitStatsStop",
            "contents": "UnitStatsStop()"
        },
        {
            "trigger": "TriggerExecute",
            "contents": "TriggerExecute(${1:trigger t}, ${2:bool testConds}, ${3:bool waitUntilDone})"
        },
        {
            "trigger": "BoardMinimizeShow",
            "contents": "BoardMinimizeShow(${1:int inBoard}, ${2:playergroup inPlayers}, ${3:bool inShow})"
        },
        {
            "trigger": "c_timeReal",
            "contents": "c_timeReal"
        },
        {
            "trigger": "c_syncFrameTypeRoomPanel",
            "contents": "c_syncFrameTypeRoomPanel"
        },
        {
            "trigger": "c_playerPropOperAdd",
            "contents": "c_playerPropOperAdd"
        },
        {
            "trigger": "MakeMsgAnimBracketStop",
            "contents": "MakeMsgAnimBracketStop(${1:string animName}, ${2:int animTransitionFlags}, ${3:fixed timeVariant}, ${4:int timeType})"
        },
        {
            "trigger": "PurchaseGroupCreate",
            "contents": "PurchaseGroupCreate(${1:playergroup inPlayerGroup}, ${2:int inPurchaseCategoryId}, ${3:int inSlot})"
        },
        {
            "trigger": "GameAddChargeUsed",
            "contents": "GameAddChargeUsed(${1:string inCharge}, ${2:fixed inVal})"
        },
        {
            "trigger": "c_triggerControlPropertyUnitLink",
            "contents": "c_triggerControlPropertyUnitLink"
        },
        {
            "trigger": "PlanetPanelSetBackButtonShortcut",
            "contents": "PlanetPanelSetBackButtonShortcut(${1:playergroup players}, ${2:text inText})"
        },
        {
            "trigger": "c_effectAmountSplashed",
            "contents": "c_effectAmountSplashed"
        },
        {
            "trigger": "BoardSetRowCount",
            "contents": "BoardSetRowCount(${1:int inBoard}, ${2:int inRows})"
        },
        {
            "trigger": "UnitSetTeamColorIndex",
            "contents": "UnitSetTeamColorIndex(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "UnitInventoryRemove",
            "contents": "UnitInventoryRemove(${1:unit inItem})"
        },
        {
            "trigger": "c_cameraValueFocalDepth",
            "contents": "c_cameraValueFocalDepth"
        },
        {
            "trigger": "c_cmdStateCantSpend",
            "contents": "c_cmdStateCantSpend"
        },
        {
            "trigger": "TriggerAddEventResearchPanelPurchase",
            "contents": "TriggerAddEventResearchPanelPurchase(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "CutsceneSetFilter",
            "contents": "CutsceneSetFilter(${1:int inCutscene}, ${2:string inFilter})"
        },
        {
            "trigger": "DialogControlIsVisible",
            "contents": "DialogControlIsVisible(${1:int control}, ${2:int player})"
        },
        {
            "trigger": "c_keyO",
            "contents": "c_keyO"
        },
        {
            "trigger": "c_syncFrameTypeErrorDisplayPanel",
            "contents": "c_syncFrameTypeErrorDisplayPanel"
        },
        {
            "trigger": "TriggerAddEventUnitGainExperience",
            "contents": "TriggerAddEventUnitGainExperience(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "FogSetDisableAtUltra",
            "contents": "FogSetDisableAtUltra(${1:bool f})"
        },
        {
            "trigger": "UnitQueueGetProperty",
            "contents": "UnitQueueGetProperty(${1:unit inUnit}, ${2:int inProp})"
        },
        {
            "trigger": "UnitXPTotal",
            "contents": "UnitXPTotal(${1:unit inUnit})"
        },
        {
            "trigger": "DataTableGetText",
            "contents": "DataTableGetText(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "TriggerAddEventSaveGameDone",
            "contents": "TriggerAddEventSaveGameDone(${1:trigger t})"
        },
        {
            "trigger": "TriggerAddEventUnitDamaged",
            "contents": "TriggerAddEventUnitDamaged(${1:trigger inTrigger}, ${2:unitref inUnit}, ${3:int inDamageType}, ${4:int inDamageFatal}, ${5:string inEffect})"
        },
        {
            "trigger": "TriggerAddEventPlayerAllianceChange",
            "contents": "TriggerAddEventPlayerAllianceChange(${1:trigger inTrigger}, ${2:int player})"
        },
        {
            "trigger": "c_triggerControlPropertyValue",
            "contents": "c_triggerControlPropertyValue"
        },
        {
            "trigger": "c_timerWindowColorBackground",
            "contents": "c_timerWindowColorBackground"
        },
        {
            "trigger": "c_dataTypePing",
            "contents": "c_dataTypePing"
        },
        {
            "trigger": "GameAttributeGameValue",
            "contents": "GameAttributeGameValue(${1:string name})"
        },
        {
            "trigger": "PlayerGroupAll",
            "contents": "PlayerGroupAll()"
        },
        {
            "trigger": "c_dataTypeReply",
            "contents": "c_dataTypeReply"
        },
        {
            "trigger": "c_conversationSkipNone",
            "contents": "c_conversationSkipNone"
        },
        {
            "trigger": "UIAlertPoint",
            "contents": "UIAlertPoint(${1:string alert}, ${2:int player}, ${3:text message}, ${4:string icon}, ${5:point p})"
        },
        {
            "trigger": "PlanetLastCreated",
            "contents": "PlanetLastCreated()"
        },
        {
            "trigger": "DialogGetRelativeDialog",
            "contents": "DialogGetRelativeDialog(${1:int dialog})"
        },
        {
            "trigger": "PlayerBeaconSetAutoCast",
            "contents": "PlayerBeaconSetAutoCast(${1:int inPlayer}, ${2:int inBeacon}, ${3:bool enable})"
        },
        {
            "trigger": "c_syncFrameTypeTipAlertPanel",
            "contents": "c_syncFrameTypeTipAlertPanel"
        },
        {
            "trigger": "EventUnitRangeUnit",
            "contents": "EventUnitRangeUnit()"
        },
        {
            "trigger": "PlayerScoreValueGetAsFixed",
            "contents": "PlayerScoreValueGetAsFixed(${1:int player}, ${2:string value})"
        },
        {
            "trigger": "ModelAnimationLoadOverriding",
            "contents": "ModelAnimationLoadOverriding(${1:string modelPath}, ${2:string animPath})"
        },
        {
            "trigger": "TriggerResetCounts",
            "contents": "TriggerResetCounts(${1:trigger t})"
        },
        {
            "trigger": "UIUnitColorStyleClearOverride",
            "contents": "UIUnitColorStyleClearOverride(${1:playergroup inPlayers})"
        },
        {
            "trigger": "c_animTransitionFlagInstant",
            "contents": "c_animTransitionFlagInstant"
        },
        {
            "trigger": "DataTableGetRevealer",
            "contents": "DataTableGetRevealer(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "BattleReportGetDialogControl",
            "contents": "BattleReportGetDialogControl()"
        },
        {
            "trigger": "TriggerAddEventUnitSelected",
            "contents": "TriggerAddEventUnitSelected(${1:trigger t}, ${2:unitref u}, ${3:int player}, ${4:bool state})"
        },
        {
            "trigger": "c_mouseButtonNone",
            "contents": "c_mouseButtonNone"
        },
        {
            "trigger": "PathDestroy",
            "contents": "PathDestroy(${1:int inPathId})"
        },
        {
            "trigger": "c_triggerBlendModeDarken",
            "contents": "c_triggerBlendModeDarken"
        },
        {
            "trigger": "PortraitSetMouseTarget",
            "contents": "PortraitSetMouseTarget(${1:int p}, ${2:bool inMouseTarget})"
        },
        {
            "trigger": "c_triggerObservedTypeDefaultObservedPlayerId",
            "contents": "c_triggerObservedTypeDefaultObservedPlayerId"
        },
        {
            "trigger": "c_unitCargoUnitCount",
            "contents": "c_unitCargoUnitCount"
        },
        {
            "trigger": "PlanetSetResearchText",
            "contents": "PlanetSetResearchText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "PingSetPlayerGroup",
            "contents": "PingSetPlayerGroup(${1:int p}, ${2:playergroup playerMask})"
        },
        {
            "trigger": "c_unitAbilStageAll",
            "contents": "c_unitAbilStageAll"
        },
        {
            "trigger": "UnitAbilityEnable",
            "contents": "UnitAbilityEnable(${1:unit inUnit}, ${2:string inAbil}, ${3:bool inEnable})"
        },
        {
            "trigger": "RegionFromId",
            "contents": "RegionFromId(${1:int id})"
        },
        {
            "trigger": "PurchaseCategoryLastCreated",
            "contents": "PurchaseCategoryLastCreated()"
        },
        {
            "trigger": "EventPlayerWave",
            "contents": "EventPlayerWave()"
        },
        {
            "trigger": "c_wtcSine",
            "contents": "c_wtcSine"
        },
        {
            "trigger": "TriggerDebugWindowOpen",
            "contents": "TriggerDebugWindowOpen(${1:bool open})"
        },
        {
            "trigger": "MarkerSetCastingPlayer",
            "contents": "MarkerSetCastingPlayer(${1:marker m}, ${2:int player})"
        },
        {
            "trigger": "UnitGroupAdd",
            "contents": "UnitGroupAdd(${1:unitgroup inGroup}, ${2:unit inUnit})"
        },
        {
            "trigger": "UnitClearInfoText",
            "contents": "UnitClearInfoText(${1:unit inUnit})"
        },
        {
            "trigger": "TriggerAddEventVictoryPanelPlayMissionAgain",
            "contents": "TriggerAddEventVictoryPanelPlayMissionAgain(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "TriggerAddEventPurchaseExit",
            "contents": "TriggerAddEventPurchaseExit(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_catalogFieldTypeStruct",
            "contents": "c_catalogFieldTypeStruct"
        },
        {
            "trigger": "UnitStatusBarOverride",
            "contents": "UnitStatusBarOverride(${1:unit inUnit}, ${2:int inGroup})"
        },
        {
            "trigger": "BoardMinimizeSetState",
            "contents": "BoardMinimizeSetState(${1:int inBoard}, ${2:playergroup inPlayers}, ${3:bool inVal})"
        },
        {
            "trigger": "BoardSetGroupCount",
            "contents": "BoardSetGroupCount(${1:int inBoard}, ${2:int inGroups})"
        },
        {
            "trigger": "UnitLevel",
            "contents": "UnitLevel(${1:unit inUnit})"
        },
        {
            "trigger": "c_keyLeft",
            "contents": "c_keyLeft"
        },
        {
            "trigger": "c_keyL",
            "contents": "c_keyL"
        },
        {
            "trigger": "c_syncFrameTypeMissionTimePanel",
            "contents": "c_syncFrameTypeMissionTimePanel"
        },
        {
            "trigger": "c_mouseButtonLeft",
            "contents": "c_mouseButtonLeft"
        },
        {
            "trigger": "PlayerBeaconIsFromUser",
            "contents": "PlayerBeaconIsFromUser(${1:int inPlayer}, ${2:int inBeacon})"
        },
        {
            "trigger": "TriggerDebugSetTypeFile",
            "contents": "TriggerDebugSetTypeFile(${1:int type}, ${2:string file})"
        },
        {
            "trigger": "c_triggerControlEventTypeTextChanged",
            "contents": "c_triggerControlEventTypeTextChanged"
        },
        {
            "trigger": "c_catalogFieldTypeString",
            "contents": "c_catalogFieldTypeString"
        },
        {
            "trigger": "c_uiCommandAllowSmartClick",
            "contents": "c_uiCommandAllowSmartClick"
        },
        {
            "trigger": "c_unitPropLifePercent",
            "contents": "c_unitPropLifePercent"
        },
        {
            "trigger": "c_unitAbilStageQueue",
            "contents": "c_unitAbilStageQueue"
        },
        {
            "trigger": "TriggerAddEventUnitSpecializeProgress",
            "contents": "TriggerAddEventUnitSpecializeProgress(${1:trigger t}, ${2:unitref u}, ${3:int stage})"
        },
        {
            "trigger": "HelpPanelLastCreatedHelpItem",
            "contents": "HelpPanelLastCreatedHelpItem()"
        },
        {
            "trigger": "c_unitPropNormal",
            "contents": "c_unitPropNormal"
        },
        {
            "trigger": "DialogControlGetPropertyAsText",
            "contents": "DialogControlGetPropertyAsText(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_uiCommandAllowInfoPanel",
            "contents": "c_uiCommandAllowInfoPanel"
        },
        {
            "trigger": "c_animBracketStartFlagContentNonLooping",
            "contents": "c_animBracketStartFlagContentNonLooping"
        },
        {
            "trigger": "MakeMsgAnimGroupRemove",
            "contents": "MakeMsgAnimGroupRemove(${1:string animGroup}, ${2:int animTransitionFlags}, ${3:fixed timeVariant}, ${4:int timeType})"
        },
        {
            "trigger": "BoardTitleSetClickable",
            "contents": "BoardTitleSetClickable(${1:int inBoard}, ${2:bool inClickable})"
        },
        {
            "trigger": "BankValueGetAsFixed",
            "contents": "BankValueGetAsFixed(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "BankValueGetAsFlag",
            "contents": "BankValueGetAsFlag(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "SoundtrackDefault",
            "contents": "SoundtrackDefault(${1:playergroup players}, ${2:int category}, ${3:string soundtrack}, ${4:int cue}, ${5:int index})"
        },
        {
            "trigger": "c_textTagColorBackground",
            "contents": "c_textTagColorBackground"
        },
        {
            "trigger": "MinF",
            "contents": "MinF(${1:fixed x1}, ${2:fixed x2})"
        },
        {
            "trigger": "UnitSetState",
            "contents": "UnitSetState(${1:unit inUnit}, ${2:int inState}, ${3:bool inVal})"
        },
        {
            "trigger": "UIAlertUnit",
            "contents": "UIAlertUnit(${1:string alert}, ${2:int player}, ${3:text message}, ${4:string icon}, ${5:unit u})"
        },
        {
            "trigger": "TextTagSetFogVisibility",
            "contents": "TextTagSetFogVisibility(${1:int inTag}, ${2:int inVisType})"
        },
        {
            "trigger": "ActorTextureGroupApplyGlobal",
            "contents": "ActorTextureGroupApplyGlobal(${1:string textureProps})"
        },
        {
            "trigger": "c_playerPropVespeneCollected",
            "contents": "c_playerPropVespeneCollected"
        },
        {
            "trigger": "c_unitPropCarriedVespene",
            "contents": "c_unitPropCarriedVespene"
        },
        {
            "trigger": "ObjectiveSetName",
            "contents": "ObjectiveSetName(${1:int inObjective}, ${2:text inName})"
        },
        {
            "trigger": "UnitControlGroupAddUnit",
            "contents": "UnitControlGroupAddUnit(${1:int inPlayer}, ${2:int inGroup}, ${3:unit inUnit})"
        },
        {
            "trigger": "PurchaseGroupSetPlayerGroup",
            "contents": "PurchaseGroupSetPlayerGroup(${1:int inPurchaseGroupId}, ${2:playergroup inPlayerGroup})"
        },
        {
            "trigger": "ObjectiveSetLast",
            "contents": "ObjectiveSetLast(${1:int inObjective})"
        },
        {
            "trigger": "MakeMsgSetPhysicsState",
            "contents": "MakeMsgSetPhysicsState(${1:int physicsState}, ${2:fixed delayLow}, ${3:fixed delayHigh})"
        },
        {
            "trigger": "DialogControlSetVisible",
            "contents": "DialogControlSetVisible(${1:int control}, ${2:playergroup players}, ${3:bool isVisible})"
        },
        {
            "trigger": "BattleReportGetShownInMissionTotal",
            "contents": "BattleReportGetShownInMissionTotal(${1:int inBattleReportId})"
        },
        {
            "trigger": "ObjectiveDestroyAll",
            "contents": "ObjectiveDestroyAll(${1:playergroup inPlayers})"
        },
        {
            "trigger": "BankValueSetFromString",
            "contents": "BankValueSetFromString(${1:bank b}, ${2:string section}, ${3:string key}, ${4:string value})"
        },
        {
            "trigger": "SoundtrackStopCurrent",
            "contents": "SoundtrackStopCurrent(${1:playergroup players}, ${2:int category}, ${3:bool fade})"
        },
        {
            "trigger": "DataTableSetWaveInfo",
            "contents": "DataTableSetWaveInfo(${1:bool global}, ${2:string name}, ${3:waveinfo val})"
        },
        {
            "trigger": "TriggerAddEventUnitRevive",
            "contents": "TriggerAddEventUnitRevive(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "RegionEmpty",
            "contents": "RegionEmpty()"
        },
        {
            "trigger": "BattleReportGetBestTimeText",
            "contents": "BattleReportGetBestTimeText(${1:int inBattleReportId})"
        },
        {
            "trigger": "TriggerAddEventResearchPanelExit",
            "contents": "TriggerAddEventResearchPanelExit(${1:trigger t}, ${2:int player})"
        },
        {
            "trigger": "c_environmentWater",
            "contents": "c_environmentWater"
        },
        {
            "trigger": "UnitBehaviorSetDurationRemaining",
            "contents": "UnitBehaviorSetDurationRemaining(${1:unit inUnit}, ${2:string inBehavior}, ${3:fixed inDuration})"
        },
        {
            "trigger": "UnitSetInfoText",
            "contents": "UnitSetInfoText(${1:unit inUnit}, ${2:text info}, ${3:text tip}, ${4:text subTip})"
        },
        {
            "trigger": "EventUnitTarget",
            "contents": "EventUnitTarget()"
        },
        {
            "trigger": "UnitOrderIsValid",
            "contents": "UnitOrderIsValid(${1:unit inUnit}, ${2:order inOrder})"
        },
        {
            "trigger": "BattleReportGetButtonImage",
            "contents": "BattleReportGetButtonImage(${1:int inBattleReportId})"
        },
        {
            "trigger": "SoundPortraitModel",
            "contents": "SoundPortraitModel(${1:soundlink link})"
        },
        {
            "trigger": "PathSetLineTexture",
            "contents": "PathSetLineTexture(${1:int inPathId}, ${2:int inLocation}, ${3:string inTexture})"
        },
        {
            "trigger": "c_cmdStateCooldown",
            "contents": "c_cmdStateCooldown"
        },
        {
            "trigger": "PointFromId",
            "contents": "PointFromId(${1:int id})"
        },
        {
            "trigger": "BankName",
            "contents": "BankName(${1:bank b})"
        },
        {
            "trigger": "UnitCargo",
            "contents": "UnitCargo(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "c_triggerControlTypeLabel",
            "contents": "c_triggerControlTypeLabel"
        },
        {
            "trigger": "RegionSetCenter",
            "contents": "RegionSetCenter(${1:region r}, ${2:point p})"
        },
        {
            "trigger": "PlanetGetSelected",
            "contents": "PlanetGetSelected(${1:int player})"
        },
        {
            "trigger": "c_nydusLinkStore",
            "contents": "c_nydusLinkStore"
        },
        {
            "trigger": "UnitBehaviorAdd",
            "contents": "UnitBehaviorAdd(${1:unit inUnit}, ${2:string inBehavior}, ${3:unit inCaster}, ${4:int inCount})"
        },
        {
            "trigger": "UnitBehaviorCount",
            "contents": "UnitBehaviorCount(${1:unit inUnit}, ${2:string inBehavior})"
        },
        {
            "trigger": "c_playerGroupAny",
            "contents": "c_playerGroupAny"
        },
        {
            "trigger": "UnitControlGroupRemoveUnits",
            "contents": "UnitControlGroupRemoveUnits(${1:int inPlayer}, ${2:int inGroup}, ${3:unitgroup inUnits})"
        },
        {
            "trigger": "UnitRallyPointTargetCount",
            "contents": "UnitRallyPointTargetCount(${1:unit inUnit}, ${2:int inPoint})"
        },
        {
            "trigger": "TransmissionSourceFromUnit",
            "contents": "TransmissionSourceFromUnit(${1:unit u}, ${2:bool flash}, ${3:bool overridePortrait}, ${4:string anim})"
        },
        {
            "trigger": "PlanetSetRewardTitle",
            "contents": "PlanetSetRewardTitle(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "UnitLastCreatedGroup",
            "contents": "UnitLastCreatedGroup()"
        },
        {
            "trigger": "TextTagSetTextShadow",
            "contents": "TextTagSetTextShadow(${1:int inTag}, ${2:bool inVal})"
        },
        {
            "trigger": "UnitGroupLoopCurrent",
            "contents": "UnitGroupLoopCurrent()"
        },
        {
            "trigger": "UserDataGetCompare",
            "contents": "UserDataGetCompare(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_keyComma",
            "contents": "c_keyComma"
        },
        {
            "trigger": "c_purchaseCategoryStateHidden",
            "contents": "c_purchaseCategoryStateHidden"
        },
        {
            "trigger": "UnitGetType",
            "contents": "UnitGetType(${1:unit inUnit})"
        },
        {
            "trigger": "c_keyAlt",
            "contents": "c_keyAlt"
        },
        {
            "trigger": "DialogGetTitle",
            "contents": "DialogGetTitle(${1:int dialog})"
        },
        {
            "trigger": "GameSetGlobalTimeScale",
            "contents": "GameSetGlobalTimeScale(${1:fixed timeScale})"
        },
        {
            "trigger": "PortraitSetVisible",
            "contents": "PortraitSetVisible(${1:int p}, ${2:playergroup players}, ${3:bool isVisible}, ${4:bool forceVisible})"
        },
        {
            "trigger": "PingGetUnit",
            "contents": "PingGetUnit(${1:int p})"
        },
        {
            "trigger": "PointPathingCliffLevel",
            "contents": "PointPathingCliffLevel(${1:point p})"
        },
        {
            "trigger": "PlayerCreateEffectPoint",
            "contents": "PlayerCreateEffectPoint(${1:int inPlayer}, ${2:string inEffect}, ${3:point inTarget})"
        },
        {
            "trigger": "Pow2I",
            "contents": "Pow2I(${1:fixed x})"
        },
        {
            "trigger": "DialogControlSelectItem",
            "contents": "DialogControlSelectItem(${1:int control}, ${2:playergroup players}, ${3:int index})"
        },
        {
            "trigger": "BankValueGetAsText",
            "contents": "BankValueGetAsText(${1:bank b}, ${2:string section}, ${3:string key})"
        },
        {
            "trigger": "EventUnitAbility",
            "contents": "EventUnitAbility()"
        },
        {
            "trigger": "c_effectAmountHealed",
            "contents": "c_effectAmountHealed"
        },
        {
            "trigger": "c_boardStateShowMinimize",
            "contents": "c_boardStateShowMinimize"
        },
        {
            "trigger": "TriggerAddEventKeyPressed",
            "contents": "TriggerAddEventKeyPressed(${1:trigger t}, ${2:int player}, ${3:int key}, ${4:bool down}, ${5:int s}, ${6:int c}, ${7:int a})"
        },
        {
            "trigger": "SoundSetFactors",
            "contents": "SoundSetFactors(${1:fixed distance}, ${2:fixed doppler}, ${3:fixed rolloff})"
        },
        {
            "trigger": "UnitWeaponSpeedMultiplier",
            "contents": "UnitWeaponSpeedMultiplier(${1:unit inUnit}, ${2:int inIndex})"
        },
        {
            "trigger": "UnitAbilityMaxLevel",
            "contents": "UnitAbilityMaxLevel(${1:unit inUnit}, ${2:string inAbil})"
        },
        {
            "trigger": "c_unitFilterExcluded",
            "contents": "c_unitFilterExcluded"
        },
        {
            "trigger": "UnitAbilityAddChargeRegen",
            "contents": "UnitAbilityAddChargeRegen(${1:unit inUnit}, ${2:string inAbil}, ${3:string inCharge}, ${4:fixed inVal})"
        },
        {
            "trigger": "GameTimeOfDayPause",
            "contents": "GameTimeOfDayPause(${1:bool inPause})"
        },
        {
            "trigger": "c_playerStateAbortEnabled",
            "contents": "c_playerStateAbortEnabled"
        },
        {
            "trigger": "c_localSelectionTypeHeroPanel",
            "contents": "c_localSelectionTypeHeroPanel"
        },
        {
            "trigger": "c_syncFrameTypeInfoPanel",
            "contents": "c_syncFrameTypeInfoPanel"
        },
        {
            "trigger": "ResearchItemSetRecentlyPurchased",
            "contents": "ResearchItemSetRecentlyPurchased(${1:int inResearchItemId}, ${2:bool inRecent})"
        },
        {
            "trigger": "MeleeInitResourcesForPlayer",
            "contents": "MeleeInitResourcesForPlayer(${1:int player}, ${2:string race})"
        },
        {
            "trigger": "c_triggerControlPropertyAnchor",
            "contents": "c_triggerControlPropertyAnchor"
        },
        {
            "trigger": "c_unitCountAlive",
            "contents": "c_unitCountAlive"
        },
        {
            "trigger": "c_gameMenuDialogGenericButton9",
            "contents": "c_gameMenuDialogGenericButton9"
        },
        {
            "trigger": "ObjectiveSetState",
            "contents": "ObjectiveSetState(${1:int inObjective}, ${2:int inState})"
        },
        {
            "trigger": "OrderGetTargetPosition",
            "contents": "OrderGetTargetPosition(${1:order inOrder})"
        },
        {
            "trigger": "c_boardStateShowing",
            "contents": "c_boardStateShowing"
        },
        {
            "trigger": "c_triggerControlPropertyLight",
            "contents": "c_triggerControlPropertyLight"
        },
        {
            "trigger": "CeilingI",
            "contents": "CeilingI(${1:fixed x})"
        },
        {
            "trigger": "UnitGroupFilterAlliance",
            "contents": "UnitGroupFilterAlliance(${1:unitgroup g}, ${2:int player}, ${3:int alliance}, ${4:int maxCount})"
        },
        {
            "trigger": "DataTableGetInt",
            "contents": "DataTableGetInt(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "ModI",
            "contents": "ModI(${1:int x}, ${2:int m})"
        },
        {
            "trigger": "SetNextMissionDifficulty",
            "contents": "SetNextMissionDifficulty(${1:playergroup inPlayerGroup}, ${2:int inDifficultyLevel})"
        },
        {
            "trigger": "DialogControlGetPropertyAsColor",
            "contents": "DialogControlGetPropertyAsColor(${1:int control}, ${2:int property}, ${3:int player})"
        },
        {
            "trigger": "c_gameMenuDIalogHotkeysButton",
            "contents": "c_gameMenuDIalogHotkeysButton"
        },
        {
            "trigger": "GameGetSpeedValue",
            "contents": "GameGetSpeedValue()"
        },
        {
            "trigger": "MarkerSetCastingUnit",
            "contents": "MarkerSetCastingUnit(${1:marker m}, ${2:unit u})"
        },
        {
            "trigger": "c_fadeStyleSine",
            "contents": "c_fadeStyleSine"
        },
        {
            "trigger": "AchievementsDisable",
            "contents": "AchievementsDisable(${1:int player})"
        },
        {
            "trigger": "OrderTargetingItem",
            "contents": "OrderTargetingItem(${1:abilcmd inAbilCmd}, ${2:unit inItem})"
        },
        {
            "trigger": "BoolToInt",
            "contents": "BoolToInt(${1:bool f})"
        },
        {
            "trigger": "BattleReportGetDifficultyLevelBestTimeText",
            "contents": "BattleReportGetDifficultyLevelBestTimeText(${1:int inBattleReportId}, ${2:int inDifficultyLevel})"
        },
        {
            "trigger": "RegionGetCenter",
            "contents": "RegionGetCenter(${1:region r})"
        },
        {
            "trigger": "PlayerGroupCount",
            "contents": "PlayerGroupCount(${1:playergroup inGroup})"
        },
        {
            "trigger": "c_textureVideoPlayFlagSynced",
            "contents": "c_textureVideoPlayFlagSynced"
        },
        {
            "trigger": "c_gameCheatTerrazine",
            "contents": "c_gameCheatTerrazine"
        },
        {
            "trigger": "c_keyE",
            "contents": "c_keyE"
        },
        {
            "trigger": "EventUnitOrder",
            "contents": "EventUnitOrder()"
        },
        {
            "trigger": "SoundtrackSetContinuous",
            "contents": "SoundtrackSetContinuous(${1:playergroup players}, ${2:int category}, ${3:bool continuous})"
        },
        {
            "trigger": "UISetResourceTradeCountdownTime",
            "contents": "UISetResourceTradeCountdownTime(${1:int time})"
        },
        {
            "trigger": "UnitTypeMoveBlockersFromPoint",
            "contents": "UnitTypeMoveBlockersFromPoint(${1:string inType}, ${2:int inPlayer}, ${3:point inSource}, ${4:fixed inRange})"
        },
        {
            "trigger": "BoardDestroy",
            "contents": "BoardDestroy(${1:int inBoard})"
        },
        {
            "trigger": "TimerWindowVisible",
            "contents": "TimerWindowVisible(${1:int inWindow}, ${2:int inPlayer})"
        },
        {
            "trigger": "UserDataSetActor",
            "contents": "UserDataSetActor(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex}, ${5:string inValue})"
        },
        {
            "trigger": "UserDataGetUnit",
            "contents": "UserDataGetUnit(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "c_dataTypePlanet",
            "contents": "c_dataTypePlanet"
        },
        {
            "trigger": "c_unitStatePaused",
            "contents": "c_unitStatePaused"
        },
        {
            "trigger": "c_timeGame",
            "contents": "c_timeGame"
        },
        {
            "trigger": "DataTableSetSoundLink",
            "contents": "DataTableSetSoundLink(${1:bool global}, ${2:string name}, ${3:soundlink val})"
        },
        {
            "trigger": "UnitTechTreeUpgradeCount",
            "contents": "UnitTechTreeUpgradeCount(${1:unit inUnit}, ${2:string upgradeType}, ${3:int countType})"
        },
        {
            "trigger": "c_purchaseItemStateEnabled",
            "contents": "c_purchaseItemStateEnabled"
        },
        {
            "trigger": "EventMouseClickedPosZWorld",
            "contents": "EventMouseClickedPosZWorld()"
        },
        {
            "trigger": "GameMapDescription",
            "contents": "GameMapDescription()"
        },
        {
            "trigger": "TriggerAddEventGameMenuItemSelected",
            "contents": "TriggerAddEventGameMenuItemSelected(${1:trigger t}, ${2:int player}, ${3:int gameMenuIndex})"
        },
        {
            "trigger": "PlayerSetState",
            "contents": "PlayerSetState(${1:int inPlayer}, ${2:int inState}, ${3:bool inVal})"
        },
        {
            "trigger": "TextTagShowBackground",
            "contents": "TextTagShowBackground(${1:int inTag}, ${2:bool inShow})"
        },
        {
            "trigger": "ConversationCreate",
            "contents": "ConversationCreate(${1:bool visible})"
        },
        {
            "trigger": "TriggerAddEventTriggerSkipped",
            "contents": "TriggerAddEventTriggerSkipped(${1:trigger t}, ${2:int inPlayer}, ${3:trigger inTrigger})"
        },
        {
            "trigger": "TriggerQueueClear",
            "contents": "TriggerQueueClear(${1:int activeOption})"
        },
        {
            "trigger": "BattleReportSetSceneImage",
            "contents": "BattleReportSetSceneImage(${1:int inBattleReportId}, ${2:string inImage})"
        },
        {
            "trigger": "ConversationReplyCreate",
            "contents": "ConversationReplyCreate(${1:int intId}, ${2:text inText})"
        },
        {
            "trigger": "GameIsDebugOptionSet",
            "contents": "GameIsDebugOptionSet(${1:string inOptionName}, ${2:int player})"
        },
        {
            "trigger": "c_gameCheatTimeOfDay",
            "contents": "c_gameCheatTimeOfDay"
        },
        {
            "trigger": "c_timerWindowStyleHorizontalTimeTitle",
            "contents": "c_timerWindowStyleHorizontalTimeTitle"
        },
        {
            "trigger": "MakeMsgTextureVideoSetFrame",
            "contents": "MakeMsgTextureVideoSetFrame(${1:string slotName}, ${2:int slotComponent}, ${3:int frame})"
        },
        {
            "trigger": "VisRevealerCreate",
            "contents": "VisRevealerCreate(${1:int player}, ${2:region area})"
        },
        {
            "trigger": "c_triggerControlTypeCheckBox",
            "contents": "c_triggerControlTypeCheckBox"
        },
        {
            "trigger": "CatalogFieldTypeCategory",
            "contents": "CatalogFieldTypeCategory(${1:string scope}, ${2:string field})"
        },
        {
            "trigger": "c_unitProgressStageStart",
            "contents": "c_unitProgressStageStart"
        },
        {
            "trigger": "c_triggerControlPropertyEditText",
            "contents": "c_triggerControlPropertyEditText"
        },
        {
            "trigger": "c_unitInventoryChangeMoves",
            "contents": "c_unitInventoryChangeMoves"
        },
        {
            "trigger": "FormatDuration",
            "contents": "FormatDuration(${1:int seconds})"
        },
        {
            "trigger": "PlayerGroupSingle",
            "contents": "PlayerGroupSingle(${1:int inPlayer})"
        },
        {
            "trigger": "c_unitDamageTypeAny",
            "contents": "c_unitDamageTypeAny"
        },
        {
            "trigger": "BankLastRestoredUnit",
            "contents": "BankLastRestoredUnit()"
        },
        {
            "trigger": "DialogGetTransparency",
            "contents": "DialogGetTransparency(${1:int dialog})"
        },
        {
            "trigger": "c_gameMenuDialogRestartButton",
            "contents": "c_gameMenuDialogRestartButton"
        },
        {
            "trigger": "c_triggerImageTypeHorizontalBorder",
            "contents": "c_triggerImageTypeHorizontalBorder"
        },
        {
            "trigger": "PortraitDestroy",
            "contents": "PortraitDestroy(${1:int p})"
        },
        {
            "trigger": "DataTableGetFixed",
            "contents": "DataTableGetFixed(${1:bool global}, ${2:string name})"
        },
        {
            "trigger": "c_syncFrameTypeInventoryPanel",
            "contents": "c_syncFrameTypeInventoryPanel"
        },
        {
            "trigger": "c_unitStateStatusBar",
            "contents": "c_unitStateStatusBar"
        },
        {
            "trigger": "UnitSetScale",
            "contents": "UnitSetScale(${1:unit inUnit}, ${2:fixed x}, ${3:fixed y}, ${4:fixed z})"
        },
        {
            "trigger": "c_triggerControlPropertyPaused",
            "contents": "c_triggerControlPropertyPaused"
        },
        {
            "trigger": "c_triggerControlPropertyMinValue",
            "contents": "c_triggerControlPropertyMinValue"
        },
        {
            "trigger": "c_unitStateIsTransport",
            "contents": "c_unitStateIsTransport"
        },
        {
            "trigger": "DifficultyNameCampaign",
            "contents": "DifficultyNameCampaign(${1:int inDifficulty})"
        },
        {
            "trigger": "TimerGetDuration",
            "contents": "TimerGetDuration(${1:timer t})"
        },
        {
            "trigger": "c_unitInventoryChangeUses",
            "contents": "c_unitInventoryChangeUses"
        },
        {
            "trigger": "EventPlayerEffectUsed",
            "contents": "EventPlayerEffectUsed()"
        },
        {
            "trigger": "PlanetSetDescriptionText",
            "contents": "PlanetSetDescriptionText(${1:int inPlanetId}, ${2:text inText})"
        },
        {
            "trigger": "c_triggerControlPropertyModel",
            "contents": "c_triggerControlPropertyModel"
        },
        {
            "trigger": "BattleReportSetButtonImage",
            "contents": "BattleReportSetButtonImage(${1:int inBattleReportId}, ${2:string inImage})"
        },
        {
            "trigger": "UISetMinimumLetterboxHeight",
            "contents": "UISetMinimumLetterboxHeight(${1:int inHeight})"
        },
        {
            "trigger": "c_animTimeVariantAsTimeScale",
            "contents": "c_animTimeVariantAsTimeScale"
        },
        {
            "trigger": "PlayerGetCooldown",
            "contents": "PlayerGetCooldown(${1:int inPlayer}, ${2:string inCooldown})"
        },
        {
            "trigger": "PingGetColor",
            "contents": "PingGetColor(${1:int p})"
        },
        {
            "trigger": "UserDataGetFixed",
            "contents": "UserDataGetFixed(${1:string inType}, ${2:string inInstance}, ${3:string inField}, ${4:int inIndex})"
        },
        {
            "trigger": "EventCutsceneId",
            "contents": "EventCutsceneId()"
        },
        {
            "trigger": "c_textTagColorEdgeEnd",
            "contents": "c_textTagColorEdgeEnd"
        },
        {
            "trigger": "c_dataTypeOrder",
            "contents": "c_dataTypeOrder"
        },
        {
            "trigger": "TriggerAddEventUnitAcquiredTarget",
            "contents": "TriggerAddEventUnitAcquiredTarget(${1:trigger t}, ${2:unitref u})"
        },
        {
            "trigger": "c_syncFrameTypeMercenaryPanel",
            "contents": "c_syncFrameTypeMercenaryPanel"
        },
        {
            "trigger": "PortraitGetGame",
            "contents": "PortraitGetGame()"
        },
        {
            "trigger": "c_triggerBlendModeAlpha",
            "contents": "c_triggerBlendModeAlpha"
        },
        {
            "trigger": "BankSectionRemove",
            "contents": "BankSectionRemove(${1:bank b}, ${2:string section})"
        },
        {
            "trigger": "c_unitAbilStageComplete",
            "contents": "c_unitAbilStageComplete"
        },
        {
            "trigger": "c_cmdStateHidden",
            "contents": "c_cmdStateHidden"
        },
        {
            "trigger": "RoundI",
            "contents": "RoundI(${1:fixed x})"
        },
        {
            "trigger": "CameraClearChannelOnPortrait",
            "contents": "CameraClearChannelOnPortrait(${1:int player}, ${2:int portraitId}, ${3:int channel})"
        },
        {
            "trigger": "ActorScopeLastCreated",
            "contents": "ActorScopeLastCreated()"
        },
        {
            "trigger": "c_anchorBottomLeft",
            "contents": "c_anchorBottomLeft"
        },
        {
            "trigger": "c_nydusLinkOnlineGuide",
            "contents": "c_nydusLinkOnlineGuide"
        },
        {
            "trigger": "GameIsMissionTimePaused",
            "contents": "GameIsMissionTimePaused()"
        },
        {
            "trigger": "c_triggerQueueRetain",
            "contents": "c_triggerQueueRetain"
        },
        {
            "trigger": "c_gameMenuDialogAchievementsButton",
            "contents": "c_gameMenuDialogAchievementsButton"
        }
    ]
}
